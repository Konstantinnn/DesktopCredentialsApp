//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Creds.TestCredentials {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MessageBase", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseMessageBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseAccountCancellation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseGetTermsAndConditions))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseMessageAccountBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseRetrieveCalls))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponsePostCustomerAccount))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseAdjustAccountMinimumTerm))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseRetrieveCustomerAccounts))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseRetrieveCustomerAccountsWithFees))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseNewPaySchedule))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseAdjustNextPaymentDate))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseAdjustDateOfPayment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseAdjustAccountLastAccess))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseAdjustAccountExternalAccountReferenceNo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseAdjustAccountNextPaymentDate))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseAdjustAccountTotalValue))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseAdjustAccountStartDate))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseStopPayment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponsePaymentCollected))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseChangePaymentMethod))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseInitiateRefund))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseRetrievePayMethodDetails))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseAdjustCatchUpPayment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseRetrieveAuditTrail))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseRetrievePaymentHistory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseRetrieveGetBPayTransactionsByDateRange))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseRetrievePaymentHistoryWithFees))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseRetrievePaymentHistoryCW))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseRetrievePaymentHistoryWithFeesCW))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseResumePayment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseAdjustAccountClientAddress))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseAdjustAccountClientDetails))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseAdjustGuarantorDetails))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseAdjustAccountClientEmail))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseAdjustAccountClientPhone))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseDeletePaySchedule))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseAdjustPaySchedule))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseAdjustSuspensionEndDate))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseSuspendAccount))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseAdjustAccountAppendNotes))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseAdjustPaymentInAdvance))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseAdjustAccountPaymentMethod))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseAdjustAccountFixedTerm))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseProcessCardPaymentForCustomerAccount))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseProcessRealTimeCardPayment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseGetFacilityAccountConfiguration))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseGetMonthlyCollections))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseAdjustAccountTerminationDate))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseGetClosedAccountsForDateRange))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseRetrieveOverdueStatusHistory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseGetPaymentToken))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseGetCasualPaymentToken))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseGetCasualPaymentsForDateRange))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseGetCasualPaymentsByPaymentRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseGetActiveAccounts))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseTransferCustomerAccount))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseGetPaymentHistoryByStatusForDateRange))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseGetPaymentHistoryStatusByAccountId))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestMessageBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestMessageFacilityBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestGetTermsAndConditions))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestGetFacilityAccountConfiguration))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestGetCasualPaymentToken))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestGetActiveAccounts))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestRetrieveCallsForDateRange))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestPostCustomerAccount))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestRetrieveCustomerAccountsForDateRange))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestRetrieveCustomerAccountsWithFeesForDateRange))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestRetrieveAuditTrailForDateRange))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestRetrievePaymentHistoryForDateRange))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestRetrieveGetBPayTransactionsByDateRange))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestRetrievePaymentHistoryWithFeesForDateRange))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestGetMonthlyCollections))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestGetClosedAccountsForDateRange))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestRetrieveOverdueStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestGetCasualPaymentsForDateRange))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestGetCasualPaymentsByPaymentRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestGetPaymentHistoryByStatusForDateRange))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestMessageByAccountIdBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestRetrieveCallsByAccountID))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestPostCustomerAccountForExistingCustomer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestRetrieveCustomerAccountByAccountID))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestRetrieveCustomerAccountWithFeesByAccountID))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestNewPaySchedule))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestAdjustNextPaymentDate))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestAdjustDateOfPayment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestAdjustAccountLastAccess))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestAdjustAccountExternalAccountReferenceNo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestAdjustAccountNextPaymentDate))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestAdjustAccountTotalValue))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestAdjustAccountMinimumTerm))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestAdjustAccountStartDate))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestStopPayment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestPaymentCollected))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestChangePaymentMethod))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestInitiateRefund))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestRetrievePayMethodDetails))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestAdjustCatchUpPayment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestRetrieveAuditTrailByAccountID))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestRetrievePaymentHistoryByAccountID))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestRetrievePaymentHistoryWithFeesByAccountID))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestResumePayment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestAdjustAccountClientAddress))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestAdjustAccountClientDetails))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestAdjustGuarantorDetails))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestAdjustAccountClientEmail))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestAdjustAccountClientPhone))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestDeletePaySchedule))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestAdjustPaySchedule))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestAdjustSuspensionEndDate))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestSuspendAccount))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestSuspendAccountBetweenDates))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestAdjustPaymentInAdvance))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestAdjustAccountPaymentMethod))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestAdjustAccountFixedTerm))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestAdjustAccountFixedTermAF))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestMessageForCardTransactionBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestProcessCardPaymentForCustomerAccount))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestProcessRealTimeCardPayment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestGetCardPaymentStatusForCustomerAccount))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestAdjustAccountAppendNotes))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestGetPaymentToken))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestTransferCustomerAccount))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestGetPaymentHistoryStatusByAccountId))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestAdjustAccountTerminationDate))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestAccountCancellation))]
    public partial class MessageBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateCreatedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateCreated {
            get {
                return this.DateCreatedField;
            }
            set {
                if ((this.DateCreatedField.Equals(value) != true)) {
                    this.DateCreatedField = value;
                    this.RaisePropertyChanged("DateCreated");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseMessageBase", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseAccountCancellation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseGetTermsAndConditions))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseMessageAccountBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseRetrieveCalls))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponsePostCustomerAccount))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseAdjustAccountMinimumTerm))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseRetrieveCustomerAccounts))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseRetrieveCustomerAccountsWithFees))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseNewPaySchedule))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseAdjustNextPaymentDate))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseAdjustDateOfPayment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseAdjustAccountLastAccess))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseAdjustAccountExternalAccountReferenceNo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseAdjustAccountNextPaymentDate))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseAdjustAccountTotalValue))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseAdjustAccountStartDate))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseStopPayment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponsePaymentCollected))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseChangePaymentMethod))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseInitiateRefund))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseRetrievePayMethodDetails))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseAdjustCatchUpPayment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseRetrieveAuditTrail))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseRetrievePaymentHistory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseRetrieveGetBPayTransactionsByDateRange))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseRetrievePaymentHistoryWithFees))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseRetrievePaymentHistoryCW))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseRetrievePaymentHistoryWithFeesCW))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseResumePayment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseAdjustAccountClientAddress))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseAdjustAccountClientDetails))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseAdjustGuarantorDetails))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseAdjustAccountClientEmail))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseAdjustAccountClientPhone))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseDeletePaySchedule))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseAdjustPaySchedule))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseAdjustSuspensionEndDate))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseSuspendAccount))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseAdjustAccountAppendNotes))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseAdjustPaymentInAdvance))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseAdjustAccountPaymentMethod))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseAdjustAccountFixedTerm))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseProcessCardPaymentForCustomerAccount))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseProcessRealTimeCardPayment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseGetFacilityAccountConfiguration))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseGetMonthlyCollections))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseAdjustAccountTerminationDate))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseGetClosedAccountsForDateRange))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseRetrieveOverdueStatusHistory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseGetPaymentToken))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseGetCasualPaymentToken))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseGetCasualPaymentsForDateRange))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseGetCasualPaymentsByPaymentRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseGetActiveAccounts))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseTransferCustomerAccount))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseGetPaymentHistoryByStatusForDateRange))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseGetPaymentHistoryStatusByAccountId))]
    public partial class ResponseMessageBase : Creds.TestCredentials.MessageBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.ResponseMessageNote[] ResponseNotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.MessageStatus StatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.ResponseMessageNote[] ResponseNotes {
            get {
                return this.ResponseNotesField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponseNotesField, value) != true)) {
                    this.ResponseNotesField = value;
                    this.RaisePropertyChanged("ResponseNotes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.MessageStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseAccountCancellation", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class ResponseAccountCancellation : Creds.TestCredentials.ResponseMessageBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseGetTermsAndConditions", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class ResponseGetTermsAndConditions : Creds.TestCredentials.ResponseMessageBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TermsAndConditionsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TermsAndConditions {
            get {
                return this.TermsAndConditionsField;
            }
            set {
                if ((object.ReferenceEquals(this.TermsAndConditionsField, value) != true)) {
                    this.TermsAndConditionsField = value;
                    this.RaisePropertyChanged("TermsAndConditions");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseMessageAccountBase", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseRetrieveCalls))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponsePostCustomerAccount))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ResponseAdjustAccountMinimumTerm))]
    public partial class ResponseMessageAccountBase : Creds.TestCredentials.ResponseMessageBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountReferenceNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalAccountReferenceNoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountReferenceNo {
            get {
                return this.AccountReferenceNoField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountReferenceNoField, value) != true)) {
                    this.AccountReferenceNoField = value;
                    this.RaisePropertyChanged("AccountReferenceNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalAccountReferenceNo {
            get {
                return this.ExternalAccountReferenceNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalAccountReferenceNoField, value) != true)) {
                    this.ExternalAccountReferenceNoField = value;
                    this.RaisePropertyChanged("ExternalAccountReferenceNo");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseRetrieveCalls", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class ResponseRetrieveCalls : Creds.TestCredentials.ResponseMessageAccountBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.CallNote[] CallNotesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.CallNote[] CallNotes {
            get {
                return this.CallNotesField;
            }
            set {
                if ((object.ReferenceEquals(this.CallNotesField, value) != true)) {
                    this.CallNotesField = value;
                    this.RaisePropertyChanged("CallNotes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponsePostCustomerAccount", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class ResponsePostCustomerAccount : Creds.TestCredentials.ResponseMessageAccountBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseAdjustAccountMinimumTerm", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class ResponseAdjustAccountMinimumTerm : Creds.TestCredentials.ResponseMessageAccountBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal NewTotalValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal NewTotalValue {
            get {
                return this.NewTotalValueField;
            }
            set {
                if ((this.NewTotalValueField.Equals(value) != true)) {
                    this.NewTotalValueField = value;
                    this.RaisePropertyChanged("NewTotalValue");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseRetrieveCustomerAccounts", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class ResponseRetrieveCustomerAccounts : Creds.TestCredentials.ResponseMessageBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.Account[] AccountsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.Account[] Accounts {
            get {
                return this.AccountsField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountsField, value) != true)) {
                    this.AccountsField = value;
                    this.RaisePropertyChanged("Accounts");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseRetrieveCustomerAccountsWithFees", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class ResponseRetrieveCustomerAccountsWithFees : Creds.TestCredentials.ResponseMessageBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.AccountWithFees[] AccountsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.AccountWithFees[] Accounts {
            get {
                return this.AccountsField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountsField, value) != true)) {
                    this.AccountsField = value;
                    this.RaisePropertyChanged("Accounts");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseNewPaySchedule", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class ResponseNewPaySchedule : Creds.TestCredentials.ResponseMessageBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewScheduleIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewScheduleId {
            get {
                return this.NewScheduleIdField;
            }
            set {
                if ((object.ReferenceEquals(this.NewScheduleIdField, value) != true)) {
                    this.NewScheduleIdField = value;
                    this.RaisePropertyChanged("NewScheduleId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseAdjustNextPaymentDate", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class ResponseAdjustNextPaymentDate : Creds.TestCredentials.ResponseMessageBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseAdjustDateOfPayment", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class ResponseAdjustDateOfPayment : Creds.TestCredentials.ResponseMessageBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseAdjustAccountLastAccess", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class ResponseAdjustAccountLastAccess : Creds.TestCredentials.ResponseMessageBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseAdjustAccountExternalAccountReferenceNo", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class ResponseAdjustAccountExternalAccountReferenceNo : Creds.TestCredentials.ResponseMessageBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseAdjustAccountNextPaymentDate", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class ResponseAdjustAccountNextPaymentDate : Creds.TestCredentials.ResponseMessageBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseAdjustAccountTotalValue", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class ResponseAdjustAccountTotalValue : Creds.TestCredentials.ResponseMessageBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseAdjustAccountStartDate", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class ResponseAdjustAccountStartDate : Creds.TestCredentials.ResponseMessageBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseStopPayment", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class ResponseStopPayment : Creds.TestCredentials.ResponseMessageBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponsePaymentCollected", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class ResponsePaymentCollected : Creds.TestCredentials.ResponseMessageBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseChangePaymentMethod", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class ResponseChangePaymentMethod : Creds.TestCredentials.ResponseMessageBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseInitiateRefund", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class ResponseInitiateRefund : Creds.TestCredentials.ResponseMessageBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RefundRequestNumberField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RefundRequestNumber {
            get {
                return this.RefundRequestNumberField;
            }
            set {
                if ((this.RefundRequestNumberField.Equals(value) != true)) {
                    this.RefundRequestNumberField = value;
                    this.RaisePropertyChanged("RefundRequestNumber");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseRetrievePayMethodDetails", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class ResponseRetrievePayMethodDetails : Creds.TestCredentials.ResponseMessageBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.Paymethod PayMethodField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.Paymethod PayMethod {
            get {
                return this.PayMethodField;
            }
            set {
                if ((object.ReferenceEquals(this.PayMethodField, value) != true)) {
                    this.PayMethodField = value;
                    this.RaisePropertyChanged("PayMethod");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseAdjustCatchUpPayment", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class ResponseAdjustCatchUpPayment : Creds.TestCredentials.ResponseMessageBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseRetrieveAuditTrail", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class ResponseRetrieveAuditTrail : Creds.TestCredentials.ResponseMessageBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.Audit[] AuditsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.Audit[] Audits {
            get {
                return this.AuditsField;
            }
            set {
                if ((object.ReferenceEquals(this.AuditsField, value) != true)) {
                    this.AuditsField = value;
                    this.RaisePropertyChanged("Audits");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseRetrievePaymentHistory", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class ResponseRetrievePaymentHistory : Creds.TestCredentials.ResponseMessageBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.Payment[] PaymentsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.Payment[] Payments {
            get {
                return this.PaymentsField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentsField, value) != true)) {
                    this.PaymentsField = value;
                    this.RaisePropertyChanged("Payments");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseRetrieveGetBPayTransactionsByDateRange", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class ResponseRetrieveGetBPayTransactionsByDateRange : Creds.TestCredentials.ResponseMessageBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.BPayPayment[] PaymentsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.BPayPayment[] Payments {
            get {
                return this.PaymentsField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentsField, value) != true)) {
                    this.PaymentsField = value;
                    this.RaisePropertyChanged("Payments");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseRetrievePaymentHistoryWithFees", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class ResponseRetrievePaymentHistoryWithFees : Creds.TestCredentials.ResponseMessageBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.Payment[] PaymentsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.Payment[] Payments {
            get {
                return this.PaymentsField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentsField, value) != true)) {
                    this.PaymentsField = value;
                    this.RaisePropertyChanged("Payments");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseRetrievePaymentHistoryCW", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class ResponseRetrievePaymentHistoryCW : Creds.TestCredentials.ResponseMessageBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.PaymentCW[] PaymentsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.PaymentCW[] Payments {
            get {
                return this.PaymentsField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentsField, value) != true)) {
                    this.PaymentsField = value;
                    this.RaisePropertyChanged("Payments");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseRetrievePaymentHistoryWithFeesCW", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class ResponseRetrievePaymentHistoryWithFeesCW : Creds.TestCredentials.ResponseMessageBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.PaymentCW[] PaymentsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.PaymentCW[] Payments {
            get {
                return this.PaymentsField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentsField, value) != true)) {
                    this.PaymentsField = value;
                    this.RaisePropertyChanged("Payments");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseResumePayment", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class ResponseResumePayment : Creds.TestCredentials.ResponseMessageBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseAdjustAccountClientAddress", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class ResponseAdjustAccountClientAddress : Creds.TestCredentials.ResponseMessageBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseAdjustAccountClientDetails", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class ResponseAdjustAccountClientDetails : Creds.TestCredentials.ResponseMessageBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseAdjustGuarantorDetails", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class ResponseAdjustGuarantorDetails : Creds.TestCredentials.ResponseMessageBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseAdjustAccountClientEmail", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class ResponseAdjustAccountClientEmail : Creds.TestCredentials.ResponseMessageBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseAdjustAccountClientPhone", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class ResponseAdjustAccountClientPhone : Creds.TestCredentials.ResponseMessageBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseDeletePaySchedule", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class ResponseDeletePaySchedule : Creds.TestCredentials.ResponseMessageBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseAdjustPaySchedule", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class ResponseAdjustPaySchedule : Creds.TestCredentials.ResponseMessageBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseAdjustSuspensionEndDate", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class ResponseAdjustSuspensionEndDate : Creds.TestCredentials.ResponseMessageBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseSuspendAccount", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class ResponseSuspendAccount : Creds.TestCredentials.ResponseMessageBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseAdjustAccountAppendNotes", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class ResponseAdjustAccountAppendNotes : Creds.TestCredentials.ResponseMessageBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseAdjustPaymentInAdvance", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class ResponseAdjustPaymentInAdvance : Creds.TestCredentials.ResponseMessageBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseAdjustAccountPaymentMethod", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class ResponseAdjustAccountPaymentMethod : Creds.TestCredentials.ResponseMessageBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseAdjustAccountFixedTerm", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class ResponseAdjustAccountFixedTerm : Creds.TestCredentials.ResponseMessageBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MinTermAmountField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MinTermAmount {
            get {
                return this.MinTermAmountField;
            }
            set {
                if ((this.MinTermAmountField.Equals(value) != true)) {
                    this.MinTermAmountField = value;
                    this.RaisePropertyChanged("MinTermAmount");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseProcessCardPaymentForCustomerAccount", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class ResponseProcessCardPaymentForCustomerAccount : Creds.TestCredentials.ResponseMessageBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayerAuthenticationRequestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayerAuthenticationUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PaymentGatewayResponseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.TransactionStatus TransactionStatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayerAuthenticationRequest {
            get {
                return this.PayerAuthenticationRequestField;
            }
            set {
                if ((object.ReferenceEquals(this.PayerAuthenticationRequestField, value) != true)) {
                    this.PayerAuthenticationRequestField = value;
                    this.RaisePropertyChanged("PayerAuthenticationRequest");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayerAuthenticationUrl {
            get {
                return this.PayerAuthenticationUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.PayerAuthenticationUrlField, value) != true)) {
                    this.PayerAuthenticationUrlField = value;
                    this.RaisePropertyChanged("PayerAuthenticationUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PaymentGatewayResponse {
            get {
                return this.PaymentGatewayResponseField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentGatewayResponseField, value) != true)) {
                    this.PaymentGatewayResponseField = value;
                    this.RaisePropertyChanged("PaymentGatewayResponse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.TransactionStatus TransactionStatus {
            get {
                return this.TransactionStatusField;
            }
            set {
                if ((this.TransactionStatusField.Equals(value) != true)) {
                    this.TransactionStatusField = value;
                    this.RaisePropertyChanged("TransactionStatus");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseProcessRealTimeCardPayment", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class ResponseProcessRealTimeCardPayment : Creds.TestCredentials.ResponseMessageBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayerAuthenticationRequestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayerAuthenticationUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PaymentGatewayResponseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.TransactionStatus TransactionStatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayerAuthenticationRequest {
            get {
                return this.PayerAuthenticationRequestField;
            }
            set {
                if ((object.ReferenceEquals(this.PayerAuthenticationRequestField, value) != true)) {
                    this.PayerAuthenticationRequestField = value;
                    this.RaisePropertyChanged("PayerAuthenticationRequest");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayerAuthenticationUrl {
            get {
                return this.PayerAuthenticationUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.PayerAuthenticationUrlField, value) != true)) {
                    this.PayerAuthenticationUrlField = value;
                    this.RaisePropertyChanged("PayerAuthenticationUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PaymentGatewayResponse {
            get {
                return this.PaymentGatewayResponseField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentGatewayResponseField, value) != true)) {
                    this.PaymentGatewayResponseField = value;
                    this.RaisePropertyChanged("PaymentGatewayResponse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.TransactionStatus TransactionStatus {
            get {
                return this.TransactionStatusField;
            }
            set {
                if ((this.TransactionStatusField.Equals(value) != true)) {
                    this.TransactionStatusField = value;
                    this.RaisePropertyChanged("TransactionStatus");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseGetFacilityAccountConfiguration", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class ResponseGetFacilityAccountConfiguration : Creds.TestCredentials.ResponseMessageBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CCCommissionRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<Creds.TestCredentials.ChargeType> CCCommissionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal COCommissionRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<Creds.TestCredentials.ChargeType> COCommissionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DDCommissionRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<Creds.TestCredentials.ChargeType> DDCommissionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal EstablishmentFeeAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<Creds.TestCredentials.EstablishmentFeeStatus> EstablishmentFeePayerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal EstablishmentFeePercentField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CCCommissionRate {
            get {
                return this.CCCommissionRateField;
            }
            set {
                if ((this.CCCommissionRateField.Equals(value) != true)) {
                    this.CCCommissionRateField = value;
                    this.RaisePropertyChanged("CCCommissionRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<Creds.TestCredentials.ChargeType> CCCommissionType {
            get {
                return this.CCCommissionTypeField;
            }
            set {
                if ((this.CCCommissionTypeField.Equals(value) != true)) {
                    this.CCCommissionTypeField = value;
                    this.RaisePropertyChanged("CCCommissionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal COCommissionRate {
            get {
                return this.COCommissionRateField;
            }
            set {
                if ((this.COCommissionRateField.Equals(value) != true)) {
                    this.COCommissionRateField = value;
                    this.RaisePropertyChanged("COCommissionRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<Creds.TestCredentials.ChargeType> COCommissionType {
            get {
                return this.COCommissionTypeField;
            }
            set {
                if ((this.COCommissionTypeField.Equals(value) != true)) {
                    this.COCommissionTypeField = value;
                    this.RaisePropertyChanged("COCommissionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DDCommissionRate {
            get {
                return this.DDCommissionRateField;
            }
            set {
                if ((this.DDCommissionRateField.Equals(value) != true)) {
                    this.DDCommissionRateField = value;
                    this.RaisePropertyChanged("DDCommissionRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<Creds.TestCredentials.ChargeType> DDCommissionType {
            get {
                return this.DDCommissionTypeField;
            }
            set {
                if ((this.DDCommissionTypeField.Equals(value) != true)) {
                    this.DDCommissionTypeField = value;
                    this.RaisePropertyChanged("DDCommissionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal EstablishmentFeeAmount {
            get {
                return this.EstablishmentFeeAmountField;
            }
            set {
                if ((this.EstablishmentFeeAmountField.Equals(value) != true)) {
                    this.EstablishmentFeeAmountField = value;
                    this.RaisePropertyChanged("EstablishmentFeeAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<Creds.TestCredentials.EstablishmentFeeStatus> EstablishmentFeePayer {
            get {
                return this.EstablishmentFeePayerField;
            }
            set {
                if ((this.EstablishmentFeePayerField.Equals(value) != true)) {
                    this.EstablishmentFeePayerField = value;
                    this.RaisePropertyChanged("EstablishmentFeePayer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal EstablishmentFeePercent {
            get {
                return this.EstablishmentFeePercentField;
            }
            set {
                if ((this.EstablishmentFeePercentField.Equals(value) != true)) {
                    this.EstablishmentFeePercentField = value;
                    this.RaisePropertyChanged("EstablishmentFeePercent");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseGetMonthlyCollections", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class ResponseGetMonthlyCollections : Creds.TestCredentials.ResponseMessageBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.MonthlyCollection[] MonthlyCollectionsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.MonthlyCollection[] MonthlyCollections {
            get {
                return this.MonthlyCollectionsField;
            }
            set {
                if ((object.ReferenceEquals(this.MonthlyCollectionsField, value) != true)) {
                    this.MonthlyCollectionsField = value;
                    this.RaisePropertyChanged("MonthlyCollections");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseAdjustAccountTerminationDate", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class ResponseAdjustAccountTerminationDate : Creds.TestCredentials.ResponseMessageBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseGetClosedAccountsForDateRange", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class ResponseGetClosedAccountsForDateRange : Creds.TestCredentials.ResponseMessageBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.ClosedAccount[] AccountsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.ClosedAccount[] Accounts {
            get {
                return this.AccountsField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountsField, value) != true)) {
                    this.AccountsField = value;
                    this.RaisePropertyChanged("Accounts");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseRetrieveOverdueStatusHistory", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core.ResponseMes" +
        "sages")]
    [System.SerializableAttribute()]
    public partial class ResponseRetrieveOverdueStatusHistory : Creds.TestCredentials.ResponseMessageBase {
        
        private Creds.TestCredentials.AccountOverdueStatusChange[] OverdueStatusChangesField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Creds.TestCredentials.AccountOverdueStatusChange[] OverdueStatusChanges {
            get {
                return this.OverdueStatusChangesField;
            }
            set {
                if ((object.ReferenceEquals(this.OverdueStatusChangesField, value) != true)) {
                    this.OverdueStatusChangesField = value;
                    this.RaisePropertyChanged("OverdueStatusChanges");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseGetPaymentToken", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core.ResponseMes" +
        "sages")]
    [System.SerializableAttribute()]
    public partial class ResponseGetPaymentToken : Creds.TestCredentials.ResponseMessageBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid AccountIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PaymentFormURLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ValidToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WebhookTokenField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid AccountId {
            get {
                return this.AccountIdField;
            }
            set {
                if ((this.AccountIdField.Equals(value) != true)) {
                    this.AccountIdField = value;
                    this.RaisePropertyChanged("AccountId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PaymentFormURL {
            get {
                return this.PaymentFormURLField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentFormURLField, value) != true)) {
                    this.PaymentFormURLField = value;
                    this.RaisePropertyChanged("PaymentFormURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Token {
            get {
                return this.TokenField;
            }
            set {
                if ((object.ReferenceEquals(this.TokenField, value) != true)) {
                    this.TokenField = value;
                    this.RaisePropertyChanged("Token");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ValidTo {
            get {
                return this.ValidToField;
            }
            set {
                if ((this.ValidToField.Equals(value) != true)) {
                    this.ValidToField = value;
                    this.RaisePropertyChanged("ValidTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WebhookToken {
            get {
                return this.WebhookTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.WebhookTokenField, value) != true)) {
                    this.WebhookTokenField = value;
                    this.RaisePropertyChanged("WebhookToken");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseGetCasualPaymentToken", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core.ResponseMes" +
        "sages")]
    [System.SerializableAttribute()]
    public partial class ResponseGetCasualPaymentToken : Creds.TestCredentials.ResponseMessageBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PaymentFormURLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ValidToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WebhookTokenField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PaymentFormURL {
            get {
                return this.PaymentFormURLField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentFormURLField, value) != true)) {
                    this.PaymentFormURLField = value;
                    this.RaisePropertyChanged("PaymentFormURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Token {
            get {
                return this.TokenField;
            }
            set {
                if ((object.ReferenceEquals(this.TokenField, value) != true)) {
                    this.TokenField = value;
                    this.RaisePropertyChanged("Token");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ValidTo {
            get {
                return this.ValidToField;
            }
            set {
                if ((this.ValidToField.Equals(value) != true)) {
                    this.ValidToField = value;
                    this.RaisePropertyChanged("ValidTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WebhookToken {
            get {
                return this.WebhookTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.WebhookTokenField, value) != true)) {
                    this.WebhookTokenField = value;
                    this.RaisePropertyChanged("WebhookToken");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseGetCasualPaymentsForDateRange", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core.ResponseMes" +
        "sages")]
    [System.SerializableAttribute()]
    public partial class ResponseGetCasualPaymentsForDateRange : Creds.TestCredentials.ResponseMessageBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.CasualPayment[] PaymentsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.CasualPayment[] Payments {
            get {
                return this.PaymentsField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentsField, value) != true)) {
                    this.PaymentsField = value;
                    this.RaisePropertyChanged("Payments");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseGetCasualPaymentsByPaymentRef", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core.ResponseMes" +
        "sages")]
    [System.SerializableAttribute()]
    public partial class ResponseGetCasualPaymentsByPaymentRef : Creds.TestCredentials.ResponseMessageBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.CasualPayment[] PaymentsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.CasualPayment[] Payments {
            get {
                return this.PaymentsField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentsField, value) != true)) {
                    this.PaymentsField = value;
                    this.RaisePropertyChanged("Payments");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseGetActiveAccounts", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core.ResponseMes" +
        "sages")]
    [System.SerializableAttribute()]
    public partial class ResponseGetActiveAccounts : Creds.TestCredentials.ResponseMessageBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.ActiveAccount[] ActiveAccountsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TotalActiveAccountsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TotalPageCountField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.ActiveAccount[] ActiveAccounts {
            get {
                return this.ActiveAccountsField;
            }
            set {
                if ((object.ReferenceEquals(this.ActiveAccountsField, value) != true)) {
                    this.ActiveAccountsField = value;
                    this.RaisePropertyChanged("ActiveAccounts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TotalActiveAccounts {
            get {
                return this.TotalActiveAccountsField;
            }
            set {
                if ((object.ReferenceEquals(this.TotalActiveAccountsField, value) != true)) {
                    this.TotalActiveAccountsField = value;
                    this.RaisePropertyChanged("TotalActiveAccounts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TotalPageCount {
            get {
                return this.TotalPageCountField;
            }
            set {
                if ((object.ReferenceEquals(this.TotalPageCountField, value) != true)) {
                    this.TotalPageCountField = value;
                    this.RaisePropertyChanged("TotalPageCount");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseTransferCustomerAccount", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core.ResponseMes" +
        "sages")]
    [System.SerializableAttribute()]
    public partial class ResponseTransferCustomerAccount : Creds.TestCredentials.ResponseMessageBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountReferenceNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityIdentifierField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountReferenceNo {
            get {
                return this.AccountReferenceNoField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountReferenceNoField, value) != true)) {
                    this.AccountReferenceNoField = value;
                    this.RaisePropertyChanged("AccountReferenceNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityIdentifier {
            get {
                return this.FacilityIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityIdentifierField, value) != true)) {
                    this.FacilityIdentifierField = value;
                    this.RaisePropertyChanged("FacilityIdentifier");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseGetPaymentHistoryByStatusForDateRange", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core.ResponseMes" +
        "sages")]
    [System.SerializableAttribute()]
    public partial class ResponseGetPaymentHistoryByStatusForDateRange : Creds.TestCredentials.ResponseMessageBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.AccountWithPayments[] AccountsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.AccountWithPayments[] Accounts {
            get {
                return this.AccountsField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountsField, value) != true)) {
                    this.AccountsField = value;
                    this.RaisePropertyChanged("Accounts");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseGetPaymentHistoryStatusByAccountId", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core.ResponseMes" +
        "sages")]
    [System.SerializableAttribute()]
    public partial class ResponseGetPaymentHistoryStatusByAccountId : Creds.TestCredentials.ResponseMessageBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountReferenceNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalAccountReferenceNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.PaymentForPaymentsWithSchedules[] PaymentsWithSchedulesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountReferenceNo {
            get {
                return this.AccountReferenceNoField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountReferenceNoField, value) != true)) {
                    this.AccountReferenceNoField = value;
                    this.RaisePropertyChanged("AccountReferenceNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalAccountReferenceNo {
            get {
                return this.ExternalAccountReferenceNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalAccountReferenceNoField, value) != true)) {
                    this.ExternalAccountReferenceNoField = value;
                    this.RaisePropertyChanged("ExternalAccountReferenceNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.PaymentForPaymentsWithSchedules[] PaymentsWithSchedules {
            get {
                return this.PaymentsWithSchedulesField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentsWithSchedulesField, value) != true)) {
                    this.PaymentsWithSchedulesField = value;
                    this.RaisePropertyChanged("PaymentsWithSchedules");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestMessageBase", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestMessageFacilityBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestGetTermsAndConditions))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestGetFacilityAccountConfiguration))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestGetCasualPaymentToken))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestGetActiveAccounts))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestRetrieveCallsForDateRange))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestPostCustomerAccount))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestRetrieveCustomerAccountsForDateRange))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestRetrieveCustomerAccountsWithFeesForDateRange))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestRetrieveAuditTrailForDateRange))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestRetrievePaymentHistoryForDateRange))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestRetrieveGetBPayTransactionsByDateRange))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestRetrievePaymentHistoryWithFeesForDateRange))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestGetMonthlyCollections))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestGetClosedAccountsForDateRange))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestRetrieveOverdueStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestGetCasualPaymentsForDateRange))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestGetCasualPaymentsByPaymentRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestGetPaymentHistoryByStatusForDateRange))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestMessageByAccountIdBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestRetrieveCallsByAccountID))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestPostCustomerAccountForExistingCustomer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestRetrieveCustomerAccountByAccountID))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestRetrieveCustomerAccountWithFeesByAccountID))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestNewPaySchedule))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestAdjustNextPaymentDate))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestAdjustDateOfPayment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestAdjustAccountLastAccess))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestAdjustAccountExternalAccountReferenceNo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestAdjustAccountNextPaymentDate))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestAdjustAccountTotalValue))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestAdjustAccountMinimumTerm))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestAdjustAccountStartDate))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestStopPayment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestPaymentCollected))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestChangePaymentMethod))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestInitiateRefund))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestRetrievePayMethodDetails))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestAdjustCatchUpPayment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestRetrieveAuditTrailByAccountID))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestRetrievePaymentHistoryByAccountID))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestRetrievePaymentHistoryWithFeesByAccountID))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestResumePayment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestAdjustAccountClientAddress))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestAdjustAccountClientDetails))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestAdjustGuarantorDetails))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestAdjustAccountClientEmail))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestAdjustAccountClientPhone))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestDeletePaySchedule))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestAdjustPaySchedule))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestAdjustSuspensionEndDate))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestSuspendAccount))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestSuspendAccountBetweenDates))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestAdjustPaymentInAdvance))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestAdjustAccountPaymentMethod))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestAdjustAccountFixedTerm))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestAdjustAccountFixedTermAF))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestMessageForCardTransactionBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestProcessCardPaymentForCustomerAccount))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestProcessRealTimeCardPayment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestGetCardPaymentStatusForCustomerAccount))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestAdjustAccountAppendNotes))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestGetPaymentToken))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestTransferCustomerAccount))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestGetPaymentHistoryStatusByAccountId))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestAdjustAccountTerminationDate))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestAccountCancellation))]
    public partial class RequestMessageBase : Creds.TestCredentials.MessageBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequestInitiatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.User UserField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RequestInitiator {
            get {
                return this.RequestInitiatorField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestInitiatorField, value) != true)) {
                    this.RequestInitiatorField = value;
                    this.RaisePropertyChanged("RequestInitiator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestMessageFacilityBase", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestGetTermsAndConditions))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestGetFacilityAccountConfiguration))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestGetCasualPaymentToken))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestGetActiveAccounts))]
    public partial class RequestMessageFacilityBase : Creds.TestCredentials.RequestMessageBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContractPrefixField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContractPrefix {
            get {
                return this.ContractPrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.ContractPrefixField, value) != true)) {
                    this.ContractPrefixField = value;
                    this.RaisePropertyChanged("ContractPrefix");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestGetTermsAndConditions", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class RequestGetTermsAndConditions : Creds.TestCredentials.RequestMessageFacilityBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestGetFacilityAccountConfiguration", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class RequestGetFacilityAccountConfiguration : Creds.TestCredentials.RequestMessageFacilityBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestGetCasualPaymentToken", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core.RequestMess" +
        "ages")]
    [System.SerializableAttribute()]
    public partial class RequestGetCasualPaymentToken : Creds.TestCredentials.RequestMessageFacilityBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CallBackUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PaymentNoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PaymentRefField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CallBackUrl {
            get {
                return this.CallBackUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.CallBackUrlField, value) != true)) {
                    this.CallBackUrlField = value;
                    this.RaisePropertyChanged("CallBackUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PaymentNote {
            get {
                return this.PaymentNoteField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentNoteField, value) != true)) {
                    this.PaymentNoteField = value;
                    this.RaisePropertyChanged("PaymentNote");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PaymentRef {
            get {
                return this.PaymentRefField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentRefField, value) != true)) {
                    this.PaymentRefField = value;
                    this.RaisePropertyChanged("PaymentRef");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestGetActiveAccounts", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core.RequestMess" +
        "ages")]
    [System.SerializableAttribute()]
    public partial class RequestGetActiveAccounts : Creds.TestCredentials.RequestMessageFacilityBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PageNumberField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PageNumber {
            get {
                return this.PageNumberField;
            }
            set {
                if ((this.PageNumberField.Equals(value) != true)) {
                    this.PageNumberField = value;
                    this.RaisePropertyChanged("PageNumber");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestRetrieveCallsForDateRange", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class RequestRetrieveCallsForDateRange : Creds.TestCredentials.RequestMessageBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestPostCustomerAccount", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class RequestPostCustomerAccount : Creds.TestCredentials.RequestMessageBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.Country AccountCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountHolderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountNotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.AccountType AccountTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillingAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillingCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.Country BillingCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillingLocalityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillingPostcodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<Creds.TestCredentials.AUSStates> BillingStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillingSuburbField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.PhoneCountryCode BusinessCountryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BusinessNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BusinessSTDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContractPrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.CreditCardType CreditCardTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateAccountStartedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateOfBirthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.PhoneCountryCode EmergencyCountryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmergencyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmergencyNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmergencySTDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpiryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalAccountReferenceNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool FixTotalValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool FixedTermField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.Gender GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.PhoneCountryCode HomeCountryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HomeNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HomeSTDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InitialOneOffScheduleDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InitialOneOffScheduleInstalmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime InitialOneOffScheduleStartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiddleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.PhoneCountryCode MobileCountryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobileNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobileSTDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhysicalAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhysicalCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.Country PhysicalCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhysicalLocalityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhysicalPostcodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<Creds.TestCredentials.AUSStates> PhysicalStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhysicalSuburbField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecurringScheduleDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.Frequency RecurringScheduleFrequencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RecurringScheduleInstalmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RecurringScheduleStartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TermField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.TermType TermTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> WaiveEstFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InitialScheduleExternalIdentifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecurringScheduleExternalIdentifierField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountCode {
            get {
                return this.AccountCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountCodeField, value) != true)) {
                    this.AccountCodeField = value;
                    this.RaisePropertyChanged("AccountCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.Country AccountCountry {
            get {
                return this.AccountCountryField;
            }
            set {
                if ((this.AccountCountryField.Equals(value) != true)) {
                    this.AccountCountryField = value;
                    this.RaisePropertyChanged("AccountCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountHolder {
            get {
                return this.AccountHolderField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountHolderField, value) != true)) {
                    this.AccountHolderField = value;
                    this.RaisePropertyChanged("AccountHolder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountNo {
            get {
                return this.AccountNoField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountNoField, value) != true)) {
                    this.AccountNoField = value;
                    this.RaisePropertyChanged("AccountNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountNotes {
            get {
                return this.AccountNotesField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountNotesField, value) != true)) {
                    this.AccountNotesField = value;
                    this.RaisePropertyChanged("AccountNotes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.AccountType AccountType {
            get {
                return this.AccountTypeField;
            }
            set {
                if ((this.AccountTypeField.Equals(value) != true)) {
                    this.AccountTypeField = value;
                    this.RaisePropertyChanged("AccountType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillingAddress {
            get {
                return this.BillingAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.BillingAddressField, value) != true)) {
                    this.BillingAddressField = value;
                    this.RaisePropertyChanged("BillingAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillingCity {
            get {
                return this.BillingCityField;
            }
            set {
                if ((object.ReferenceEquals(this.BillingCityField, value) != true)) {
                    this.BillingCityField = value;
                    this.RaisePropertyChanged("BillingCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.Country BillingCountry {
            get {
                return this.BillingCountryField;
            }
            set {
                if ((this.BillingCountryField.Equals(value) != true)) {
                    this.BillingCountryField = value;
                    this.RaisePropertyChanged("BillingCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillingLocality {
            get {
                return this.BillingLocalityField;
            }
            set {
                if ((object.ReferenceEquals(this.BillingLocalityField, value) != true)) {
                    this.BillingLocalityField = value;
                    this.RaisePropertyChanged("BillingLocality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillingPostcode {
            get {
                return this.BillingPostcodeField;
            }
            set {
                if ((object.ReferenceEquals(this.BillingPostcodeField, value) != true)) {
                    this.BillingPostcodeField = value;
                    this.RaisePropertyChanged("BillingPostcode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<Creds.TestCredentials.AUSStates> BillingState {
            get {
                return this.BillingStateField;
            }
            set {
                if ((this.BillingStateField.Equals(value) != true)) {
                    this.BillingStateField = value;
                    this.RaisePropertyChanged("BillingState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillingSuburb {
            get {
                return this.BillingSuburbField;
            }
            set {
                if ((object.ReferenceEquals(this.BillingSuburbField, value) != true)) {
                    this.BillingSuburbField = value;
                    this.RaisePropertyChanged("BillingSuburb");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.PhoneCountryCode BusinessCountryCode {
            get {
                return this.BusinessCountryCodeField;
            }
            set {
                if ((this.BusinessCountryCodeField.Equals(value) != true)) {
                    this.BusinessCountryCodeField = value;
                    this.RaisePropertyChanged("BusinessCountryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BusinessNumber {
            get {
                return this.BusinessNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.BusinessNumberField, value) != true)) {
                    this.BusinessNumberField = value;
                    this.RaisePropertyChanged("BusinessNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BusinessSTD {
            get {
                return this.BusinessSTDField;
            }
            set {
                if ((object.ReferenceEquals(this.BusinessSTDField, value) != true)) {
                    this.BusinessSTDField = value;
                    this.RaisePropertyChanged("BusinessSTD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContractPrefix {
            get {
                return this.ContractPrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.ContractPrefixField, value) != true)) {
                    this.ContractPrefixField = value;
                    this.RaisePropertyChanged("ContractPrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.CreditCardType CreditCardType {
            get {
                return this.CreditCardTypeField;
            }
            set {
                if ((this.CreditCardTypeField.Equals(value) != true)) {
                    this.CreditCardTypeField = value;
                    this.RaisePropertyChanged("CreditCardType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateAccountStarted {
            get {
                return this.DateAccountStartedField;
            }
            set {
                if ((this.DateAccountStartedField.Equals(value) != true)) {
                    this.DateAccountStartedField = value;
                    this.RaisePropertyChanged("DateAccountStarted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateOfBirth {
            get {
                return this.DateOfBirthField;
            }
            set {
                if ((this.DateOfBirthField.Equals(value) != true)) {
                    this.DateOfBirthField = value;
                    this.RaisePropertyChanged("DateOfBirth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailAddress {
            get {
                return this.EmailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailAddressField, value) != true)) {
                    this.EmailAddressField = value;
                    this.RaisePropertyChanged("EmailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.PhoneCountryCode EmergencyCountryCode {
            get {
                return this.EmergencyCountryCodeField;
            }
            set {
                if ((this.EmergencyCountryCodeField.Equals(value) != true)) {
                    this.EmergencyCountryCodeField = value;
                    this.RaisePropertyChanged("EmergencyCountryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmergencyName {
            get {
                return this.EmergencyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EmergencyNameField, value) != true)) {
                    this.EmergencyNameField = value;
                    this.RaisePropertyChanged("EmergencyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmergencyNumber {
            get {
                return this.EmergencyNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.EmergencyNumberField, value) != true)) {
                    this.EmergencyNumberField = value;
                    this.RaisePropertyChanged("EmergencyNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmergencySTD {
            get {
                return this.EmergencySTDField;
            }
            set {
                if ((object.ReferenceEquals(this.EmergencySTDField, value) != true)) {
                    this.EmergencySTDField = value;
                    this.RaisePropertyChanged("EmergencySTD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpiryDate {
            get {
                return this.ExpiryDateField;
            }
            set {
                if ((this.ExpiryDateField.Equals(value) != true)) {
                    this.ExpiryDateField = value;
                    this.RaisePropertyChanged("ExpiryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalAccountReferenceNo {
            get {
                return this.ExternalAccountReferenceNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalAccountReferenceNoField, value) != true)) {
                    this.ExternalAccountReferenceNoField = value;
                    this.RaisePropertyChanged("ExternalAccountReferenceNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool FixTotalValue {
            get {
                return this.FixTotalValueField;
            }
            set {
                if ((this.FixTotalValueField.Equals(value) != true)) {
                    this.FixTotalValueField = value;
                    this.RaisePropertyChanged("FixTotalValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool FixedTerm {
            get {
                return this.FixedTermField;
            }
            set {
                if ((this.FixedTermField.Equals(value) != true)) {
                    this.FixedTermField = value;
                    this.RaisePropertyChanged("FixedTerm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.Gender Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((this.GenderField.Equals(value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.PhoneCountryCode HomeCountryCode {
            get {
                return this.HomeCountryCodeField;
            }
            set {
                if ((this.HomeCountryCodeField.Equals(value) != true)) {
                    this.HomeCountryCodeField = value;
                    this.RaisePropertyChanged("HomeCountryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HomeNumber {
            get {
                return this.HomeNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.HomeNumberField, value) != true)) {
                    this.HomeNumberField = value;
                    this.RaisePropertyChanged("HomeNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HomeSTD {
            get {
                return this.HomeSTDField;
            }
            set {
                if ((object.ReferenceEquals(this.HomeSTDField, value) != true)) {
                    this.HomeSTDField = value;
                    this.RaisePropertyChanged("HomeSTD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InitialOneOffScheduleDescription {
            get {
                return this.InitialOneOffScheduleDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.InitialOneOffScheduleDescriptionField, value) != true)) {
                    this.InitialOneOffScheduleDescriptionField = value;
                    this.RaisePropertyChanged("InitialOneOffScheduleDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InitialOneOffScheduleInstalment {
            get {
                return this.InitialOneOffScheduleInstalmentField;
            }
            set {
                if ((this.InitialOneOffScheduleInstalmentField.Equals(value) != true)) {
                    this.InitialOneOffScheduleInstalmentField = value;
                    this.RaisePropertyChanged("InitialOneOffScheduleInstalment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime InitialOneOffScheduleStartDate {
            get {
                return this.InitialOneOffScheduleStartDateField;
            }
            set {
                if ((this.InitialOneOffScheduleStartDateField.Equals(value) != true)) {
                    this.InitialOneOffScheduleStartDateField = value;
                    this.RaisePropertyChanged("InitialOneOffScheduleStartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiddleName {
            get {
                return this.MiddleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MiddleNameField, value) != true)) {
                    this.MiddleNameField = value;
                    this.RaisePropertyChanged("MiddleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.PhoneCountryCode MobileCountryCode {
            get {
                return this.MobileCountryCodeField;
            }
            set {
                if ((this.MobileCountryCodeField.Equals(value) != true)) {
                    this.MobileCountryCodeField = value;
                    this.RaisePropertyChanged("MobileCountryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MobileNumber {
            get {
                return this.MobileNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileNumberField, value) != true)) {
                    this.MobileNumberField = value;
                    this.RaisePropertyChanged("MobileNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MobileSTD {
            get {
                return this.MobileSTDField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileSTDField, value) != true)) {
                    this.MobileSTDField = value;
                    this.RaisePropertyChanged("MobileSTD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhysicalAddress {
            get {
                return this.PhysicalAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.PhysicalAddressField, value) != true)) {
                    this.PhysicalAddressField = value;
                    this.RaisePropertyChanged("PhysicalAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhysicalCity {
            get {
                return this.PhysicalCityField;
            }
            set {
                if ((object.ReferenceEquals(this.PhysicalCityField, value) != true)) {
                    this.PhysicalCityField = value;
                    this.RaisePropertyChanged("PhysicalCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.Country PhysicalCountry {
            get {
                return this.PhysicalCountryField;
            }
            set {
                if ((this.PhysicalCountryField.Equals(value) != true)) {
                    this.PhysicalCountryField = value;
                    this.RaisePropertyChanged("PhysicalCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhysicalLocality {
            get {
                return this.PhysicalLocalityField;
            }
            set {
                if ((object.ReferenceEquals(this.PhysicalLocalityField, value) != true)) {
                    this.PhysicalLocalityField = value;
                    this.RaisePropertyChanged("PhysicalLocality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhysicalPostcode {
            get {
                return this.PhysicalPostcodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PhysicalPostcodeField, value) != true)) {
                    this.PhysicalPostcodeField = value;
                    this.RaisePropertyChanged("PhysicalPostcode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<Creds.TestCredentials.AUSStates> PhysicalState {
            get {
                return this.PhysicalStateField;
            }
            set {
                if ((this.PhysicalStateField.Equals(value) != true)) {
                    this.PhysicalStateField = value;
                    this.RaisePropertyChanged("PhysicalState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhysicalSuburb {
            get {
                return this.PhysicalSuburbField;
            }
            set {
                if ((object.ReferenceEquals(this.PhysicalSuburbField, value) != true)) {
                    this.PhysicalSuburbField = value;
                    this.RaisePropertyChanged("PhysicalSuburb");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecurringScheduleDescription {
            get {
                return this.RecurringScheduleDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.RecurringScheduleDescriptionField, value) != true)) {
                    this.RecurringScheduleDescriptionField = value;
                    this.RaisePropertyChanged("RecurringScheduleDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.Frequency RecurringScheduleFrequency {
            get {
                return this.RecurringScheduleFrequencyField;
            }
            set {
                if ((this.RecurringScheduleFrequencyField.Equals(value) != true)) {
                    this.RecurringScheduleFrequencyField = value;
                    this.RaisePropertyChanged("RecurringScheduleFrequency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RecurringScheduleInstalment {
            get {
                return this.RecurringScheduleInstalmentField;
            }
            set {
                if ((this.RecurringScheduleInstalmentField.Equals(value) != true)) {
                    this.RecurringScheduleInstalmentField = value;
                    this.RaisePropertyChanged("RecurringScheduleInstalment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RecurringScheduleStartDate {
            get {
                return this.RecurringScheduleStartDateField;
            }
            set {
                if ((this.RecurringScheduleStartDateField.Equals(value) != true)) {
                    this.RecurringScheduleStartDateField = value;
                    this.RaisePropertyChanged("RecurringScheduleStartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Term {
            get {
                return this.TermField;
            }
            set {
                if ((this.TermField.Equals(value) != true)) {
                    this.TermField = value;
                    this.RaisePropertyChanged("Term");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.TermType TermType {
            get {
                return this.TermTypeField;
            }
            set {
                if ((this.TermTypeField.Equals(value) != true)) {
                    this.TermTypeField = value;
                    this.RaisePropertyChanged("TermType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalValue {
            get {
                return this.TotalValueField;
            }
            set {
                if ((this.TotalValueField.Equals(value) != true)) {
                    this.TotalValueField = value;
                    this.RaisePropertyChanged("TotalValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> WaiveEstFee {
            get {
                return this.WaiveEstFeeField;
            }
            set {
                if ((this.WaiveEstFeeField.Equals(value) != true)) {
                    this.WaiveEstFeeField = value;
                    this.RaisePropertyChanged("WaiveEstFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=58)]
        public string InitialScheduleExternalIdentifier {
            get {
                return this.InitialScheduleExternalIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.InitialScheduleExternalIdentifierField, value) != true)) {
                    this.InitialScheduleExternalIdentifierField = value;
                    this.RaisePropertyChanged("InitialScheduleExternalIdentifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=59)]
        public string RecurringScheduleExternalIdentifier {
            get {
                return this.RecurringScheduleExternalIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.RecurringScheduleExternalIdentifierField, value) != true)) {
                    this.RecurringScheduleExternalIdentifierField = value;
                    this.RaisePropertyChanged("RecurringScheduleExternalIdentifier");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestRetrieveCustomerAccountsForDateRange", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class RequestRetrieveCustomerAccountsForDateRange : Creds.TestCredentials.RequestMessageBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestRetrieveCustomerAccountsWithFeesForDateRange", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class RequestRetrieveCustomerAccountsWithFeesForDateRange : Creds.TestCredentials.RequestMessageBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestRetrieveAuditTrailForDateRange", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class RequestRetrieveAuditTrailForDateRange : Creds.TestCredentials.RequestMessageBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestRetrievePaymentHistoryForDateRange", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class RequestRetrievePaymentHistoryForDateRange : Creds.TestCredentials.RequestMessageBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestRetrieveGetBPayTransactionsByDateRange", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class RequestRetrieveGetBPayTransactionsByDateRange : Creds.TestCredentials.RequestMessageBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContractPrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContractPrefix {
            get {
                return this.ContractPrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.ContractPrefixField, value) != true)) {
                    this.ContractPrefixField = value;
                    this.RaisePropertyChanged("ContractPrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestRetrievePaymentHistoryWithFeesForDateRange", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class RequestRetrievePaymentHistoryWithFeesForDateRange : Creds.TestCredentials.RequestMessageBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestGetMonthlyCollections", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class RequestGetMonthlyCollections : Creds.TestCredentials.RequestMessageBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestGetClosedAccountsForDateRange", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class RequestGetClosedAccountsForDateRange : Creds.TestCredentials.RequestMessageBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContractPrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContractPrefix {
            get {
                return this.ContractPrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.ContractPrefixField, value) != true)) {
                    this.ContractPrefixField = value;
                    this.RaisePropertyChanged("ContractPrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestRetrieveOverdueStatus", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core.RequestMess" +
        "ages")]
    [System.SerializableAttribute()]
    public partial class RequestRetrieveOverdueStatus : Creds.TestCredentials.RequestMessageBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestGetCasualPaymentsForDateRange", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core.RequestMess" +
        "ages")]
    [System.SerializableAttribute()]
    public partial class RequestGetCasualPaymentsForDateRange : Creds.TestCredentials.RequestMessageBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContractPrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContractPrefix {
            get {
                return this.ContractPrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.ContractPrefixField, value) != true)) {
                    this.ContractPrefixField = value;
                    this.RaisePropertyChanged("ContractPrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestGetCasualPaymentsByPaymentRef", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core.RequestMess" +
        "ages")]
    [System.SerializableAttribute()]
    public partial class RequestGetCasualPaymentsByPaymentRef : Creds.TestCredentials.RequestMessageBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContractPrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PaymentRefField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContractPrefix {
            get {
                return this.ContractPrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.ContractPrefixField, value) != true)) {
                    this.ContractPrefixField = value;
                    this.RaisePropertyChanged("ContractPrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PaymentRef {
            get {
                return this.PaymentRefField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentRefField, value) != true)) {
                    this.PaymentRefField = value;
                    this.RaisePropertyChanged("PaymentRef");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestGetPaymentHistoryByStatusForDateRange", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core.RequestMess" +
        "ages")]
    [System.SerializableAttribute()]
    public partial class RequestGetPaymentHistoryByStatusForDateRange : Creds.TestCredentials.RequestMessageBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContractPrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.DocketStatus StatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContractPrefix {
            get {
                return this.ContractPrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.ContractPrefixField, value) != true)) {
                    this.ContractPrefixField = value;
                    this.RaisePropertyChanged("ContractPrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.DocketStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestMessageByAccountIdBase", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestRetrieveCallsByAccountID))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestPostCustomerAccountForExistingCustomer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestRetrieveCustomerAccountByAccountID))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestRetrieveCustomerAccountWithFeesByAccountID))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestNewPaySchedule))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestAdjustNextPaymentDate))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestAdjustDateOfPayment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestAdjustAccountLastAccess))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestAdjustAccountExternalAccountReferenceNo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestAdjustAccountNextPaymentDate))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestAdjustAccountTotalValue))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestAdjustAccountMinimumTerm))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestAdjustAccountStartDate))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestStopPayment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestPaymentCollected))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestChangePaymentMethod))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestInitiateRefund))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestRetrievePayMethodDetails))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestAdjustCatchUpPayment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestRetrieveAuditTrailByAccountID))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestRetrievePaymentHistoryByAccountID))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestRetrievePaymentHistoryWithFeesByAccountID))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestResumePayment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestAdjustAccountClientAddress))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestAdjustAccountClientDetails))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestAdjustGuarantorDetails))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestAdjustAccountClientEmail))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestAdjustAccountClientPhone))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestDeletePaySchedule))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestAdjustPaySchedule))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestAdjustSuspensionEndDate))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestSuspendAccount))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestSuspendAccountBetweenDates))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestAdjustPaymentInAdvance))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestAdjustAccountPaymentMethod))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestAdjustAccountFixedTerm))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestAdjustAccountFixedTermAF))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestMessageForCardTransactionBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestProcessCardPaymentForCustomerAccount))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestProcessRealTimeCardPayment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestGetCardPaymentStatusForCustomerAccount))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestAdjustAccountAppendNotes))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestGetPaymentToken))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestTransferCustomerAccount))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestGetPaymentHistoryStatusByAccountId))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestAdjustAccountTerminationDate))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestAccountCancellation))]
    public partial class RequestMessageByAccountIdBase : Creds.TestCredentials.RequestMessageBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountReferenceNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalAccountReferenceNoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountReferenceNo {
            get {
                return this.AccountReferenceNoField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountReferenceNoField, value) != true)) {
                    this.AccountReferenceNoField = value;
                    this.RaisePropertyChanged("AccountReferenceNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalAccountReferenceNo {
            get {
                return this.ExternalAccountReferenceNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalAccountReferenceNoField, value) != true)) {
                    this.ExternalAccountReferenceNoField = value;
                    this.RaisePropertyChanged("ExternalAccountReferenceNo");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestRetrieveCallsByAccountID", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class RequestRetrieveCallsByAccountID : Creds.TestCredentials.RequestMessageByAccountIdBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestPostCustomerAccountForExistingCustomer", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class RequestPostCustomerAccountForExistingCustomer : Creds.TestCredentials.RequestMessageByAccountIdBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountNotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContractPrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateAccountStartedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool FixTotalValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool FixedTermField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InitialOneOffScheduleDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InitialOneOffScheduleInstalmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime InitialOneOffScheduleStartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewExternalAccountReferenceNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecurringScheduleDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.Frequency RecurringScheduleFrequencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RecurringScheduleInstalmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RecurringScheduleStartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TermField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.TermType TermTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> WaiveEstFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InitialScheduleExternalIdentifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecurringScheduleExternalIdentifierField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountCode {
            get {
                return this.AccountCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountCodeField, value) != true)) {
                    this.AccountCodeField = value;
                    this.RaisePropertyChanged("AccountCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountNotes {
            get {
                return this.AccountNotesField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountNotesField, value) != true)) {
                    this.AccountNotesField = value;
                    this.RaisePropertyChanged("AccountNotes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContractPrefix {
            get {
                return this.ContractPrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.ContractPrefixField, value) != true)) {
                    this.ContractPrefixField = value;
                    this.RaisePropertyChanged("ContractPrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateAccountStarted {
            get {
                return this.DateAccountStartedField;
            }
            set {
                if ((this.DateAccountStartedField.Equals(value) != true)) {
                    this.DateAccountStartedField = value;
                    this.RaisePropertyChanged("DateAccountStarted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool FixTotalValue {
            get {
                return this.FixTotalValueField;
            }
            set {
                if ((this.FixTotalValueField.Equals(value) != true)) {
                    this.FixTotalValueField = value;
                    this.RaisePropertyChanged("FixTotalValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool FixedTerm {
            get {
                return this.FixedTermField;
            }
            set {
                if ((this.FixedTermField.Equals(value) != true)) {
                    this.FixedTermField = value;
                    this.RaisePropertyChanged("FixedTerm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InitialOneOffScheduleDescription {
            get {
                return this.InitialOneOffScheduleDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.InitialOneOffScheduleDescriptionField, value) != true)) {
                    this.InitialOneOffScheduleDescriptionField = value;
                    this.RaisePropertyChanged("InitialOneOffScheduleDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InitialOneOffScheduleInstalment {
            get {
                return this.InitialOneOffScheduleInstalmentField;
            }
            set {
                if ((this.InitialOneOffScheduleInstalmentField.Equals(value) != true)) {
                    this.InitialOneOffScheduleInstalmentField = value;
                    this.RaisePropertyChanged("InitialOneOffScheduleInstalment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime InitialOneOffScheduleStartDate {
            get {
                return this.InitialOneOffScheduleStartDateField;
            }
            set {
                if ((this.InitialOneOffScheduleStartDateField.Equals(value) != true)) {
                    this.InitialOneOffScheduleStartDateField = value;
                    this.RaisePropertyChanged("InitialOneOffScheduleStartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewExternalAccountReferenceNo {
            get {
                return this.NewExternalAccountReferenceNoField;
            }
            set {
                if ((object.ReferenceEquals(this.NewExternalAccountReferenceNoField, value) != true)) {
                    this.NewExternalAccountReferenceNoField = value;
                    this.RaisePropertyChanged("NewExternalAccountReferenceNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecurringScheduleDescription {
            get {
                return this.RecurringScheduleDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.RecurringScheduleDescriptionField, value) != true)) {
                    this.RecurringScheduleDescriptionField = value;
                    this.RaisePropertyChanged("RecurringScheduleDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.Frequency RecurringScheduleFrequency {
            get {
                return this.RecurringScheduleFrequencyField;
            }
            set {
                if ((this.RecurringScheduleFrequencyField.Equals(value) != true)) {
                    this.RecurringScheduleFrequencyField = value;
                    this.RaisePropertyChanged("RecurringScheduleFrequency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RecurringScheduleInstalment {
            get {
                return this.RecurringScheduleInstalmentField;
            }
            set {
                if ((this.RecurringScheduleInstalmentField.Equals(value) != true)) {
                    this.RecurringScheduleInstalmentField = value;
                    this.RaisePropertyChanged("RecurringScheduleInstalment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RecurringScheduleStartDate {
            get {
                return this.RecurringScheduleStartDateField;
            }
            set {
                if ((this.RecurringScheduleStartDateField.Equals(value) != true)) {
                    this.RecurringScheduleStartDateField = value;
                    this.RaisePropertyChanged("RecurringScheduleStartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Term {
            get {
                return this.TermField;
            }
            set {
                if ((this.TermField.Equals(value) != true)) {
                    this.TermField = value;
                    this.RaisePropertyChanged("Term");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.TermType TermType {
            get {
                return this.TermTypeField;
            }
            set {
                if ((this.TermTypeField.Equals(value) != true)) {
                    this.TermTypeField = value;
                    this.RaisePropertyChanged("TermType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalValue {
            get {
                return this.TotalValueField;
            }
            set {
                if ((this.TotalValueField.Equals(value) != true)) {
                    this.TotalValueField = value;
                    this.RaisePropertyChanged("TotalValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> WaiveEstFee {
            get {
                return this.WaiveEstFeeField;
            }
            set {
                if ((this.WaiveEstFeeField.Equals(value) != true)) {
                    this.WaiveEstFeeField = value;
                    this.RaisePropertyChanged("WaiveEstFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=18)]
        public string InitialScheduleExternalIdentifier {
            get {
                return this.InitialScheduleExternalIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.InitialScheduleExternalIdentifierField, value) != true)) {
                    this.InitialScheduleExternalIdentifierField = value;
                    this.RaisePropertyChanged("InitialScheduleExternalIdentifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=19)]
        public string RecurringScheduleExternalIdentifier {
            get {
                return this.RecurringScheduleExternalIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.RecurringScheduleExternalIdentifierField, value) != true)) {
                    this.RecurringScheduleExternalIdentifierField = value;
                    this.RaisePropertyChanged("RecurringScheduleExternalIdentifier");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestRetrieveCustomerAccountByAccountID", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class RequestRetrieveCustomerAccountByAccountID : Creds.TestCredentials.RequestMessageByAccountIdBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestRetrieveCustomerAccountWithFeesByAccountID", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class RequestRetrieveCustomerAccountWithFeesByAccountID : Creds.TestCredentials.RequestMessageByAccountIdBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestNewPaySchedule", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class RequestNewPaySchedule : Creds.TestCredentials.RequestMessageByAccountIdBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AdjustFutureSchedulesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeleteFutureSchedulesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.RequestPaySchedule NewPayScheduleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OverrideBillingCycleAlignmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PreviousScheduleEndDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AdjustFutureSchedules {
            get {
                return this.AdjustFutureSchedulesField;
            }
            set {
                if ((this.AdjustFutureSchedulesField.Equals(value) != true)) {
                    this.AdjustFutureSchedulesField = value;
                    this.RaisePropertyChanged("AdjustFutureSchedules");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DeleteFutureSchedules {
            get {
                return this.DeleteFutureSchedulesField;
            }
            set {
                if ((this.DeleteFutureSchedulesField.Equals(value) != true)) {
                    this.DeleteFutureSchedulesField = value;
                    this.RaisePropertyChanged("DeleteFutureSchedules");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.RequestPaySchedule NewPaySchedule {
            get {
                return this.NewPayScheduleField;
            }
            set {
                if ((object.ReferenceEquals(this.NewPayScheduleField, value) != true)) {
                    this.NewPayScheduleField = value;
                    this.RaisePropertyChanged("NewPaySchedule");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OverrideBillingCycleAlignment {
            get {
                return this.OverrideBillingCycleAlignmentField;
            }
            set {
                if ((this.OverrideBillingCycleAlignmentField.Equals(value) != true)) {
                    this.OverrideBillingCycleAlignmentField = value;
                    this.RaisePropertyChanged("OverrideBillingCycleAlignment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PreviousScheduleEndDate {
            get {
                return this.PreviousScheduleEndDateField;
            }
            set {
                if ((this.PreviousScheduleEndDateField.Equals(value) != true)) {
                    this.PreviousScheduleEndDateField = value;
                    this.RaisePropertyChanged("PreviousScheduleEndDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestAdjustNextPaymentDate", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class RequestAdjustNextPaymentDate : Creds.TestCredentials.RequestMessageByAccountIdBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime NewNextPaymentDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime NewNextPaymentDate {
            get {
                return this.NewNextPaymentDateField;
            }
            set {
                if ((this.NewNextPaymentDateField.Equals(value) != true)) {
                    this.NewNextPaymentDateField = value;
                    this.RaisePropertyChanged("NewNextPaymentDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestAdjustDateOfPayment", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class RequestAdjustDateOfPayment : Creds.TestCredentials.RequestMessageByAccountIdBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime NewPaymentDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime NewPaymentDate {
            get {
                return this.NewPaymentDateField;
            }
            set {
                if ((this.NewPaymentDateField.Equals(value) != true)) {
                    this.NewPaymentDateField = value;
                    this.RaisePropertyChanged("NewPaymentDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestAdjustAccountLastAccess", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class RequestAdjustAccountLastAccess : Creds.TestCredentials.RequestMessageByAccountIdBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastAccessField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastAccess {
            get {
                return this.LastAccessField;
            }
            set {
                if ((this.LastAccessField.Equals(value) != true)) {
                    this.LastAccessField = value;
                    this.RaisePropertyChanged("LastAccess");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestAdjustAccountExternalAccountReferenceNo", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class RequestAdjustAccountExternalAccountReferenceNo : Creds.TestCredentials.RequestMessageByAccountIdBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewExternalAccountReferenceNoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewExternalAccountReferenceNo {
            get {
                return this.NewExternalAccountReferenceNoField;
            }
            set {
                if ((object.ReferenceEquals(this.NewExternalAccountReferenceNoField, value) != true)) {
                    this.NewExternalAccountReferenceNoField = value;
                    this.RaisePropertyChanged("NewExternalAccountReferenceNo");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestAdjustAccountNextPaymentDate", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class RequestAdjustAccountNextPaymentDate : Creds.TestCredentials.RequestMessageByAccountIdBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime NextPaymentDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime NextPaymentDate {
            get {
                return this.NextPaymentDateField;
            }
            set {
                if ((this.NextPaymentDateField.Equals(value) != true)) {
                    this.NextPaymentDateField = value;
                    this.RaisePropertyChanged("NextPaymentDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestAdjustAccountTotalValue", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class RequestAdjustAccountTotalValue : Creds.TestCredentials.RequestMessageByAccountIdBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CurrentTotalValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal NewTotalValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CurrentTotalValue {
            get {
                return this.CurrentTotalValueField;
            }
            set {
                if ((this.CurrentTotalValueField.Equals(value) != true)) {
                    this.CurrentTotalValueField = value;
                    this.RaisePropertyChanged("CurrentTotalValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal NewTotalValue {
            get {
                return this.NewTotalValueField;
            }
            set {
                if ((this.NewTotalValueField.Equals(value) != true)) {
                    this.NewTotalValueField = value;
                    this.RaisePropertyChanged("NewTotalValue");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestAdjustAccountMinimumTerm", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class RequestAdjustAccountMinimumTerm : Creds.TestCredentials.RequestMessageByAccountIdBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> NewTermField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<Creds.TestCredentials.TermType> NewTermTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> NewTerm {
            get {
                return this.NewTermField;
            }
            set {
                if ((this.NewTermField.Equals(value) != true)) {
                    this.NewTermField = value;
                    this.RaisePropertyChanged("NewTerm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<Creds.TestCredentials.TermType> NewTermType {
            get {
                return this.NewTermTypeField;
            }
            set {
                if ((this.NewTermTypeField.Equals(value) != true)) {
                    this.NewTermTypeField = value;
                    this.RaisePropertyChanged("NewTermType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestAdjustAccountStartDate", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class RequestAdjustAccountStartDate : Creds.TestCredentials.RequestMessageByAccountIdBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime NewStartDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime NewStartDate {
            get {
                return this.NewStartDateField;
            }
            set {
                if ((this.NewStartDateField.Equals(value) != true)) {
                    this.NewStartDateField = value;
                    this.RaisePropertyChanged("NewStartDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestStopPayment", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class RequestStopPayment : Creds.TestCredentials.RequestMessageByAccountIdBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StopCreditControlLettersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StopPaymentsUntilField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StopCreditControlLetters {
            get {
                return this.StopCreditControlLettersField;
            }
            set {
                if ((this.StopCreditControlLettersField.Equals(value) != true)) {
                    this.StopCreditControlLettersField = value;
                    this.RaisePropertyChanged("StopCreditControlLetters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StopPaymentsUntil {
            get {
                return this.StopPaymentsUntilField;
            }
            set {
                if ((this.StopPaymentsUntilField.Equals(value) != true)) {
                    this.StopPaymentsUntilField = value;
                    this.RaisePropertyChanged("StopPaymentsUntil");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestPaymentCollected", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class RequestPaymentCollected : Creds.TestCredentials.RequestMessageByAccountIdBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateOfPaymentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalTransactionIdentifierField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateOfPayment {
            get {
                return this.DateOfPaymentField;
            }
            set {
                if ((this.DateOfPaymentField.Equals(value) != true)) {
                    this.DateOfPaymentField = value;
                    this.RaisePropertyChanged("DateOfPayment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalTransactionIdentifier {
            get {
                return this.ExternalTransactionIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalTransactionIdentifierField, value) != true)) {
                    this.ExternalTransactionIdentifierField = value;
                    this.RaisePropertyChanged("ExternalTransactionIdentifier");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestChangePaymentMethod", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class RequestChangePaymentMethod : Creds.TestCredentials.RequestMessageByAccountIdBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.Paymethod NewPaymethodField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.Paymethod NewPaymethod {
            get {
                return this.NewPaymethodField;
            }
            set {
                if ((object.ReferenceEquals(this.NewPaymethodField, value) != true)) {
                    this.NewPaymethodField = value;
                    this.RaisePropertyChanged("NewPaymethod");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestInitiateRefund", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class RequestInitiateRefund : Creds.TestCredentials.RequestMessageByAccountIdBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestRetrievePayMethodDetails", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class RequestRetrievePayMethodDetails : Creds.TestCredentials.RequestMessageByAccountIdBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestAdjustCatchUpPayment", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class RequestAdjustCatchUpPayment : Creds.TestCredentials.RequestMessageByAccountIdBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CatchUpAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CatchUpEndDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CatchUpAmount {
            get {
                return this.CatchUpAmountField;
            }
            set {
                if ((this.CatchUpAmountField.Equals(value) != true)) {
                    this.CatchUpAmountField = value;
                    this.RaisePropertyChanged("CatchUpAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CatchUpEndDate {
            get {
                return this.CatchUpEndDateField;
            }
            set {
                if ((this.CatchUpEndDateField.Equals(value) != true)) {
                    this.CatchUpEndDateField = value;
                    this.RaisePropertyChanged("CatchUpEndDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestRetrieveAuditTrailByAccountID", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class RequestRetrieveAuditTrailByAccountID : Creds.TestCredentials.RequestMessageByAccountIdBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestRetrievePaymentHistoryByAccountID", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class RequestRetrievePaymentHistoryByAccountID : Creds.TestCredentials.RequestMessageByAccountIdBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestRetrievePaymentHistoryWithFeesByAccountID", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class RequestRetrievePaymentHistoryWithFeesByAccountID : Creds.TestCredentials.RequestMessageByAccountIdBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestResumePayment", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class RequestResumePayment : Creds.TestCredentials.RequestMessageByAccountIdBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestAdjustAccountClientAddress", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class RequestAdjustAccountClientAddress : Creds.TestCredentials.RequestMessageByAccountIdBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.Address NewAddressField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.Address NewAddress {
            get {
                return this.NewAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.NewAddressField, value) != true)) {
                    this.NewAddressField = value;
                    this.RaisePropertyChanged("NewAddress");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestAdjustAccountClientDetails", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class RequestAdjustAccountClientDetails : Creds.TestCredentials.RequestMessageByAccountIdBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.CustomerDetail CustomerDetailField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.CustomerDetail CustomerDetail {
            get {
                return this.CustomerDetailField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerDetailField, value) != true)) {
                    this.CustomerDetailField = value;
                    this.RaisePropertyChanged("CustomerDetail");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestAdjustGuarantorDetails", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class RequestAdjustGuarantorDetails : Creds.TestCredentials.RequestMessageByAccountIdBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.GuarantorDetails NewGuarantorDetailsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.GuarantorDetails NewGuarantorDetails {
            get {
                return this.NewGuarantorDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.NewGuarantorDetailsField, value) != true)) {
                    this.NewGuarantorDetailsField = value;
                    this.RaisePropertyChanged("NewGuarantorDetails");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestAdjustAccountClientEmail", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class RequestAdjustAccountClientEmail : Creds.TestCredentials.RequestMessageByAccountIdBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.Email EmailAddressField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.Email EmailAddress {
            get {
                return this.EmailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailAddressField, value) != true)) {
                    this.EmailAddressField = value;
                    this.RaisePropertyChanged("EmailAddress");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestAdjustAccountClientPhone", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class RequestAdjustAccountClientPhone : Creds.TestCredentials.RequestMessageByAccountIdBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.Phone PhoneNumberField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.Phone PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestDeletePaySchedule", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class RequestDeletePaySchedule : Creds.TestCredentials.RequestMessageByAccountIdBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PayScheduleIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PayScheduleId {
            get {
                return this.PayScheduleIdField;
            }
            set {
                if ((this.PayScheduleIdField.Equals(value) != true)) {
                    this.PayScheduleIdField = value;
                    this.RaisePropertyChanged("PayScheduleId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestAdjustPaySchedule", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class RequestAdjustPaySchedule : Creds.TestCredentials.RequestMessageByAccountIdBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AdjustFutureSchedulesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeleteFutureSchedulesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.RequestPaySchedule PayScheduleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AdjustFutureSchedules {
            get {
                return this.AdjustFutureSchedulesField;
            }
            set {
                if ((this.AdjustFutureSchedulesField.Equals(value) != true)) {
                    this.AdjustFutureSchedulesField = value;
                    this.RaisePropertyChanged("AdjustFutureSchedules");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DeleteFutureSchedules {
            get {
                return this.DeleteFutureSchedulesField;
            }
            set {
                if ((this.DeleteFutureSchedulesField.Equals(value) != true)) {
                    this.DeleteFutureSchedulesField = value;
                    this.RaisePropertyChanged("DeleteFutureSchedules");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.RequestPaySchedule PaySchedule {
            get {
                return this.PayScheduleField;
            }
            set {
                if ((object.ReferenceEquals(this.PayScheduleField, value) != true)) {
                    this.PayScheduleField = value;
                    this.RaisePropertyChanged("PaySchedule");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestAdjustSuspensionEndDate", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class RequestAdjustSuspensionEndDate : Creds.TestCredentials.RequestMessageByAccountIdBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> NewEndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PayScheduleIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> NewEndDate {
            get {
                return this.NewEndDateField;
            }
            set {
                if ((this.NewEndDateField.Equals(value) != true)) {
                    this.NewEndDateField = value;
                    this.RaisePropertyChanged("NewEndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PayScheduleId {
            get {
                return this.PayScheduleIdField;
            }
            set {
                if ((this.PayScheduleIdField.Equals(value) != true)) {
                    this.PayScheduleIdField = value;
                    this.RaisePropertyChanged("PayScheduleId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestSuspendAccount", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class RequestSuspendAccount : Creds.TestCredentials.RequestMessageByAccountIdBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime MinimumEffectiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfPaymentCyclesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SuspensionFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.Frequency SuspensionFeeFrequencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DDStopField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ODMailStopField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime MinimumEffectiveDate {
            get {
                return this.MinimumEffectiveDateField;
            }
            set {
                if ((this.MinimumEffectiveDateField.Equals(value) != true)) {
                    this.MinimumEffectiveDateField = value;
                    this.RaisePropertyChanged("MinimumEffectiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfPaymentCycles {
            get {
                return this.NumberOfPaymentCyclesField;
            }
            set {
                if ((this.NumberOfPaymentCyclesField.Equals(value) != true)) {
                    this.NumberOfPaymentCyclesField = value;
                    this.RaisePropertyChanged("NumberOfPaymentCycles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SuspensionFee {
            get {
                return this.SuspensionFeeField;
            }
            set {
                if ((this.SuspensionFeeField.Equals(value) != true)) {
                    this.SuspensionFeeField = value;
                    this.RaisePropertyChanged("SuspensionFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.Frequency SuspensionFeeFrequency {
            get {
                return this.SuspensionFeeFrequencyField;
            }
            set {
                if ((this.SuspensionFeeFrequencyField.Equals(value) != true)) {
                    this.SuspensionFeeFrequencyField = value;
                    this.RaisePropertyChanged("SuspensionFeeFrequency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public bool DDStop {
            get {
                return this.DDStopField;
            }
            set {
                if ((this.DDStopField.Equals(value) != true)) {
                    this.DDStopField = value;
                    this.RaisePropertyChanged("DDStop");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public bool ODMailStop {
            get {
                return this.ODMailStopField;
            }
            set {
                if ((this.ODMailStopField.Equals(value) != true)) {
                    this.ODMailStopField = value;
                    this.RaisePropertyChanged("ODMailStop");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestSuspendAccountBetweenDates", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class RequestSuspendAccountBetweenDates : Creds.TestCredentials.RequestMessageByAccountIdBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SuspensionFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.Frequency SuspensionFeeFrequencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DDStopField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ODMailStopField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SuspensionFee {
            get {
                return this.SuspensionFeeField;
            }
            set {
                if ((this.SuspensionFeeField.Equals(value) != true)) {
                    this.SuspensionFeeField = value;
                    this.RaisePropertyChanged("SuspensionFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.Frequency SuspensionFeeFrequency {
            get {
                return this.SuspensionFeeFrequencyField;
            }
            set {
                if ((this.SuspensionFeeFrequencyField.Equals(value) != true)) {
                    this.SuspensionFeeFrequencyField = value;
                    this.RaisePropertyChanged("SuspensionFeeFrequency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public bool DDStop {
            get {
                return this.DDStopField;
            }
            set {
                if ((this.DDStopField.Equals(value) != true)) {
                    this.DDStopField = value;
                    this.RaisePropertyChanged("DDStop");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public bool ODMailStop {
            get {
                return this.ODMailStopField;
            }
            set {
                if ((this.ODMailStopField.Equals(value) != true)) {
                    this.ODMailStopField = value;
                    this.RaisePropertyChanged("ODMailStop");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestAdjustPaymentInAdvance", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class RequestAdjustPaymentInAdvance : Creds.TestCredentials.RequestMessageByAccountIdBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal IncreasedPaymentAmountField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal IncreasedPaymentAmount {
            get {
                return this.IncreasedPaymentAmountField;
            }
            set {
                if ((this.IncreasedPaymentAmountField.Equals(value) != true)) {
                    this.IncreasedPaymentAmountField = value;
                    this.RaisePropertyChanged("IncreasedPaymentAmount");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestAdjustAccountPaymentMethod", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class RequestAdjustAccountPaymentMethod : Creds.TestCredentials.RequestMessageByAccountIdBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.Paymethod NewPaymethodField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.Paymethod NewPaymethod {
            get {
                return this.NewPaymethodField;
            }
            set {
                if ((object.ReferenceEquals(this.NewPaymethodField, value) != true)) {
                    this.NewPaymethodField = value;
                    this.RaisePropertyChanged("NewPaymethod");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestAdjustAccountFixedTerm", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class RequestAdjustAccountFixedTerm : Creds.TestCredentials.RequestMessageByAccountIdBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TerminationDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TerminationDate {
            get {
                return this.TerminationDateField;
            }
            set {
                if ((this.TerminationDateField.Equals(value) != true)) {
                    this.TerminationDateField = value;
                    this.RaisePropertyChanged("TerminationDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestAdjustAccountFixedTermAF", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class RequestAdjustAccountFixedTermAF : Creds.TestCredentials.RequestMessageByAccountIdBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TerminationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FinalBillDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TerminationDate {
            get {
                return this.TerminationDateField;
            }
            set {
                if ((this.TerminationDateField.Equals(value) != true)) {
                    this.TerminationDateField = value;
                    this.RaisePropertyChanged("TerminationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public System.Nullable<System.DateTime> FinalBillDate {
            get {
                return this.FinalBillDateField;
            }
            set {
                if ((this.FinalBillDateField.Equals(value) != true)) {
                    this.FinalBillDateField = value;
                    this.RaisePropertyChanged("FinalBillDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestMessageForCardTransactionBase", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestProcessCardPaymentForCustomerAccount))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestProcessRealTimeCardPayment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestGetCardPaymentStatusForCustomerAccount))]
    public partial class RequestMessageForCardTransactionBase : Creds.TestCredentials.RequestMessageByAccountIdBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalTransactionIdentifierField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalTransactionIdentifier {
            get {
                return this.ExternalTransactionIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalTransactionIdentifierField, value) != true)) {
                    this.ExternalTransactionIdentifierField = value;
                    this.RaisePropertyChanged("ExternalTransactionIdentifier");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestProcessCardPaymentForCustomerAccount", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class RequestProcessCardPaymentForCustomerAccount : Creds.TestCredentials.RequestMessageForCardTransactionBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountHolderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CVCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.CreditCardType CreditCardTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ExpiryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayerAuthorisationResponseField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountHolder {
            get {
                return this.AccountHolderField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountHolderField, value) != true)) {
                    this.AccountHolderField = value;
                    this.RaisePropertyChanged("AccountHolder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CVC {
            get {
                return this.CVCField;
            }
            set {
                if ((object.ReferenceEquals(this.CVCField, value) != true)) {
                    this.CVCField = value;
                    this.RaisePropertyChanged("CVC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardNumber {
            get {
                return this.CardNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CardNumberField, value) != true)) {
                    this.CardNumberField = value;
                    this.RaisePropertyChanged("CardNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.CreditCardType CreditCardType {
            get {
                return this.CreditCardTypeField;
            }
            set {
                if ((this.CreditCardTypeField.Equals(value) != true)) {
                    this.CreditCardTypeField = value;
                    this.RaisePropertyChanged("CreditCardType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ExpiryDate {
            get {
                return this.ExpiryDateField;
            }
            set {
                if ((this.ExpiryDateField.Equals(value) != true)) {
                    this.ExpiryDateField = value;
                    this.RaisePropertyChanged("ExpiryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayerAuthorisationResponse {
            get {
                return this.PayerAuthorisationResponseField;
            }
            set {
                if ((object.ReferenceEquals(this.PayerAuthorisationResponseField, value) != true)) {
                    this.PayerAuthorisationResponseField = value;
                    this.RaisePropertyChanged("PayerAuthorisationResponse");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestProcessRealTimeCardPayment", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class RequestProcessRealTimeCardPayment : Creds.TestCredentials.RequestMessageForCardTransactionBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountHolderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CVCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CreateOneOffChargeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.CreditCardType CreditCardTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ExpiryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayerAuthorisationResponseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UseStoredCreditCardField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountHolder {
            get {
                return this.AccountHolderField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountHolderField, value) != true)) {
                    this.AccountHolderField = value;
                    this.RaisePropertyChanged("AccountHolder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CVC {
            get {
                return this.CVCField;
            }
            set {
                if ((object.ReferenceEquals(this.CVCField, value) != true)) {
                    this.CVCField = value;
                    this.RaisePropertyChanged("CVC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardNumber {
            get {
                return this.CardNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CardNumberField, value) != true)) {
                    this.CardNumberField = value;
                    this.RaisePropertyChanged("CardNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CreateOneOffCharge {
            get {
                return this.CreateOneOffChargeField;
            }
            set {
                if ((this.CreateOneOffChargeField.Equals(value) != true)) {
                    this.CreateOneOffChargeField = value;
                    this.RaisePropertyChanged("CreateOneOffCharge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.CreditCardType CreditCardType {
            get {
                return this.CreditCardTypeField;
            }
            set {
                if ((this.CreditCardTypeField.Equals(value) != true)) {
                    this.CreditCardTypeField = value;
                    this.RaisePropertyChanged("CreditCardType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ExpiryDate {
            get {
                return this.ExpiryDateField;
            }
            set {
                if ((this.ExpiryDateField.Equals(value) != true)) {
                    this.ExpiryDateField = value;
                    this.RaisePropertyChanged("ExpiryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayerAuthorisationResponse {
            get {
                return this.PayerAuthorisationResponseField;
            }
            set {
                if ((object.ReferenceEquals(this.PayerAuthorisationResponseField, value) != true)) {
                    this.PayerAuthorisationResponseField = value;
                    this.RaisePropertyChanged("PayerAuthorisationResponse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseStoredCreditCard {
            get {
                return this.UseStoredCreditCardField;
            }
            set {
                if ((this.UseStoredCreditCardField.Equals(value) != true)) {
                    this.UseStoredCreditCardField = value;
                    this.RaisePropertyChanged("UseStoredCreditCard");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestGetCardPaymentStatusForCustomerAccount", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class RequestGetCardPaymentStatusForCustomerAccount : Creds.TestCredentials.RequestMessageForCardTransactionBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestAdjustAccountAppendNotes", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core.RequestMess" +
        "ages")]
    [System.SerializableAttribute()]
    public partial class RequestAdjustAccountAppendNotes : Creds.TestCredentials.RequestMessageByAccountIdBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoteTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NoteTitle {
            get {
                return this.NoteTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteTitleField, value) != true)) {
                    this.NoteTitleField = value;
                    this.RaisePropertyChanged("NoteTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestGetPaymentToken", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core.RequestMess" +
        "ages")]
    [System.SerializableAttribute()]
    public partial class RequestGetPaymentToken : Creds.TestCredentials.RequestMessageByAccountIdBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CallBackUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CreateOneOffChargeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.PayMethodType PayMethodTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PaymentNoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.PayNowRequestType RequestTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CallBackUrl {
            get {
                return this.CallBackUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.CallBackUrlField, value) != true)) {
                    this.CallBackUrlField = value;
                    this.RaisePropertyChanged("CallBackUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CreateOneOffCharge {
            get {
                return this.CreateOneOffChargeField;
            }
            set {
                if ((this.CreateOneOffChargeField.Equals(value) != true)) {
                    this.CreateOneOffChargeField = value;
                    this.RaisePropertyChanged("CreateOneOffCharge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.PayMethodType PayMethodType {
            get {
                return this.PayMethodTypeField;
            }
            set {
                if ((this.PayMethodTypeField.Equals(value) != true)) {
                    this.PayMethodTypeField = value;
                    this.RaisePropertyChanged("PayMethodType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PaymentNote {
            get {
                return this.PaymentNoteField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentNoteField, value) != true)) {
                    this.PaymentNoteField = value;
                    this.RaisePropertyChanged("PaymentNote");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.PayNowRequestType RequestType {
            get {
                return this.RequestTypeField;
            }
            set {
                if ((this.RequestTypeField.Equals(value) != true)) {
                    this.RequestTypeField = value;
                    this.RaisePropertyChanged("RequestType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestTransferCustomerAccount", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core.RequestMess" +
        "ages")]
    [System.SerializableAttribute()]
    public partial class RequestTransferCustomerAccount : Creds.TestCredentials.RequestMessageByAccountIdBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TargetFacilityIdentifierField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TargetFacilityIdentifier {
            get {
                return this.TargetFacilityIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.TargetFacilityIdentifierField, value) != true)) {
                    this.TargetFacilityIdentifierField = value;
                    this.RaisePropertyChanged("TargetFacilityIdentifier");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestGetPaymentHistoryStatusByAccountId", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core.RequestMess" +
        "ages")]
    [System.SerializableAttribute()]
    public partial class RequestGetPaymentHistoryStatusByAccountId : Creds.TestCredentials.RequestMessageByAccountIdBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestAdjustAccountTerminationDate", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core.RequestMess" +
        "ages")]
    [System.SerializableAttribute()]
    public partial class RequestAdjustAccountTerminationDate : Creds.TestCredentials.RequestMessageByAccountIdBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TerminationDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TerminationDate {
            get {
                return this.TerminationDateField;
            }
            set {
                if ((this.TerminationDateField.Equals(value) != true)) {
                    this.TerminationDateField = value;
                    this.RaisePropertyChanged("TerminationDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestAccountCancellation", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class RequestAccountCancellation : Creds.TestCredentials.RequestMessageByAccountIdBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CancellationNoteField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CancellationNote {
            get {
                return this.CancellationNoteField;
            }
            set {
                if ((object.ReferenceEquals(this.CancellationNoteField, value) != true)) {
                    this.CancellationNoteField = value;
                    this.RaisePropertyChanged("CancellationNote");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class User : Creds.TestCredentials.EntityBaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseMessageNote", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class ResponseMessageNote : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.ResponseMessageNoteType NoteTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Note {
            get {
                return this.NoteField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteField, value) != true)) {
                    this.NoteField = value;
                    this.RaisePropertyChanged("Note");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.ResponseMessageNoteType NoteType {
            get {
                return this.NoteTypeField;
            }
            set {
                if ((this.NoteTypeField.Equals(value) != true)) {
                    this.NoteTypeField = value;
                    this.RaisePropertyChanged("NoteType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MessageStatus", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    public enum MessageStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Failed = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Succeed = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Inprogress = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Complete = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseMessageNoteType", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    public enum ResponseMessageNoteType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Warning = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Info = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CallNote", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class CallNote : Creds.TestCredentials.EntityBaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountReferenceNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommunicationChannelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateCallMadeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalAccountReferenceNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurposeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountReferenceNo {
            get {
                return this.AccountReferenceNoField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountReferenceNoField, value) != true)) {
                    this.AccountReferenceNoField = value;
                    this.RaisePropertyChanged("AccountReferenceNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommunicationChannel {
            get {
                return this.CommunicationChannelField;
            }
            set {
                if ((object.ReferenceEquals(this.CommunicationChannelField, value) != true)) {
                    this.CommunicationChannelField = value;
                    this.RaisePropertyChanged("CommunicationChannel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateCallMade {
            get {
                return this.DateCallMadeField;
            }
            set {
                if ((this.DateCallMadeField.Equals(value) != true)) {
                    this.DateCallMadeField = value;
                    this.RaisePropertyChanged("DateCallMade");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalAccountReferenceNo {
            get {
                return this.ExternalAccountReferenceNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalAccountReferenceNoField, value) != true)) {
                    this.ExternalAccountReferenceNoField = value;
                    this.RaisePropertyChanged("ExternalAccountReferenceNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Purpose {
            get {
                return this.PurposeField;
            }
            set {
                if ((object.ReferenceEquals(this.PurposeField, value) != true)) {
                    this.PurposeField = value;
                    this.RaisePropertyChanged("Purpose");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityBaseClass", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.User))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.Account))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.Customer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ContactDetails))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ContactBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.Email))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.Phone))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.Address))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ScheduleBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.PaySchedule))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestPaySchedule))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.OneOffSchedule))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.OneOffScheduleDetailed))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.Paymethod))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.AccountWithFees))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.Audit))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.Payment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.BPayPayment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.PaymentCW))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.CasualPayment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.MonthlyCollection))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.ActiveAccount))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.AccountWithPayments))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.PaymentWithPaySchedule))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.PayScheduleQik))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.PaymentForPaymentsWithSchedules))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.CallNote))]
    public partial class EntityBaseClass : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Account", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.AccountWithFees))]
    public partial class Account : Creds.TestCredentials.EntityBaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountNotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountReferenceNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> AccountTemplateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CancelReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CatchUpAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CatchUpEndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContractPrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.Frequency CurrentFrequencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CurrentInstalmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.Customer CustomerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateAccountClosedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateAccountLoadedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateAccountStartedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalAccountReferenceNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool FixedTermField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastBillingDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastReversalReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastUpdatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MinTermTotalValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime NextBillingDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.OneOffSchedule[] OneOffSchedulesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OutstandingBalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OutstandingBalanceWithoutFeesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OverdueAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OverdueAmountWithoutFeesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OverdueStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PaymentInAdvanceAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PaymentInAdvanceEndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PaymentStopEndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PaymentsStoppedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.Paymethod PaymethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ProjectedFinishDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.PaySchedule[] RecurringSchedulesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SuspendedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime SuspensionEndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.PaySchedule[] SuspensionSchedulesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TermField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.TermType TermTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CurrentBalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CurrentBalanceWithoutFeesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountCode {
            get {
                return this.AccountCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountCodeField, value) != true)) {
                    this.AccountCodeField = value;
                    this.RaisePropertyChanged("AccountCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountNotes {
            get {
                return this.AccountNotesField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountNotesField, value) != true)) {
                    this.AccountNotesField = value;
                    this.RaisePropertyChanged("AccountNotes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountReferenceNo {
            get {
                return this.AccountReferenceNoField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountReferenceNoField, value) != true)) {
                    this.AccountReferenceNoField = value;
                    this.RaisePropertyChanged("AccountReferenceNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> AccountTemplate {
            get {
                return this.AccountTemplateField;
            }
            set {
                if ((this.AccountTemplateField.Equals(value) != true)) {
                    this.AccountTemplateField = value;
                    this.RaisePropertyChanged("AccountTemplate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CancelReason {
            get {
                return this.CancelReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.CancelReasonField, value) != true)) {
                    this.CancelReasonField = value;
                    this.RaisePropertyChanged("CancelReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CatchUpAmount {
            get {
                return this.CatchUpAmountField;
            }
            set {
                if ((this.CatchUpAmountField.Equals(value) != true)) {
                    this.CatchUpAmountField = value;
                    this.RaisePropertyChanged("CatchUpAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CatchUpEndDate {
            get {
                return this.CatchUpEndDateField;
            }
            set {
                if ((this.CatchUpEndDateField.Equals(value) != true)) {
                    this.CatchUpEndDateField = value;
                    this.RaisePropertyChanged("CatchUpEndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContractPrefix {
            get {
                return this.ContractPrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.ContractPrefixField, value) != true)) {
                    this.ContractPrefixField = value;
                    this.RaisePropertyChanged("ContractPrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.Frequency CurrentFrequency {
            get {
                return this.CurrentFrequencyField;
            }
            set {
                if ((this.CurrentFrequencyField.Equals(value) != true)) {
                    this.CurrentFrequencyField = value;
                    this.RaisePropertyChanged("CurrentFrequency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CurrentInstalment {
            get {
                return this.CurrentInstalmentField;
            }
            set {
                if ((this.CurrentInstalmentField.Equals(value) != true)) {
                    this.CurrentInstalmentField = value;
                    this.RaisePropertyChanged("CurrentInstalment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.Customer Customer {
            get {
                return this.CustomerField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerField, value) != true)) {
                    this.CustomerField = value;
                    this.RaisePropertyChanged("Customer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateAccountClosed {
            get {
                return this.DateAccountClosedField;
            }
            set {
                if ((this.DateAccountClosedField.Equals(value) != true)) {
                    this.DateAccountClosedField = value;
                    this.RaisePropertyChanged("DateAccountClosed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateAccountLoaded {
            get {
                return this.DateAccountLoadedField;
            }
            set {
                if ((this.DateAccountLoadedField.Equals(value) != true)) {
                    this.DateAccountLoadedField = value;
                    this.RaisePropertyChanged("DateAccountLoaded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateAccountStarted {
            get {
                return this.DateAccountStartedField;
            }
            set {
                if ((this.DateAccountStartedField.Equals(value) != true)) {
                    this.DateAccountStartedField = value;
                    this.RaisePropertyChanged("DateAccountStarted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalAccountReferenceNo {
            get {
                return this.ExternalAccountReferenceNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalAccountReferenceNoField, value) != true)) {
                    this.ExternalAccountReferenceNoField = value;
                    this.RaisePropertyChanged("ExternalAccountReferenceNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool FixedTerm {
            get {
                return this.FixedTermField;
            }
            set {
                if ((this.FixedTermField.Equals(value) != true)) {
                    this.FixedTermField = value;
                    this.RaisePropertyChanged("FixedTerm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastBillingDate {
            get {
                return this.LastBillingDateField;
            }
            set {
                if ((this.LastBillingDateField.Equals(value) != true)) {
                    this.LastBillingDateField = value;
                    this.RaisePropertyChanged("LastBillingDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastReversalReason {
            get {
                return this.LastReversalReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.LastReversalReasonField, value) != true)) {
                    this.LastReversalReasonField = value;
                    this.RaisePropertyChanged("LastReversalReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastUpdatedDate {
            get {
                return this.LastUpdatedDateField;
            }
            set {
                if ((this.LastUpdatedDateField.Equals(value) != true)) {
                    this.LastUpdatedDateField = value;
                    this.RaisePropertyChanged("LastUpdatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MinTermTotalValue {
            get {
                return this.MinTermTotalValueField;
            }
            set {
                if ((this.MinTermTotalValueField.Equals(value) != true)) {
                    this.MinTermTotalValueField = value;
                    this.RaisePropertyChanged("MinTermTotalValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime NextBillingDate {
            get {
                return this.NextBillingDateField;
            }
            set {
                if ((this.NextBillingDateField.Equals(value) != true)) {
                    this.NextBillingDateField = value;
                    this.RaisePropertyChanged("NextBillingDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.OneOffSchedule[] OneOffSchedules {
            get {
                return this.OneOffSchedulesField;
            }
            set {
                if ((object.ReferenceEquals(this.OneOffSchedulesField, value) != true)) {
                    this.OneOffSchedulesField = value;
                    this.RaisePropertyChanged("OneOffSchedules");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OutstandingBalance {
            get {
                return this.OutstandingBalanceField;
            }
            set {
                if ((this.OutstandingBalanceField.Equals(value) != true)) {
                    this.OutstandingBalanceField = value;
                    this.RaisePropertyChanged("OutstandingBalance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OutstandingBalanceWithoutFees {
            get {
                return this.OutstandingBalanceWithoutFeesField;
            }
            set {
                if ((this.OutstandingBalanceWithoutFeesField.Equals(value) != true)) {
                    this.OutstandingBalanceWithoutFeesField = value;
                    this.RaisePropertyChanged("OutstandingBalanceWithoutFees");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OverdueAmount {
            get {
                return this.OverdueAmountField;
            }
            set {
                if ((this.OverdueAmountField.Equals(value) != true)) {
                    this.OverdueAmountField = value;
                    this.RaisePropertyChanged("OverdueAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OverdueAmountWithoutFees {
            get {
                return this.OverdueAmountWithoutFeesField;
            }
            set {
                if ((this.OverdueAmountWithoutFeesField.Equals(value) != true)) {
                    this.OverdueAmountWithoutFeesField = value;
                    this.RaisePropertyChanged("OverdueAmountWithoutFees");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OverdueStatus {
            get {
                return this.OverdueStatusField;
            }
            set {
                if ((this.OverdueStatusField.Equals(value) != true)) {
                    this.OverdueStatusField = value;
                    this.RaisePropertyChanged("OverdueStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PaymentInAdvanceAmount {
            get {
                return this.PaymentInAdvanceAmountField;
            }
            set {
                if ((this.PaymentInAdvanceAmountField.Equals(value) != true)) {
                    this.PaymentInAdvanceAmountField = value;
                    this.RaisePropertyChanged("PaymentInAdvanceAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PaymentInAdvanceEndDate {
            get {
                return this.PaymentInAdvanceEndDateField;
            }
            set {
                if ((this.PaymentInAdvanceEndDateField.Equals(value) != true)) {
                    this.PaymentInAdvanceEndDateField = value;
                    this.RaisePropertyChanged("PaymentInAdvanceEndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PaymentStopEndDate {
            get {
                return this.PaymentStopEndDateField;
            }
            set {
                if ((this.PaymentStopEndDateField.Equals(value) != true)) {
                    this.PaymentStopEndDateField = value;
                    this.RaisePropertyChanged("PaymentStopEndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PaymentsStopped {
            get {
                return this.PaymentsStoppedField;
            }
            set {
                if ((this.PaymentsStoppedField.Equals(value) != true)) {
                    this.PaymentsStoppedField = value;
                    this.RaisePropertyChanged("PaymentsStopped");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.Paymethod Paymethod {
            get {
                return this.PaymethodField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymethodField, value) != true)) {
                    this.PaymethodField = value;
                    this.RaisePropertyChanged("Paymethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ProjectedFinishDate {
            get {
                return this.ProjectedFinishDateField;
            }
            set {
                if ((this.ProjectedFinishDateField.Equals(value) != true)) {
                    this.ProjectedFinishDateField = value;
                    this.RaisePropertyChanged("ProjectedFinishDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.PaySchedule[] RecurringSchedules {
            get {
                return this.RecurringSchedulesField;
            }
            set {
                if ((object.ReferenceEquals(this.RecurringSchedulesField, value) != true)) {
                    this.RecurringSchedulesField = value;
                    this.RaisePropertyChanged("RecurringSchedules");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Suspended {
            get {
                return this.SuspendedField;
            }
            set {
                if ((this.SuspendedField.Equals(value) != true)) {
                    this.SuspendedField = value;
                    this.RaisePropertyChanged("Suspended");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SuspensionEndDate {
            get {
                return this.SuspensionEndDateField;
            }
            set {
                if ((this.SuspensionEndDateField.Equals(value) != true)) {
                    this.SuspensionEndDateField = value;
                    this.RaisePropertyChanged("SuspensionEndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.PaySchedule[] SuspensionSchedules {
            get {
                return this.SuspensionSchedulesField;
            }
            set {
                if ((object.ReferenceEquals(this.SuspensionSchedulesField, value) != true)) {
                    this.SuspensionSchedulesField = value;
                    this.RaisePropertyChanged("SuspensionSchedules");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Term {
            get {
                return this.TermField;
            }
            set {
                if ((this.TermField.Equals(value) != true)) {
                    this.TermField = value;
                    this.RaisePropertyChanged("Term");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.TermType TermType {
            get {
                return this.TermTypeField;
            }
            set {
                if ((this.TermTypeField.Equals(value) != true)) {
                    this.TermTypeField = value;
                    this.RaisePropertyChanged("TermType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=39)]
        public decimal CurrentBalance {
            get {
                return this.CurrentBalanceField;
            }
            set {
                if ((this.CurrentBalanceField.Equals(value) != true)) {
                    this.CurrentBalanceField = value;
                    this.RaisePropertyChanged("CurrentBalance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=40)]
        public decimal CurrentBalanceWithoutFees {
            get {
                return this.CurrentBalanceWithoutFeesField;
            }
            set {
                if ((this.CurrentBalanceWithoutFeesField.Equals(value) != true)) {
                    this.CurrentBalanceWithoutFeesField = value;
                    this.RaisePropertyChanged("CurrentBalanceWithoutFees");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Customer", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class Customer : Creds.TestCredentials.EntityBaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.ContactDetails ContactsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.CustomerDetail CustomerDetailField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.ContactDetails Contacts {
            get {
                return this.ContactsField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactsField, value) != true)) {
                    this.ContactsField = value;
                    this.RaisePropertyChanged("Contacts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.CustomerDetail CustomerDetail {
            get {
                return this.CustomerDetailField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerDetailField, value) != true)) {
                    this.CustomerDetailField = value;
                    this.RaisePropertyChanged("CustomerDetail");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContactDetails", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class ContactDetails : Creds.TestCredentials.EntityBaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.Address[] AddressesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.Email[] EmailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.Phone[] PhonesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.Address[] Addresses {
            get {
                return this.AddressesField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressesField, value) != true)) {
                    this.AddressesField = value;
                    this.RaisePropertyChanged("Addresses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.Email[] Emails {
            get {
                return this.EmailsField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailsField, value) != true)) {
                    this.EmailsField = value;
                    this.RaisePropertyChanged("Emails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.Phone[] Phones {
            get {
                return this.PhonesField;
            }
            set {
                if ((object.ReferenceEquals(this.PhonesField, value) != true)) {
                    this.PhonesField = value;
                    this.RaisePropertyChanged("Phones");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContactBase", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.Email))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.Phone))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.Address))]
    public partial class ContactBase : Creds.TestCredentials.EntityBaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> PreferredField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Preferred {
            get {
                return this.PreferredField;
            }
            set {
                if ((this.PreferredField.Equals(value) != true)) {
                    this.PreferredField = value;
                    this.RaisePropertyChanged("Preferred");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Email", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class Email : Creds.TestCredentials.ContactBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailAddressField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailAddress {
            get {
                return this.EmailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailAddressField, value) != true)) {
                    this.EmailAddressField = value;
                    this.RaisePropertyChanged("EmailAddress");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Phone", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class Phone : Creds.TestCredentials.ContactBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.PhoneCountryCode CountryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.PhoneType PhoneNumberTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StdCodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.PhoneCountryCode CountryCode {
            get {
                return this.CountryCodeField;
            }
            set {
                if ((this.CountryCodeField.Equals(value) != true)) {
                    this.CountryCodeField = value;
                    this.RaisePropertyChanged("CountryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Number {
            get {
                return this.NumberField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberField, value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.PhoneType PhoneNumberType {
            get {
                return this.PhoneNumberTypeField;
            }
            set {
                if ((this.PhoneNumberTypeField.Equals(value) != true)) {
                    this.PhoneNumberTypeField = value;
                    this.RaisePropertyChanged("PhoneNumberType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StdCode {
            get {
                return this.StdCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StdCodeField, value) != true)) {
                    this.StdCodeField = value;
                    this.RaisePropertyChanged("StdCode");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Address", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class Address : Creds.TestCredentials.ContactBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.AddressType AddressTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.Country CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocalityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostcodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<Creds.TestCredentials.AUSStates> StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SuburbField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.AddressType AddressType {
            get {
                return this.AddressTypeField;
            }
            set {
                if ((this.AddressTypeField.Equals(value) != true)) {
                    this.AddressTypeField = value;
                    this.RaisePropertyChanged("AddressType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.Country Country {
            get {
                return this.CountryField;
            }
            set {
                if ((this.CountryField.Equals(value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Locality {
            get {
                return this.LocalityField;
            }
            set {
                if ((object.ReferenceEquals(this.LocalityField, value) != true)) {
                    this.LocalityField = value;
                    this.RaisePropertyChanged("Locality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Postcode {
            get {
                return this.PostcodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostcodeField, value) != true)) {
                    this.PostcodeField = value;
                    this.RaisePropertyChanged("Postcode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<Creds.TestCredentials.AUSStates> State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Street {
            get {
                return this.StreetField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetField, value) != true)) {
                    this.StreetField = value;
                    this.RaisePropertyChanged("Street");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Suburb {
            get {
                return this.SuburbField;
            }
            set {
                if ((object.ReferenceEquals(this.SuburbField, value) != true)) {
                    this.SuburbField = value;
                    this.RaisePropertyChanged("Suburb");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ScheduleBase", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.PaySchedule))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.RequestPaySchedule))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.OneOffSchedule))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.OneOffScheduleDetailed))]
    public partial class ScheduleBase : Creds.TestCredentials.EntityBaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InstallmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.Frequency PaymentFrequencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ScheduleIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Installment {
            get {
                return this.InstallmentField;
            }
            set {
                if ((this.InstallmentField.Equals(value) != true)) {
                    this.InstallmentField = value;
                    this.RaisePropertyChanged("Installment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.Frequency PaymentFrequency {
            get {
                return this.PaymentFrequencyField;
            }
            set {
                if ((this.PaymentFrequencyField.Equals(value) != true)) {
                    this.PaymentFrequencyField = value;
                    this.RaisePropertyChanged("PaymentFrequency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ScheduleId {
            get {
                return this.ScheduleIdField;
            }
            set {
                if ((this.ScheduleIdField.Equals(value) != true)) {
                    this.ScheduleIdField = value;
                    this.RaisePropertyChanged("ScheduleId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PaySchedule", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class PaySchedule : Creds.TestCredentials.ScheduleBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestPaySchedule", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class RequestPaySchedule : Creds.TestCredentials.ScheduleBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime MinimumEffectiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalScheduleIdentifierField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime MinimumEffectiveDate {
            get {
                return this.MinimumEffectiveDateField;
            }
            set {
                if ((this.MinimumEffectiveDateField.Equals(value) != true)) {
                    this.MinimumEffectiveDateField = value;
                    this.RaisePropertyChanged("MinimumEffectiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string ExternalScheduleIdentifier {
            get {
                return this.ExternalScheduleIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalScheduleIdentifierField, value) != true)) {
                    this.ExternalScheduleIdentifierField = value;
                    this.RaisePropertyChanged("ExternalScheduleIdentifier");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OneOffSchedule", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Creds.TestCredentials.OneOffScheduleDetailed))]
    public partial class OneOffSchedule : Creds.TestCredentials.ScheduleBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InRetryField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public bool InRetry {
            get {
                return this.InRetryField;
            }
            set {
                if ((this.InRetryField.Equals(value) != true)) {
                    this.InRetryField = value;
                    this.RaisePropertyChanged("InRetry");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OneOffScheduleDetailed", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class OneOffScheduleDetailed : Creds.TestCredentials.OneOffSchedule {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.PaymentCode PaymentCodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.PaymentCode PaymentCode {
            get {
                return this.PaymentCodeField;
            }
            set {
                if ((this.PaymentCodeField.Equals(value) != true)) {
                    this.PaymentCodeField = value;
                    this.RaisePropertyChanged("PaymentCode");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Paymethod", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class Paymethod : Creds.TestCredentials.EntityBaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountHolderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.AccountType AccountTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.CreditCardType CreditCardTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpiryDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountHolder {
            get {
                return this.AccountHolderField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountHolderField, value) != true)) {
                    this.AccountHolderField = value;
                    this.RaisePropertyChanged("AccountHolder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountNo {
            get {
                return this.AccountNoField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountNoField, value) != true)) {
                    this.AccountNoField = value;
                    this.RaisePropertyChanged("AccountNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.AccountType AccountType {
            get {
                return this.AccountTypeField;
            }
            set {
                if ((this.AccountTypeField.Equals(value) != true)) {
                    this.AccountTypeField = value;
                    this.RaisePropertyChanged("AccountType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.CreditCardType CreditCardType {
            get {
                return this.CreditCardTypeField;
            }
            set {
                if ((this.CreditCardTypeField.Equals(value) != true)) {
                    this.CreditCardTypeField = value;
                    this.RaisePropertyChanged("CreditCardType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpiryDate {
            get {
                return this.ExpiryDateField;
            }
            set {
                if ((this.ExpiryDateField.Equals(value) != true)) {
                    this.ExpiryDateField = value;
                    this.RaisePropertyChanged("ExpiryDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountWithFees", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class AccountWithFees : Creds.TestCredentials.Account {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.OneOffScheduleDetailed[] DSFeeSchedulesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.OneOffScheduleDetailed[] DSFeeSchedules {
            get {
                return this.DSFeeSchedulesField;
            }
            set {
                if ((object.ReferenceEquals(this.DSFeeSchedulesField, value) != true)) {
                    this.DSFeeSchedulesField = value;
                    this.RaisePropertyChanged("DSFeeSchedules");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Audit", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class Audit : Creds.TestCredentials.EntityBaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountReferenceNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateCreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalAccountReferenceNoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountReferenceNo {
            get {
                return this.AccountReferenceNoField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountReferenceNoField, value) != true)) {
                    this.AccountReferenceNoField = value;
                    this.RaisePropertyChanged("AccountReferenceNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateCreated {
            get {
                return this.DateCreatedField;
            }
            set {
                if ((this.DateCreatedField.Equals(value) != true)) {
                    this.DateCreatedField = value;
                    this.RaisePropertyChanged("DateCreated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalAccountReferenceNo {
            get {
                return this.ExternalAccountReferenceNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalAccountReferenceNoField, value) != true)) {
                    this.ExternalAccountReferenceNoField = value;
                    this.RaisePropertyChanged("ExternalAccountReferenceNo");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Payment", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class Payment : Creds.TestCredentials.EntityBaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountReferenceNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BatchNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalAccountReferenceNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalTransactionIdentifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PaymentAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.TransactionCode PaymentCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PaymentDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.TransactionErrorCode PaymentErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PaymentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.PaymentType PaymentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ReversedPaymentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CommissionAmountField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountReferenceNo {
            get {
                return this.AccountReferenceNoField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountReferenceNoField, value) != true)) {
                    this.AccountReferenceNoField = value;
                    this.RaisePropertyChanged("AccountReferenceNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BatchNumber {
            get {
                return this.BatchNumberField;
            }
            set {
                if ((this.BatchNumberField.Equals(value) != true)) {
                    this.BatchNumberField = value;
                    this.RaisePropertyChanged("BatchNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalAccountReferenceNo {
            get {
                return this.ExternalAccountReferenceNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalAccountReferenceNoField, value) != true)) {
                    this.ExternalAccountReferenceNoField = value;
                    this.RaisePropertyChanged("ExternalAccountReferenceNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalTransactionIdentifier {
            get {
                return this.ExternalTransactionIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalTransactionIdentifierField, value) != true)) {
                    this.ExternalTransactionIdentifierField = value;
                    this.RaisePropertyChanged("ExternalTransactionIdentifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PaymentAmount {
            get {
                return this.PaymentAmountField;
            }
            set {
                if ((this.PaymentAmountField.Equals(value) != true)) {
                    this.PaymentAmountField = value;
                    this.RaisePropertyChanged("PaymentAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.TransactionCode PaymentCode {
            get {
                return this.PaymentCodeField;
            }
            set {
                if ((this.PaymentCodeField.Equals(value) != true)) {
                    this.PaymentCodeField = value;
                    this.RaisePropertyChanged("PaymentCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PaymentDate {
            get {
                return this.PaymentDateField;
            }
            set {
                if ((this.PaymentDateField.Equals(value) != true)) {
                    this.PaymentDateField = value;
                    this.RaisePropertyChanged("PaymentDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.TransactionErrorCode PaymentErrorCode {
            get {
                return this.PaymentErrorCodeField;
            }
            set {
                if ((this.PaymentErrorCodeField.Equals(value) != true)) {
                    this.PaymentErrorCodeField = value;
                    this.RaisePropertyChanged("PaymentErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PaymentId {
            get {
                return this.PaymentIdField;
            }
            set {
                if ((this.PaymentIdField.Equals(value) != true)) {
                    this.PaymentIdField = value;
                    this.RaisePropertyChanged("PaymentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.PaymentType PaymentType {
            get {
                return this.PaymentTypeField;
            }
            set {
                if ((this.PaymentTypeField.Equals(value) != true)) {
                    this.PaymentTypeField = value;
                    this.RaisePropertyChanged("PaymentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ReversedPaymentId {
            get {
                return this.ReversedPaymentIdField;
            }
            set {
                if ((this.ReversedPaymentIdField.Equals(value) != true)) {
                    this.ReversedPaymentIdField = value;
                    this.RaisePropertyChanged("ReversedPaymentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=12)]
        public decimal CommissionAmount {
            get {
                return this.CommissionAmountField;
            }
            set {
                if ((this.CommissionAmountField.Equals(value) != true)) {
                    this.CommissionAmountField = value;
                    this.RaisePropertyChanged("CommissionAmount");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BPayPayment", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class BPayPayment : Creds.TestCredentials.EntityBaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BatchNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CRNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContractPrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PaymentAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PaymentDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PaymentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.DocketStatus PaymentStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.PaymentType PaymentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiptField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CommissionAmountField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BatchNumber {
            get {
                return this.BatchNumberField;
            }
            set {
                if ((this.BatchNumberField.Equals(value) != true)) {
                    this.BatchNumberField = value;
                    this.RaisePropertyChanged("BatchNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CRN {
            get {
                return this.CRNField;
            }
            set {
                if ((object.ReferenceEquals(this.CRNField, value) != true)) {
                    this.CRNField = value;
                    this.RaisePropertyChanged("CRN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContractPrefix {
            get {
                return this.ContractPrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.ContractPrefixField, value) != true)) {
                    this.ContractPrefixField = value;
                    this.RaisePropertyChanged("ContractPrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PaymentAmount {
            get {
                return this.PaymentAmountField;
            }
            set {
                if ((this.PaymentAmountField.Equals(value) != true)) {
                    this.PaymentAmountField = value;
                    this.RaisePropertyChanged("PaymentAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PaymentDate {
            get {
                return this.PaymentDateField;
            }
            set {
                if ((this.PaymentDateField.Equals(value) != true)) {
                    this.PaymentDateField = value;
                    this.RaisePropertyChanged("PaymentDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PaymentId {
            get {
                return this.PaymentIdField;
            }
            set {
                if ((this.PaymentIdField.Equals(value) != true)) {
                    this.PaymentIdField = value;
                    this.RaisePropertyChanged("PaymentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.DocketStatus PaymentStatus {
            get {
                return this.PaymentStatusField;
            }
            set {
                if ((this.PaymentStatusField.Equals(value) != true)) {
                    this.PaymentStatusField = value;
                    this.RaisePropertyChanged("PaymentStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.PaymentType PaymentType {
            get {
                return this.PaymentTypeField;
            }
            set {
                if ((this.PaymentTypeField.Equals(value) != true)) {
                    this.PaymentTypeField = value;
                    this.RaisePropertyChanged("PaymentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Receipt {
            get {
                return this.ReceiptField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiptField, value) != true)) {
                    this.ReceiptField = value;
                    this.RaisePropertyChanged("Receipt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public decimal CommissionAmount {
            get {
                return this.CommissionAmountField;
            }
            set {
                if ((this.CommissionAmountField.Equals(value) != true)) {
                    this.CommissionAmountField = value;
                    this.RaisePropertyChanged("CommissionAmount");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PaymentCW", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class PaymentCW : Creds.TestCredentials.EntityBaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountReferenceNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BatchNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateOfBirthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalAccountReferenceNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalTransactionIdentifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PaymentAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.TransactionCode PaymentCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PaymentDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.TransactionErrorCode PaymentErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PaymentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.PaymentType PaymentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ReversedPaymentIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountReferenceNo {
            get {
                return this.AccountReferenceNoField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountReferenceNoField, value) != true)) {
                    this.AccountReferenceNoField = value;
                    this.RaisePropertyChanged("AccountReferenceNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BatchNumber {
            get {
                return this.BatchNumberField;
            }
            set {
                if ((this.BatchNumberField.Equals(value) != true)) {
                    this.BatchNumberField = value;
                    this.RaisePropertyChanged("BatchNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateOfBirth {
            get {
                return this.DateOfBirthField;
            }
            set {
                if ((this.DateOfBirthField.Equals(value) != true)) {
                    this.DateOfBirthField = value;
                    this.RaisePropertyChanged("DateOfBirth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalAccountReferenceNo {
            get {
                return this.ExternalAccountReferenceNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalAccountReferenceNoField, value) != true)) {
                    this.ExternalAccountReferenceNoField = value;
                    this.RaisePropertyChanged("ExternalAccountReferenceNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalTransactionIdentifier {
            get {
                return this.ExternalTransactionIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalTransactionIdentifierField, value) != true)) {
                    this.ExternalTransactionIdentifierField = value;
                    this.RaisePropertyChanged("ExternalTransactionIdentifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Firstname {
            get {
                return this.FirstnameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstnameField, value) != true)) {
                    this.FirstnameField = value;
                    this.RaisePropertyChanged("Firstname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Lastname {
            get {
                return this.LastnameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastnameField, value) != true)) {
                    this.LastnameField = value;
                    this.RaisePropertyChanged("Lastname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PaymentAmount {
            get {
                return this.PaymentAmountField;
            }
            set {
                if ((this.PaymentAmountField.Equals(value) != true)) {
                    this.PaymentAmountField = value;
                    this.RaisePropertyChanged("PaymentAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.TransactionCode PaymentCode {
            get {
                return this.PaymentCodeField;
            }
            set {
                if ((this.PaymentCodeField.Equals(value) != true)) {
                    this.PaymentCodeField = value;
                    this.RaisePropertyChanged("PaymentCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PaymentDate {
            get {
                return this.PaymentDateField;
            }
            set {
                if ((this.PaymentDateField.Equals(value) != true)) {
                    this.PaymentDateField = value;
                    this.RaisePropertyChanged("PaymentDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.TransactionErrorCode PaymentErrorCode {
            get {
                return this.PaymentErrorCodeField;
            }
            set {
                if ((this.PaymentErrorCodeField.Equals(value) != true)) {
                    this.PaymentErrorCodeField = value;
                    this.RaisePropertyChanged("PaymentErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PaymentId {
            get {
                return this.PaymentIdField;
            }
            set {
                if ((this.PaymentIdField.Equals(value) != true)) {
                    this.PaymentIdField = value;
                    this.RaisePropertyChanged("PaymentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.PaymentType PaymentType {
            get {
                return this.PaymentTypeField;
            }
            set {
                if ((this.PaymentTypeField.Equals(value) != true)) {
                    this.PaymentTypeField = value;
                    this.RaisePropertyChanged("PaymentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ReversedPaymentId {
            get {
                return this.ReversedPaymentIdField;
            }
            set {
                if ((this.ReversedPaymentIdField.Equals(value) != true)) {
                    this.ReversedPaymentIdField = value;
                    this.RaisePropertyChanged("ReversedPaymentId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CasualPayment", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class CasualPayment : Creds.TestCredentials.EntityBaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> CommissionAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PaymentAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PaymentDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PaymentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PaymentRefField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.DocketStatus PaymentStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<Creds.TestCredentials.PaymentType> PaymentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiptField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> CommissionAmount {
            get {
                return this.CommissionAmountField;
            }
            set {
                if ((this.CommissionAmountField.Equals(value) != true)) {
                    this.CommissionAmountField = value;
                    this.RaisePropertyChanged("CommissionAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PaymentAmount {
            get {
                return this.PaymentAmountField;
            }
            set {
                if ((this.PaymentAmountField.Equals(value) != true)) {
                    this.PaymentAmountField = value;
                    this.RaisePropertyChanged("PaymentAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PaymentDate {
            get {
                return this.PaymentDateField;
            }
            set {
                if ((this.PaymentDateField.Equals(value) != true)) {
                    this.PaymentDateField = value;
                    this.RaisePropertyChanged("PaymentDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PaymentId {
            get {
                return this.PaymentIdField;
            }
            set {
                if ((this.PaymentIdField.Equals(value) != true)) {
                    this.PaymentIdField = value;
                    this.RaisePropertyChanged("PaymentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PaymentRef {
            get {
                return this.PaymentRefField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentRefField, value) != true)) {
                    this.PaymentRefField = value;
                    this.RaisePropertyChanged("PaymentRef");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.DocketStatus PaymentStatus {
            get {
                return this.PaymentStatusField;
            }
            set {
                if ((this.PaymentStatusField.Equals(value) != true)) {
                    this.PaymentStatusField = value;
                    this.RaisePropertyChanged("PaymentStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<Creds.TestCredentials.PaymentType> PaymentType {
            get {
                return this.PaymentTypeField;
            }
            set {
                if ((this.PaymentTypeField.Equals(value) != true)) {
                    this.PaymentTypeField = value;
                    this.RaisePropertyChanged("PaymentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Receipt {
            get {
                return this.ReceiptField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiptField, value) != true)) {
                    this.ReceiptField = value;
                    this.RaisePropertyChanged("Receipt");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MonthlyCollection", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core.Entities")]
    [System.SerializableAttribute()]
    public partial class MonthlyCollection : Creds.TestCredentials.EntityBaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CollectionAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityAccountContractPrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityAccountDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime MonthStartField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CollectionAmount {
            get {
                return this.CollectionAmountField;
            }
            set {
                if ((this.CollectionAmountField.Equals(value) != true)) {
                    this.CollectionAmountField = value;
                    this.RaisePropertyChanged("CollectionAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityAccountContractPrefix {
            get {
                return this.FacilityAccountContractPrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityAccountContractPrefixField, value) != true)) {
                    this.FacilityAccountContractPrefixField = value;
                    this.RaisePropertyChanged("FacilityAccountContractPrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityAccountDescription {
            get {
                return this.FacilityAccountDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityAccountDescriptionField, value) != true)) {
                    this.FacilityAccountDescriptionField = value;
                    this.RaisePropertyChanged("FacilityAccountDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityName {
            get {
                return this.FacilityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityNameField, value) != true)) {
                    this.FacilityNameField = value;
                    this.RaisePropertyChanged("FacilityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime MonthStart {
            get {
                return this.MonthStartField;
            }
            set {
                if ((this.MonthStartField.Equals(value) != true)) {
                    this.MonthStartField = value;
                    this.RaisePropertyChanged("MonthStart");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActiveAccount", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core.Entities")]
    [System.SerializableAttribute()]
    public partial class ActiveAccount : Creds.TestCredentials.EntityBaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountReferenceNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContractPrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalAccountReferenceNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountReferenceNo {
            get {
                return this.AccountReferenceNoField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountReferenceNoField, value) != true)) {
                    this.AccountReferenceNoField = value;
                    this.RaisePropertyChanged("AccountReferenceNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContractPrefix {
            get {
                return this.ContractPrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.ContractPrefixField, value) != true)) {
                    this.ContractPrefixField = value;
                    this.RaisePropertyChanged("ContractPrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalAccountReferenceNo {
            get {
                return this.ExternalAccountReferenceNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalAccountReferenceNoField, value) != true)) {
                    this.ExternalAccountReferenceNoField = value;
                    this.RaisePropertyChanged("ExternalAccountReferenceNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityName {
            get {
                return this.FacilityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityNameField, value) != true)) {
                    this.FacilityNameField = value;
                    this.RaisePropertyChanged("FacilityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountWithPayments", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core.Entities")]
    [System.SerializableAttribute()]
    public partial class AccountWithPayments : Creds.TestCredentials.EntityBaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountReferenceNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalAccountReferenceNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.PaymentWithPaySchedule[] PaymentsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountReferenceNo {
            get {
                return this.AccountReferenceNoField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountReferenceNoField, value) != true)) {
                    this.AccountReferenceNoField = value;
                    this.RaisePropertyChanged("AccountReferenceNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalAccountReferenceNo {
            get {
                return this.ExternalAccountReferenceNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalAccountReferenceNoField, value) != true)) {
                    this.ExternalAccountReferenceNoField = value;
                    this.RaisePropertyChanged("ExternalAccountReferenceNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.PaymentWithPaySchedule[] Payments {
            get {
                return this.PaymentsField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentsField, value) != true)) {
                    this.PaymentsField = value;
                    this.RaisePropertyChanged("Payments");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PaymentWithPaySchedule", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core.Entities")]
    [System.SerializableAttribute()]
    public partial class PaymentWithPaySchedule : Creds.TestCredentials.EntityBaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.PayScheduleQik[] PaySchedulesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PaymentAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.TransactionCode PaymentCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.TransactionErrorCode PaymentErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PaymentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.PaymentType PaymentTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.PayScheduleQik[] PaySchedules {
            get {
                return this.PaySchedulesField;
            }
            set {
                if ((object.ReferenceEquals(this.PaySchedulesField, value) != true)) {
                    this.PaySchedulesField = value;
                    this.RaisePropertyChanged("PaySchedules");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PaymentAmount {
            get {
                return this.PaymentAmountField;
            }
            set {
                if ((this.PaymentAmountField.Equals(value) != true)) {
                    this.PaymentAmountField = value;
                    this.RaisePropertyChanged("PaymentAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.TransactionCode PaymentCode {
            get {
                return this.PaymentCodeField;
            }
            set {
                if ((this.PaymentCodeField.Equals(value) != true)) {
                    this.PaymentCodeField = value;
                    this.RaisePropertyChanged("PaymentCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.TransactionErrorCode PaymentErrorCode {
            get {
                return this.PaymentErrorCodeField;
            }
            set {
                if ((this.PaymentErrorCodeField.Equals(value) != true)) {
                    this.PaymentErrorCodeField = value;
                    this.RaisePropertyChanged("PaymentErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PaymentId {
            get {
                return this.PaymentIdField;
            }
            set {
                if ((this.PaymentIdField.Equals(value) != true)) {
                    this.PaymentIdField = value;
                    this.RaisePropertyChanged("PaymentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.PaymentType PaymentType {
            get {
                return this.PaymentTypeField;
            }
            set {
                if ((this.PaymentTypeField.Equals(value) != true)) {
                    this.PaymentTypeField = value;
                    this.RaisePropertyChanged("PaymentType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PayScheduleQik", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core.Entities")]
    [System.SerializableAttribute()]
    public partial class PayScheduleQik : Creds.TestCredentials.EntityBaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalIdentifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InRetryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InstallmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PaidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.DocketStatus PaymentStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ScheduleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StatusDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalIdentifier {
            get {
                return this.ExternalIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalIdentifierField, value) != true)) {
                    this.ExternalIdentifierField = value;
                    this.RaisePropertyChanged("ExternalIdentifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InRetry {
            get {
                return this.InRetryField;
            }
            set {
                if ((this.InRetryField.Equals(value) != true)) {
                    this.InRetryField = value;
                    this.RaisePropertyChanged("InRetry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Installment {
            get {
                return this.InstallmentField;
            }
            set {
                if ((this.InstallmentField.Equals(value) != true)) {
                    this.InstallmentField = value;
                    this.RaisePropertyChanged("Installment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Paid {
            get {
                return this.PaidField;
            }
            set {
                if ((this.PaidField.Equals(value) != true)) {
                    this.PaidField = value;
                    this.RaisePropertyChanged("Paid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.DocketStatus PaymentStatus {
            get {
                return this.PaymentStatusField;
            }
            set {
                if ((this.PaymentStatusField.Equals(value) != true)) {
                    this.PaymentStatusField = value;
                    this.RaisePropertyChanged("PaymentStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ScheduleId {
            get {
                return this.ScheduleIdField;
            }
            set {
                if ((this.ScheduleIdField.Equals(value) != true)) {
                    this.ScheduleIdField = value;
                    this.RaisePropertyChanged("ScheduleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StatusDate {
            get {
                return this.StatusDateField;
            }
            set {
                if ((this.StatusDateField.Equals(value) != true)) {
                    this.StatusDateField = value;
                    this.RaisePropertyChanged("StatusDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PaymentForPaymentsWithSchedules", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core.Entities")]
    [System.SerializableAttribute()]
    public partial class PaymentForPaymentsWithSchedules : Creds.TestCredentials.EntityBaseClass {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountReferenceNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BatchNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CommissionAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalAccountReferenceNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalTransactionIdentifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.PayScheduleQik[] PaySchedulesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PaymentAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.TransactionCode PaymentCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PaymentDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.TransactionErrorCode PaymentErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PaymentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.PaymentType PaymentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ReversedPaymentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TransactionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool WasRetryField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountReferenceNo {
            get {
                return this.AccountReferenceNoField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountReferenceNoField, value) != true)) {
                    this.AccountReferenceNoField = value;
                    this.RaisePropertyChanged("AccountReferenceNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BatchNumber {
            get {
                return this.BatchNumberField;
            }
            set {
                if ((this.BatchNumberField.Equals(value) != true)) {
                    this.BatchNumberField = value;
                    this.RaisePropertyChanged("BatchNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CommissionAmount {
            get {
                return this.CommissionAmountField;
            }
            set {
                if ((this.CommissionAmountField.Equals(value) != true)) {
                    this.CommissionAmountField = value;
                    this.RaisePropertyChanged("CommissionAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalAccountReferenceNo {
            get {
                return this.ExternalAccountReferenceNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalAccountReferenceNoField, value) != true)) {
                    this.ExternalAccountReferenceNoField = value;
                    this.RaisePropertyChanged("ExternalAccountReferenceNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalTransactionIdentifier {
            get {
                return this.ExternalTransactionIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalTransactionIdentifierField, value) != true)) {
                    this.ExternalTransactionIdentifierField = value;
                    this.RaisePropertyChanged("ExternalTransactionIdentifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.PayScheduleQik[] PaySchedules {
            get {
                return this.PaySchedulesField;
            }
            set {
                if ((object.ReferenceEquals(this.PaySchedulesField, value) != true)) {
                    this.PaySchedulesField = value;
                    this.RaisePropertyChanged("PaySchedules");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PaymentAmount {
            get {
                return this.PaymentAmountField;
            }
            set {
                if ((this.PaymentAmountField.Equals(value) != true)) {
                    this.PaymentAmountField = value;
                    this.RaisePropertyChanged("PaymentAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.TransactionCode PaymentCode {
            get {
                return this.PaymentCodeField;
            }
            set {
                if ((this.PaymentCodeField.Equals(value) != true)) {
                    this.PaymentCodeField = value;
                    this.RaisePropertyChanged("PaymentCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PaymentDate {
            get {
                return this.PaymentDateField;
            }
            set {
                if ((this.PaymentDateField.Equals(value) != true)) {
                    this.PaymentDateField = value;
                    this.RaisePropertyChanged("PaymentDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.TransactionErrorCode PaymentErrorCode {
            get {
                return this.PaymentErrorCodeField;
            }
            set {
                if ((this.PaymentErrorCodeField.Equals(value) != true)) {
                    this.PaymentErrorCodeField = value;
                    this.RaisePropertyChanged("PaymentErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PaymentId {
            get {
                return this.PaymentIdField;
            }
            set {
                if ((this.PaymentIdField.Equals(value) != true)) {
                    this.PaymentIdField = value;
                    this.RaisePropertyChanged("PaymentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.PaymentType PaymentType {
            get {
                return this.PaymentTypeField;
            }
            set {
                if ((this.PaymentTypeField.Equals(value) != true)) {
                    this.PaymentTypeField = value;
                    this.RaisePropertyChanged("PaymentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ReversedPaymentId {
            get {
                return this.ReversedPaymentIdField;
            }
            set {
                if ((this.ReversedPaymentIdField.Equals(value) != true)) {
                    this.ReversedPaymentIdField = value;
                    this.RaisePropertyChanged("ReversedPaymentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TransactionDate {
            get {
                return this.TransactionDateField;
            }
            set {
                if ((this.TransactionDateField.Equals(value) != true)) {
                    this.TransactionDateField = value;
                    this.RaisePropertyChanged("TransactionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool WasRetry {
            get {
                return this.WasRetryField;
            }
            set {
                if ((this.WasRetryField.Equals(value) != true)) {
                    this.WasRetryField = value;
                    this.RaisePropertyChanged("WasRetry");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Frequency", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.Framework")]
    public enum Frequency : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotSpecified = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OneOff = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Weekly = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Fortnightly = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FourWeekly = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Monthly = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BiMonthly = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Quarterly = 7,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TermType", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.Framework")]
    public enum TermType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Months = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Payments = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerDetail", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class CustomerDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateOfBirthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.Gender GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiddleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateOfBirth {
            get {
                return this.DateOfBirthField;
            }
            set {
                if ((this.DateOfBirthField.Equals(value) != true)) {
                    this.DateOfBirthField = value;
                    this.RaisePropertyChanged("DateOfBirth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.Gender Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((this.GenderField.Equals(value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string MiddleName {
            get {
                return this.MiddleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MiddleNameField, value) != true)) {
                    this.MiddleNameField = value;
                    this.RaisePropertyChanged("MiddleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddressType", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.Framework")]
    public enum AddressType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Business = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Home = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Physical = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Postal = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Previous = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Country", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.Framework")]
    public enum Country : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Australia = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NewZealand = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HongKong = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnitedStatesOfAmerica = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AUSStates", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.Framework")]
    public enum AUSStates : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotSpecified = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AustralianCapitalTerritory = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NewSouthWales = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NorthernTerritory = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Queensland = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SouthAustralia = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Tasmania = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Victoria = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WesternAustralia = 8,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PhoneCountryCode", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.Framework")]
    public enum PhoneCountryCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotSpecified = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Aus = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NZ = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HKG = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        USA = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PhoneType", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.Framework")]
    public enum PhoneType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Emergency = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Fax = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Home = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Mobile = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Previous = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Work = 5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Gender", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.Framework")]
    public enum Gender : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Female = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Male = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PaymentCode", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.Framework")]
    public enum PaymentCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AgentFee = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AttachmentOrder = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CancellationFee = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CaseCloseFee = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Commission = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Correspondence = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DebtCallFee = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DefaultFee = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocumentPreparationFee = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EstablishmentFee = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExaminationOrder = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FieldCall = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Judgement = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MiscellaneousFee = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoticeOfProceedings = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OneOffPayment = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Payment = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PaymentVariationFee = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PenaltyFee = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Service = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StatementFee = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SuspensionFee = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TraceFee = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransferFee = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VariationFee = 24,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountType", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.Framework")]
    public enum AccountType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BankAccount = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditCard = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreditCardType", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.Framework")]
    public enum CreditCardType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AmericanExpress = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Diners = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Mastercard = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Visa = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Token = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Discover = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JCB = 7,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransactionCode", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.Framework")]
    public enum TransactionCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoSpecified = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Payment = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DebtCollectionPayment = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DefaultFee = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EstablishmentFee = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MiscellaneousFee = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PaidAtBusiness = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PenaltyFee = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OneOffPayment = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DebtCallFee = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PaymentVariationFee = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StatementFee = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AccountTransfer = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransferFee = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Service = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Commission = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocumentPreparationFee = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Judgement = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AttachmentOrder = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExaminationOrder = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoticeOfProceedings = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Correspondence = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AgentFee = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FieldCall = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TraceFee = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CaseCloseFee = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Refund = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VariationFee = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FacilityVariationFee = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SuspensionFee = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CancellationFee = 30,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransactionErrorCode", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.Framework")]
    public enum TransactionErrorCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoAuthority = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AccountClosed = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InsufficientFunds = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AuthorityStopped = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoError = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidAccount = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Declined = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CardExpired = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RestrictedCard = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LostOrStolenCard = 9,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PaymentType", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.Framework")]
    public enum PaymentType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DirectDebit = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AutomaticPayment = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditCard = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BankImport = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Cash = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Cheque = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DebtCollection = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DirectCredit = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MoneyOrder = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PaidtoFacility = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TelephoneBanking = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Transfer = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Suspense = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EFTPOS = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManualReceipting = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReAllocation = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditCardOther = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditUnion = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BPAY = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BPAYCreditCard = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BPAYCreditCardOther = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WebPayCreditCard = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WebPayCreditCardOther = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CasualCreditCard = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CasualCreditCardOther = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CasualPointofSale = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CasualPointofSaleOther = 26,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocketStatus", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    public enum DocketStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Settled = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Cleared = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Failed = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Pending = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InRetry = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransactionStatus", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    public enum TransactionStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotSubmitted = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Processing = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServiceBusy = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Declined = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Authorised = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Requires3ds = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StatusRequired = 6,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChargeType", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.Framework")]
    public enum ChargeType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotConfigured = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PerTransaction = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Percentage = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PercentagePlusPerTransaction = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EstablishmentFeeStatus", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.Framework")]
    public enum EstablishmentFeeStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ClientPaysEstablishmentFee = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FacilityPaysEstablishmentFee = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoEstablishmentFee = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClosedAccount", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core.Entities")]
    [System.SerializableAttribute()]
    public partial class ClosedAccount : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountReferenceNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CancelReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContractPrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomCancelReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateAccountClosedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalAccountReferenceNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountReferenceNo {
            get {
                return this.AccountReferenceNoField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountReferenceNoField, value) != true)) {
                    this.AccountReferenceNoField = value;
                    this.RaisePropertyChanged("AccountReferenceNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CancelReason {
            get {
                return this.CancelReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.CancelReasonField, value) != true)) {
                    this.CancelReasonField = value;
                    this.RaisePropertyChanged("CancelReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContractPrefix {
            get {
                return this.ContractPrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.ContractPrefixField, value) != true)) {
                    this.ContractPrefixField = value;
                    this.RaisePropertyChanged("ContractPrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomCancelReason {
            get {
                return this.CustomCancelReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomCancelReasonField, value) != true)) {
                    this.CustomCancelReasonField = value;
                    this.RaisePropertyChanged("CustomCancelReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateAccountClosed {
            get {
                return this.DateAccountClosedField;
            }
            set {
                if ((this.DateAccountClosedField.Equals(value) != true)) {
                    this.DateAccountClosedField = value;
                    this.RaisePropertyChanged("DateAccountClosed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalAccountReferenceNo {
            get {
                return this.ExternalAccountReferenceNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalAccountReferenceNoField, value) != true)) {
                    this.ExternalAccountReferenceNoField = value;
                    this.RaisePropertyChanged("ExternalAccountReferenceNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountOverdueStatusChange", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core.Entities")]
    [System.SerializableAttribute()]
    public partial class AccountOverdueStatusChange : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountReferenceNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalAccountReferenceNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> FromOverdueAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FromOverdueStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FromOverdueStatusChangeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ToOverdueAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ToOverdueStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ToOverdueStatusChangeDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountReferenceNo {
            get {
                return this.AccountReferenceNoField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountReferenceNoField, value) != true)) {
                    this.AccountReferenceNoField = value;
                    this.RaisePropertyChanged("AccountReferenceNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalAccountReferenceNo {
            get {
                return this.ExternalAccountReferenceNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalAccountReferenceNoField, value) != true)) {
                    this.ExternalAccountReferenceNoField = value;
                    this.RaisePropertyChanged("ExternalAccountReferenceNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> FromOverdueAmount {
            get {
                return this.FromOverdueAmountField;
            }
            set {
                if ((this.FromOverdueAmountField.Equals(value) != true)) {
                    this.FromOverdueAmountField = value;
                    this.RaisePropertyChanged("FromOverdueAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FromOverdueStatus {
            get {
                return this.FromOverdueStatusField;
            }
            set {
                if ((this.FromOverdueStatusField.Equals(value) != true)) {
                    this.FromOverdueStatusField = value;
                    this.RaisePropertyChanged("FromOverdueStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> FromOverdueStatusChangeDate {
            get {
                return this.FromOverdueStatusChangeDateField;
            }
            set {
                if ((this.FromOverdueStatusChangeDateField.Equals(value) != true)) {
                    this.FromOverdueStatusChangeDateField = value;
                    this.RaisePropertyChanged("FromOverdueStatusChangeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ToOverdueAmount {
            get {
                return this.ToOverdueAmountField;
            }
            set {
                if ((this.ToOverdueAmountField.Equals(value) != true)) {
                    this.ToOverdueAmountField = value;
                    this.RaisePropertyChanged("ToOverdueAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ToOverdueStatus {
            get {
                return this.ToOverdueStatusField;
            }
            set {
                if ((this.ToOverdueStatusField.Equals(value) != true)) {
                    this.ToOverdueStatusField = value;
                    this.RaisePropertyChanged("ToOverdueStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ToOverdueStatusChangeDate {
            get {
                return this.ToOverdueStatusChangeDateField;
            }
            set {
                if ((this.ToOverdueStatusChangeDateField.Equals(value) != true)) {
                    this.ToOverdueStatusChangeDateField = value;
                    this.RaisePropertyChanged("ToOverdueStatusChangeDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GuarantorDetails", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    [System.SerializableAttribute()]
    public partial class GuarantorDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Creds.TestCredentials.Country CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateOfBirthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HomePhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocalityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostcodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RelationshipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<Creds.TestCredentials.AUSStates> StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SuburbField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WorkPhoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Creds.TestCredentials.Country Country {
            get {
                return this.CountryField;
            }
            set {
                if ((this.CountryField.Equals(value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateOfBirth {
            get {
                return this.DateOfBirthField;
            }
            set {
                if ((this.DateOfBirthField.Equals(value) != true)) {
                    this.DateOfBirthField = value;
                    this.RaisePropertyChanged("DateOfBirth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HomePhone {
            get {
                return this.HomePhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.HomePhoneField, value) != true)) {
                    this.HomePhoneField = value;
                    this.RaisePropertyChanged("HomePhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Locality {
            get {
                return this.LocalityField;
            }
            set {
                if ((object.ReferenceEquals(this.LocalityField, value) != true)) {
                    this.LocalityField = value;
                    this.RaisePropertyChanged("Locality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Postcode {
            get {
                return this.PostcodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostcodeField, value) != true)) {
                    this.PostcodeField = value;
                    this.RaisePropertyChanged("Postcode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Relationship {
            get {
                return this.RelationshipField;
            }
            set {
                if ((object.ReferenceEquals(this.RelationshipField, value) != true)) {
                    this.RelationshipField = value;
                    this.RaisePropertyChanged("Relationship");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<Creds.TestCredentials.AUSStates> State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Street {
            get {
                return this.StreetField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetField, value) != true)) {
                    this.StreetField = value;
                    this.RaisePropertyChanged("Street");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Suburb {
            get {
                return this.SuburbField;
            }
            set {
                if ((object.ReferenceEquals(this.SuburbField, value) != true)) {
                    this.SuburbField = value;
                    this.RaisePropertyChanged("Suburb");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkPhone {
            get {
                return this.WorkPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkPhoneField, value) != true)) {
                    this.WorkPhoneField = value;
                    this.RaisePropertyChanged("WorkPhone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PayMethodType", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    public enum PayMethodType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotSpecified = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BankAccount = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditCard = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Both = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PayNowRequestType", Namespace="http://schemas.datacontract.org/2004/07/Debitsuccess.WebServices.Core")]
    public enum PayNowRequestType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotSpecified = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RealTimePayment = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UpdatePaymentDetail = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="Debitsuccess.WebServices.WCF", ConfigurationName="TestCredentials.DSServices")]
    public interface DSServices {
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/CancelAccount", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/CancelAccountResponse")]
        Creds.TestCredentials.ResponseAccountCancellation CancelAccount(Creds.TestCredentials.RequestAccountCancellation request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/CancelAccount", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/CancelAccountResponse")]
        System.Threading.Tasks.Task<Creds.TestCredentials.ResponseAccountCancellation> CancelAccountAsync(Creds.TestCredentials.RequestAccountCancellation request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/GetTermsAndConditions", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/GetTermsAndConditionsResponse")]
        Creds.TestCredentials.ResponseGetTermsAndConditions GetTermsAndConditions(Creds.TestCredentials.RequestGetTermsAndConditions request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/GetTermsAndConditions", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/GetTermsAndConditionsResponse")]
        System.Threading.Tasks.Task<Creds.TestCredentials.ResponseGetTermsAndConditions> GetTermsAndConditionsAsync(Creds.TestCredentials.RequestGetTermsAndConditions request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/GetCallsHistoryForDateRange", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/GetCallsHistoryForDateRangeResponse")]
        Creds.TestCredentials.ResponseRetrieveCalls GetCallsHistoryForDateRange(Creds.TestCredentials.RequestRetrieveCallsForDateRange request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/GetCallsHistoryForDateRange", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/GetCallsHistoryForDateRangeResponse")]
        System.Threading.Tasks.Task<Creds.TestCredentials.ResponseRetrieveCalls> GetCallsHistoryForDateRangeAsync(Creds.TestCredentials.RequestRetrieveCallsForDateRange request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/GetCallsHistoryByAccountId", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/GetCallsHistoryByAccountIdResponse")]
        Creds.TestCredentials.ResponseRetrieveCalls GetCallsHistoryByAccountId(Creds.TestCredentials.RequestRetrieveCallsByAccountID request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/GetCallsHistoryByAccountId", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/GetCallsHistoryByAccountIdResponse")]
        System.Threading.Tasks.Task<Creds.TestCredentials.ResponseRetrieveCalls> GetCallsHistoryByAccountIdAsync(Creds.TestCredentials.RequestRetrieveCallsByAccountID request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/PostCustomerAccount", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/PostCustomerAccountResponse")]
        Creds.TestCredentials.ResponsePostCustomerAccount PostCustomerAccount(Creds.TestCredentials.RequestPostCustomerAccount request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/PostCustomerAccount", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/PostCustomerAccountResponse")]
        System.Threading.Tasks.Task<Creds.TestCredentials.ResponsePostCustomerAccount> PostCustomerAccountAsync(Creds.TestCredentials.RequestPostCustomerAccount request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/PostCustomerAccountForExistingCustomer", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/PostCustomerAccountForExistingCustomerRes" +
            "ponse")]
        Creds.TestCredentials.ResponsePostCustomerAccount PostCustomerAccountForExistingCustomer(Creds.TestCredentials.RequestPostCustomerAccountForExistingCustomer request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/PostCustomerAccountForExistingCustomer", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/PostCustomerAccountForExistingCustomerRes" +
            "ponse")]
        System.Threading.Tasks.Task<Creds.TestCredentials.ResponsePostCustomerAccount> PostCustomerAccountForExistingCustomerAsync(Creds.TestCredentials.RequestPostCustomerAccountForExistingCustomer request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/GetCustomerAccountByAccountId", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/GetCustomerAccountByAccountIdResponse")]
        Creds.TestCredentials.ResponseRetrieveCustomerAccounts GetCustomerAccountByAccountId(Creds.TestCredentials.RequestRetrieveCustomerAccountByAccountID request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/GetCustomerAccountByAccountId", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/GetCustomerAccountByAccountIdResponse")]
        System.Threading.Tasks.Task<Creds.TestCredentials.ResponseRetrieveCustomerAccounts> GetCustomerAccountByAccountIdAsync(Creds.TestCredentials.RequestRetrieveCustomerAccountByAccountID request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/GetCustomerAccountWithFeesByAccountId", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/GetCustomerAccountWithFeesByAccountIdResp" +
            "onse")]
        Creds.TestCredentials.ResponseRetrieveCustomerAccountsWithFees GetCustomerAccountWithFeesByAccountId(Creds.TestCredentials.RequestRetrieveCustomerAccountWithFeesByAccountID request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/GetCustomerAccountWithFeesByAccountId", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/GetCustomerAccountWithFeesByAccountIdResp" +
            "onse")]
        System.Threading.Tasks.Task<Creds.TestCredentials.ResponseRetrieveCustomerAccountsWithFees> GetCustomerAccountWithFeesByAccountIdAsync(Creds.TestCredentials.RequestRetrieveCustomerAccountWithFeesByAccountID request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/GetCustomerAccountForDateRange", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/GetCustomerAccountForDateRangeResponse")]
        Creds.TestCredentials.ResponseRetrieveCustomerAccounts GetCustomerAccountForDateRange(Creds.TestCredentials.RequestRetrieveCustomerAccountsForDateRange request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/GetCustomerAccountForDateRange", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/GetCustomerAccountForDateRangeResponse")]
        System.Threading.Tasks.Task<Creds.TestCredentials.ResponseRetrieveCustomerAccounts> GetCustomerAccountForDateRangeAsync(Creds.TestCredentials.RequestRetrieveCustomerAccountsForDateRange request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/GetCustomerAccountWithFeesForDateRange", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/GetCustomerAccountWithFeesForDateRangeRes" +
            "ponse")]
        Creds.TestCredentials.ResponseRetrieveCustomerAccountsWithFees GetCustomerAccountWithFeesForDateRange(Creds.TestCredentials.RequestRetrieveCustomerAccountsWithFeesForDateRange request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/GetCustomerAccountWithFeesForDateRange", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/GetCustomerAccountWithFeesForDateRangeRes" +
            "ponse")]
        System.Threading.Tasks.Task<Creds.TestCredentials.ResponseRetrieveCustomerAccountsWithFees> GetCustomerAccountWithFeesForDateRangeAsync(Creds.TestCredentials.RequestRetrieveCustomerAccountsWithFeesForDateRange request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/CreateSchedule", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/CreateScheduleResponse")]
        Creds.TestCredentials.ResponseNewPaySchedule CreateSchedule(Creds.TestCredentials.RequestNewPaySchedule request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/CreateSchedule", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/CreateScheduleResponse")]
        System.Threading.Tasks.Task<Creds.TestCredentials.ResponseNewPaySchedule> CreateScheduleAsync(Creds.TestCredentials.RequestNewPaySchedule request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/AdjustNextPaymentDate", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/AdjustNextPaymentDateResponse")]
        Creds.TestCredentials.ResponseAdjustNextPaymentDate AdjustNextPaymentDate(Creds.TestCredentials.RequestAdjustNextPaymentDate request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/AdjustNextPaymentDate", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/AdjustNextPaymentDateResponse")]
        System.Threading.Tasks.Task<Creds.TestCredentials.ResponseAdjustNextPaymentDate> AdjustNextPaymentDateAsync(Creds.TestCredentials.RequestAdjustNextPaymentDate request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/AdjustDateDayOfPayment", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/AdjustDateDayOfPaymentResponse")]
        Creds.TestCredentials.ResponseAdjustDateOfPayment AdjustDateDayOfPayment(Creds.TestCredentials.RequestAdjustDateOfPayment request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/AdjustDateDayOfPayment", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/AdjustDateDayOfPaymentResponse")]
        System.Threading.Tasks.Task<Creds.TestCredentials.ResponseAdjustDateOfPayment> AdjustDateDayOfPaymentAsync(Creds.TestCredentials.RequestAdjustDateOfPayment request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/AdjustAccountLastAccess", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/AdjustAccountLastAccessResponse")]
        Creds.TestCredentials.ResponseAdjustAccountLastAccess AdjustAccountLastAccess(Creds.TestCredentials.RequestAdjustAccountLastAccess request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/AdjustAccountLastAccess", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/AdjustAccountLastAccessResponse")]
        System.Threading.Tasks.Task<Creds.TestCredentials.ResponseAdjustAccountLastAccess> AdjustAccountLastAccessAsync(Creds.TestCredentials.RequestAdjustAccountLastAccess request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/AdjustAccountExternalAccountReferenceNo", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/AdjustAccountExternalAccountReferenceNoRe" +
            "sponse")]
        Creds.TestCredentials.ResponseAdjustAccountExternalAccountReferenceNo AdjustAccountExternalAccountReferenceNo(Creds.TestCredentials.RequestAdjustAccountExternalAccountReferenceNo request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/AdjustAccountExternalAccountReferenceNo", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/AdjustAccountExternalAccountReferenceNoRe" +
            "sponse")]
        System.Threading.Tasks.Task<Creds.TestCredentials.ResponseAdjustAccountExternalAccountReferenceNo> AdjustAccountExternalAccountReferenceNoAsync(Creds.TestCredentials.RequestAdjustAccountExternalAccountReferenceNo request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/AdjustAccountNextPaymentDate", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/AdjustAccountNextPaymentDateResponse")]
        Creds.TestCredentials.ResponseAdjustAccountNextPaymentDate AdjustAccountNextPaymentDate(Creds.TestCredentials.RequestAdjustAccountNextPaymentDate request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/AdjustAccountNextPaymentDate", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/AdjustAccountNextPaymentDateResponse")]
        System.Threading.Tasks.Task<Creds.TestCredentials.ResponseAdjustAccountNextPaymentDate> AdjustAccountNextPaymentDateAsync(Creds.TestCredentials.RequestAdjustAccountNextPaymentDate request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/AdjustAccountTotalValue", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/AdjustAccountTotalValueResponse")]
        Creds.TestCredentials.ResponseAdjustAccountTotalValue AdjustAccountTotalValue(Creds.TestCredentials.RequestAdjustAccountTotalValue request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/AdjustAccountTotalValue", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/AdjustAccountTotalValueResponse")]
        System.Threading.Tasks.Task<Creds.TestCredentials.ResponseAdjustAccountTotalValue> AdjustAccountTotalValueAsync(Creds.TestCredentials.RequestAdjustAccountTotalValue request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/AdjustAccountMinimumTerm", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/AdjustAccountMinimumTermResponse")]
        Creds.TestCredentials.ResponseAdjustAccountMinimumTerm AdjustAccountMinimumTerm(Creds.TestCredentials.RequestAdjustAccountMinimumTerm request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/AdjustAccountMinimumTerm", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/AdjustAccountMinimumTermResponse")]
        System.Threading.Tasks.Task<Creds.TestCredentials.ResponseAdjustAccountMinimumTerm> AdjustAccountMinimumTermAsync(Creds.TestCredentials.RequestAdjustAccountMinimumTerm request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/AdjustAccountStartDate", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/AdjustAccountStartDateResponse")]
        Creds.TestCredentials.ResponseAdjustAccountStartDate AdjustAccountStartDate(Creds.TestCredentials.RequestAdjustAccountStartDate request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/AdjustAccountStartDate", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/AdjustAccountStartDateResponse")]
        System.Threading.Tasks.Task<Creds.TestCredentials.ResponseAdjustAccountStartDate> AdjustAccountStartDateAsync(Creds.TestCredentials.RequestAdjustAccountStartDate request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/StopPayment", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/StopPaymentResponse")]
        Creds.TestCredentials.ResponseStopPayment StopPayment(Creds.TestCredentials.RequestStopPayment request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/StopPayment", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/StopPaymentResponse")]
        System.Threading.Tasks.Task<Creds.TestCredentials.ResponseStopPayment> StopPaymentAsync(Creds.TestCredentials.RequestStopPayment request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/PaymentCollected", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/PaymentCollectedResponse")]
        Creds.TestCredentials.ResponsePaymentCollected PaymentCollected(Creds.TestCredentials.RequestPaymentCollected request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/PaymentCollected", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/PaymentCollectedResponse")]
        System.Threading.Tasks.Task<Creds.TestCredentials.ResponsePaymentCollected> PaymentCollectedAsync(Creds.TestCredentials.RequestPaymentCollected request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/ChangePaymentMethod", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/ChangePaymentMethodResponse")]
        Creds.TestCredentials.ResponseChangePaymentMethod ChangePaymentMethod(Creds.TestCredentials.RequestChangePaymentMethod request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/ChangePaymentMethod", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/ChangePaymentMethodResponse")]
        System.Threading.Tasks.Task<Creds.TestCredentials.ResponseChangePaymentMethod> ChangePaymentMethodAsync(Creds.TestCredentials.RequestChangePaymentMethod request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/InitiateRefund", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/InitiateRefundResponse")]
        Creds.TestCredentials.ResponseInitiateRefund InitiateRefund(Creds.TestCredentials.RequestInitiateRefund request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/InitiateRefund", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/InitiateRefundResponse")]
        System.Threading.Tasks.Task<Creds.TestCredentials.ResponseInitiateRefund> InitiateRefundAsync(Creds.TestCredentials.RequestInitiateRefund request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/GetPayMethodDetails", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/GetPayMethodDetailsResponse")]
        Creds.TestCredentials.ResponseRetrievePayMethodDetails GetPayMethodDetails(Creds.TestCredentials.RequestRetrievePayMethodDetails request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/GetPayMethodDetails", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/GetPayMethodDetailsResponse")]
        System.Threading.Tasks.Task<Creds.TestCredentials.ResponseRetrievePayMethodDetails> GetPayMethodDetailsAsync(Creds.TestCredentials.RequestRetrievePayMethodDetails request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/AdjustCatchUpPayment", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/AdjustCatchUpPaymentResponse")]
        Creds.TestCredentials.ResponseAdjustCatchUpPayment AdjustCatchUpPayment(Creds.TestCredentials.RequestAdjustCatchUpPayment request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/AdjustCatchUpPayment", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/AdjustCatchUpPaymentResponse")]
        System.Threading.Tasks.Task<Creds.TestCredentials.ResponseAdjustCatchUpPayment> AdjustCatchUpPaymentAsync(Creds.TestCredentials.RequestAdjustCatchUpPayment request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/GetAuditHistoryForDateRange", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/GetAuditHistoryForDateRangeResponse")]
        Creds.TestCredentials.ResponseRetrieveAuditTrail GetAuditHistoryForDateRange(Creds.TestCredentials.RequestRetrieveAuditTrailForDateRange request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/GetAuditHistoryForDateRange", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/GetAuditHistoryForDateRangeResponse")]
        System.Threading.Tasks.Task<Creds.TestCredentials.ResponseRetrieveAuditTrail> GetAuditHistoryForDateRangeAsync(Creds.TestCredentials.RequestRetrieveAuditTrailForDateRange request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/GetAuditHistoryByAccountId", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/GetAuditHistoryByAccountIdResponse")]
        Creds.TestCredentials.ResponseRetrieveAuditTrail GetAuditHistoryByAccountId(Creds.TestCredentials.RequestRetrieveAuditTrailByAccountID request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/GetAuditHistoryByAccountId", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/GetAuditHistoryByAccountIdResponse")]
        System.Threading.Tasks.Task<Creds.TestCredentials.ResponseRetrieveAuditTrail> GetAuditHistoryByAccountIdAsync(Creds.TestCredentials.RequestRetrieveAuditTrailByAccountID request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/GetPaymentHistoryForDateRange", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/GetPaymentHistoryForDateRangeResponse")]
        Creds.TestCredentials.ResponseRetrievePaymentHistory GetPaymentHistoryForDateRange(Creds.TestCredentials.RequestRetrievePaymentHistoryForDateRange request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/GetPaymentHistoryForDateRange", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/GetPaymentHistoryForDateRangeResponse")]
        System.Threading.Tasks.Task<Creds.TestCredentials.ResponseRetrievePaymentHistory> GetPaymentHistoryForDateRangeAsync(Creds.TestCredentials.RequestRetrievePaymentHistoryForDateRange request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/GetBPayTransactionsByDateRange", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/GetBPayTransactionsByDateRangeResponse")]
        Creds.TestCredentials.ResponseRetrieveGetBPayTransactionsByDateRange GetBPayTransactionsByDateRange(Creds.TestCredentials.RequestRetrieveGetBPayTransactionsByDateRange request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/GetBPayTransactionsByDateRange", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/GetBPayTransactionsByDateRangeResponse")]
        System.Threading.Tasks.Task<Creds.TestCredentials.ResponseRetrieveGetBPayTransactionsByDateRange> GetBPayTransactionsByDateRangeAsync(Creds.TestCredentials.RequestRetrieveGetBPayTransactionsByDateRange request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/GetPaymentHistoryWithFeesForDateRange", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/GetPaymentHistoryWithFeesForDateRangeResp" +
            "onse")]
        Creds.TestCredentials.ResponseRetrievePaymentHistoryWithFees GetPaymentHistoryWithFeesForDateRange(Creds.TestCredentials.RequestRetrievePaymentHistoryWithFeesForDateRange request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/GetPaymentHistoryWithFeesForDateRange", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/GetPaymentHistoryWithFeesForDateRangeResp" +
            "onse")]
        System.Threading.Tasks.Task<Creds.TestCredentials.ResponseRetrievePaymentHistoryWithFees> GetPaymentHistoryWithFeesForDateRangeAsync(Creds.TestCredentials.RequestRetrievePaymentHistoryWithFeesForDateRange request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/GetPaymentHistoryForDateRangeCW", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/GetPaymentHistoryForDateRangeCWResponse")]
        Creds.TestCredentials.ResponseRetrievePaymentHistoryCW GetPaymentHistoryForDateRangeCW(Creds.TestCredentials.RequestRetrievePaymentHistoryForDateRange request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/GetPaymentHistoryForDateRangeCW", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/GetPaymentHistoryForDateRangeCWResponse")]
        System.Threading.Tasks.Task<Creds.TestCredentials.ResponseRetrievePaymentHistoryCW> GetPaymentHistoryForDateRangeCWAsync(Creds.TestCredentials.RequestRetrievePaymentHistoryForDateRange request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/GetPaymentHistoryWithFeesForDateRangeCW", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/GetPaymentHistoryWithFeesForDateRangeCWRe" +
            "sponse")]
        Creds.TestCredentials.ResponseRetrievePaymentHistoryWithFeesCW GetPaymentHistoryWithFeesForDateRangeCW(Creds.TestCredentials.RequestRetrievePaymentHistoryWithFeesForDateRange request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/GetPaymentHistoryWithFeesForDateRangeCW", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/GetPaymentHistoryWithFeesForDateRangeCWRe" +
            "sponse")]
        System.Threading.Tasks.Task<Creds.TestCredentials.ResponseRetrievePaymentHistoryWithFeesCW> GetPaymentHistoryWithFeesForDateRangeCWAsync(Creds.TestCredentials.RequestRetrievePaymentHistoryWithFeesForDateRange request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/GetPaymentHistoryByAccountId", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/GetPaymentHistoryByAccountIdResponse")]
        Creds.TestCredentials.ResponseRetrievePaymentHistory GetPaymentHistoryByAccountId(Creds.TestCredentials.RequestRetrievePaymentHistoryByAccountID request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/GetPaymentHistoryByAccountId", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/GetPaymentHistoryByAccountIdResponse")]
        System.Threading.Tasks.Task<Creds.TestCredentials.ResponseRetrievePaymentHistory> GetPaymentHistoryByAccountIdAsync(Creds.TestCredentials.RequestRetrievePaymentHistoryByAccountID request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/GetPaymentHistoryWithFeesByAccountId", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/GetPaymentHistoryWithFeesByAccountIdRespo" +
            "nse")]
        Creds.TestCredentials.ResponseRetrievePaymentHistoryWithFees GetPaymentHistoryWithFeesByAccountId(Creds.TestCredentials.RequestRetrievePaymentHistoryWithFeesByAccountID request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/GetPaymentHistoryWithFeesByAccountId", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/GetPaymentHistoryWithFeesByAccountIdRespo" +
            "nse")]
        System.Threading.Tasks.Task<Creds.TestCredentials.ResponseRetrievePaymentHistoryWithFees> GetPaymentHistoryWithFeesByAccountIdAsync(Creds.TestCredentials.RequestRetrievePaymentHistoryWithFeesByAccountID request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/ResumePayment", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/ResumePaymentResponse")]
        Creds.TestCredentials.ResponseResumePayment ResumePayment(Creds.TestCredentials.RequestResumePayment request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/ResumePayment", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/ResumePaymentResponse")]
        System.Threading.Tasks.Task<Creds.TestCredentials.ResponseResumePayment> ResumePaymentAsync(Creds.TestCredentials.RequestResumePayment request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/UpdateClientAddress", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/UpdateClientAddressResponse")]
        Creds.TestCredentials.ResponseAdjustAccountClientAddress UpdateClientAddress(Creds.TestCredentials.RequestAdjustAccountClientAddress request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/UpdateClientAddress", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/UpdateClientAddressResponse")]
        System.Threading.Tasks.Task<Creds.TestCredentials.ResponseAdjustAccountClientAddress> UpdateClientAddressAsync(Creds.TestCredentials.RequestAdjustAccountClientAddress request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/UpdateClientAddressCW", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/UpdateClientAddressCWResponse")]
        Creds.TestCredentials.ResponseAdjustAccountClientAddress UpdateClientAddressCW(Creds.TestCredentials.RequestAdjustAccountClientAddress request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/UpdateClientAddressCW", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/UpdateClientAddressCWResponse")]
        System.Threading.Tasks.Task<Creds.TestCredentials.ResponseAdjustAccountClientAddress> UpdateClientAddressCWAsync(Creds.TestCredentials.RequestAdjustAccountClientAddress request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/UpdateClientDetails", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/UpdateClientDetailsResponse")]
        Creds.TestCredentials.ResponseAdjustAccountClientDetails UpdateClientDetails(Creds.TestCredentials.RequestAdjustAccountClientDetails request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/UpdateClientDetails", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/UpdateClientDetailsResponse")]
        System.Threading.Tasks.Task<Creds.TestCredentials.ResponseAdjustAccountClientDetails> UpdateClientDetailsAsync(Creds.TestCredentials.RequestAdjustAccountClientDetails request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/UpdateGuarantorDetails", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/UpdateGuarantorDetailsResponse")]
        Creds.TestCredentials.ResponseAdjustGuarantorDetails UpdateGuarantorDetails(Creds.TestCredentials.RequestAdjustGuarantorDetails request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/UpdateGuarantorDetails", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/UpdateGuarantorDetailsResponse")]
        System.Threading.Tasks.Task<Creds.TestCredentials.ResponseAdjustGuarantorDetails> UpdateGuarantorDetailsAsync(Creds.TestCredentials.RequestAdjustGuarantorDetails request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/UpdateClientEmailAddress", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/UpdateClientEmailAddressResponse")]
        Creds.TestCredentials.ResponseAdjustAccountClientEmail UpdateClientEmailAddress(Creds.TestCredentials.RequestAdjustAccountClientEmail request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/UpdateClientEmailAddress", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/UpdateClientEmailAddressResponse")]
        System.Threading.Tasks.Task<Creds.TestCredentials.ResponseAdjustAccountClientEmail> UpdateClientEmailAddressAsync(Creds.TestCredentials.RequestAdjustAccountClientEmail request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/UpdateClientEmailAddressCW", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/UpdateClientEmailAddressCWResponse")]
        Creds.TestCredentials.ResponseAdjustAccountClientEmail UpdateClientEmailAddressCW(Creds.TestCredentials.RequestAdjustAccountClientEmail request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/UpdateClientEmailAddressCW", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/UpdateClientEmailAddressCWResponse")]
        System.Threading.Tasks.Task<Creds.TestCredentials.ResponseAdjustAccountClientEmail> UpdateClientEmailAddressCWAsync(Creds.TestCredentials.RequestAdjustAccountClientEmail request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/UpdateClientPhoneNumber", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/UpdateClientPhoneNumberResponse")]
        Creds.TestCredentials.ResponseAdjustAccountClientPhone UpdateClientPhoneNumber(Creds.TestCredentials.RequestAdjustAccountClientPhone request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/UpdateClientPhoneNumber", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/UpdateClientPhoneNumberResponse")]
        System.Threading.Tasks.Task<Creds.TestCredentials.ResponseAdjustAccountClientPhone> UpdateClientPhoneNumberAsync(Creds.TestCredentials.RequestAdjustAccountClientPhone request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/UpdateClientPhoneNumberCW", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/UpdateClientPhoneNumberCWResponse")]
        Creds.TestCredentials.ResponseAdjustAccountClientPhone UpdateClientPhoneNumberCW(Creds.TestCredentials.RequestAdjustAccountClientPhone request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/UpdateClientPhoneNumberCW", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/UpdateClientPhoneNumberCWResponse")]
        System.Threading.Tasks.Task<Creds.TestCredentials.ResponseAdjustAccountClientPhone> UpdateClientPhoneNumberCWAsync(Creds.TestCredentials.RequestAdjustAccountClientPhone request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/DeletePaySchedule", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/DeletePayScheduleResponse")]
        Creds.TestCredentials.ResponseDeletePaySchedule DeletePaySchedule(Creds.TestCredentials.RequestDeletePaySchedule request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/DeletePaySchedule", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/DeletePayScheduleResponse")]
        System.Threading.Tasks.Task<Creds.TestCredentials.ResponseDeletePaySchedule> DeletePayScheduleAsync(Creds.TestCredentials.RequestDeletePaySchedule request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/AdjustPaySchedule", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/AdjustPayScheduleResponse")]
        Creds.TestCredentials.ResponseAdjustPaySchedule AdjustPaySchedule(Creds.TestCredentials.RequestAdjustPaySchedule request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/AdjustPaySchedule", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/AdjustPayScheduleResponse")]
        System.Threading.Tasks.Task<Creds.TestCredentials.ResponseAdjustPaySchedule> AdjustPayScheduleAsync(Creds.TestCredentials.RequestAdjustPaySchedule request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/AdjustSuspensionEndDate", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/AdjustSuspensionEndDateResponse")]
        Creds.TestCredentials.ResponseAdjustSuspensionEndDate AdjustSuspensionEndDate(Creds.TestCredentials.RequestAdjustSuspensionEndDate request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/AdjustSuspensionEndDate", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/AdjustSuspensionEndDateResponse")]
        System.Threading.Tasks.Task<Creds.TestCredentials.ResponseAdjustSuspensionEndDate> AdjustSuspensionEndDateAsync(Creds.TestCredentials.RequestAdjustSuspensionEndDate request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/SuspendAccount", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/SuspendAccountResponse")]
        Creds.TestCredentials.ResponseSuspendAccount SuspendAccount(Creds.TestCredentials.RequestSuspendAccount request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/SuspendAccount", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/SuspendAccountResponse")]
        System.Threading.Tasks.Task<Creds.TestCredentials.ResponseSuspendAccount> SuspendAccountAsync(Creds.TestCredentials.RequestSuspendAccount request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/SuspendAccountBetweenDates", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/SuspendAccountBetweenDatesResponse")]
        Creds.TestCredentials.ResponseSuspendAccount SuspendAccountBetweenDates(Creds.TestCredentials.RequestSuspendAccountBetweenDates request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/SuspendAccountBetweenDates", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/SuspendAccountBetweenDatesResponse")]
        System.Threading.Tasks.Task<Creds.TestCredentials.ResponseSuspendAccount> SuspendAccountBetweenDatesAsync(Creds.TestCredentials.RequestSuspendAccountBetweenDates request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/SuspendAccountForNumberOfPaymentCycles", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/SuspendAccountForNumberOfPaymentCyclesRes" +
            "ponse")]
        Creds.TestCredentials.ResponseSuspendAccount SuspendAccountForNumberOfPaymentCycles(Creds.TestCredentials.RequestSuspendAccount request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/SuspendAccountForNumberOfPaymentCycles", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/SuspendAccountForNumberOfPaymentCyclesRes" +
            "ponse")]
        System.Threading.Tasks.Task<Creds.TestCredentials.ResponseSuspendAccount> SuspendAccountForNumberOfPaymentCyclesAsync(Creds.TestCredentials.RequestSuspendAccount request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/AdjustAccountAppendNotes", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/AdjustAccountAppendNotesResponse")]
        Creds.TestCredentials.ResponseAdjustAccountAppendNotes AdjustAccountAppendNotes(Creds.TestCredentials.RequestAdjustAccountAppendNotes request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/AdjustAccountAppendNotes", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/AdjustAccountAppendNotesResponse")]
        System.Threading.Tasks.Task<Creds.TestCredentials.ResponseAdjustAccountAppendNotes> AdjustAccountAppendNotesAsync(Creds.TestCredentials.RequestAdjustAccountAppendNotes request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/AdjustPaymentInAdvance", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/AdjustPaymentInAdvanceResponse")]
        Creds.TestCredentials.ResponseAdjustPaymentInAdvance AdjustPaymentInAdvance(Creds.TestCredentials.RequestAdjustPaymentInAdvance request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/AdjustPaymentInAdvance", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/AdjustPaymentInAdvanceResponse")]
        System.Threading.Tasks.Task<Creds.TestCredentials.ResponseAdjustPaymentInAdvance> AdjustPaymentInAdvanceAsync(Creds.TestCredentials.RequestAdjustPaymentInAdvance request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/AdjustAccountPaymentMethod", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/AdjustAccountPaymentMethodResponse")]
        Creds.TestCredentials.ResponseAdjustAccountPaymentMethod AdjustAccountPaymentMethod(Creds.TestCredentials.RequestAdjustAccountPaymentMethod request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/AdjustAccountPaymentMethod", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/AdjustAccountPaymentMethodResponse")]
        System.Threading.Tasks.Task<Creds.TestCredentials.ResponseAdjustAccountPaymentMethod> AdjustAccountPaymentMethodAsync(Creds.TestCredentials.RequestAdjustAccountPaymentMethod request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/AdjustAccountFixedTerm", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/AdjustAccountFixedTermResponse")]
        Creds.TestCredentials.ResponseAdjustAccountFixedTerm AdjustAccountFixedTerm(Creds.TestCredentials.RequestAdjustAccountFixedTerm request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/AdjustAccountFixedTerm", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/AdjustAccountFixedTermResponse")]
        System.Threading.Tasks.Task<Creds.TestCredentials.ResponseAdjustAccountFixedTerm> AdjustAccountFixedTermAsync(Creds.TestCredentials.RequestAdjustAccountFixedTerm request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/AdjustAccountFixedTermAF", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/AdjustAccountFixedTermAFResponse")]
        Creds.TestCredentials.ResponseAdjustAccountFixedTerm AdjustAccountFixedTermAF(Creds.TestCredentials.RequestAdjustAccountFixedTermAF request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/AdjustAccountFixedTermAF", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/AdjustAccountFixedTermAFResponse")]
        System.Threading.Tasks.Task<Creds.TestCredentials.ResponseAdjustAccountFixedTerm> AdjustAccountFixedTermAFAsync(Creds.TestCredentials.RequestAdjustAccountFixedTermAF request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/ProcessCardPaymentForCustomerAccount", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/ProcessCardPaymentForCustomerAccountRespo" +
            "nse")]
        Creds.TestCredentials.ResponseProcessCardPaymentForCustomerAccount ProcessCardPaymentForCustomerAccount(Creds.TestCredentials.RequestProcessCardPaymentForCustomerAccount request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/ProcessCardPaymentForCustomerAccount", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/ProcessCardPaymentForCustomerAccountRespo" +
            "nse")]
        System.Threading.Tasks.Task<Creds.TestCredentials.ResponseProcessCardPaymentForCustomerAccount> ProcessCardPaymentForCustomerAccountAsync(Creds.TestCredentials.RequestProcessCardPaymentForCustomerAccount request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/ProcessOneOffCardPaymentForCustomerAccoun" +
            "t", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/ProcessOneOffCardPaymentForCustomerAccoun" +
            "tResponse")]
        Creds.TestCredentials.ResponseProcessCardPaymentForCustomerAccount ProcessOneOffCardPaymentForCustomerAccount(Creds.TestCredentials.RequestProcessCardPaymentForCustomerAccount request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/ProcessOneOffCardPaymentForCustomerAccoun" +
            "t", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/ProcessOneOffCardPaymentForCustomerAccoun" +
            "tResponse")]
        System.Threading.Tasks.Task<Creds.TestCredentials.ResponseProcessCardPaymentForCustomerAccount> ProcessOneOffCardPaymentForCustomerAccountAsync(Creds.TestCredentials.RequestProcessCardPaymentForCustomerAccount request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/ProcessRealTimeCardPayment", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/ProcessRealTimeCardPaymentResponse")]
        Creds.TestCredentials.ResponseProcessRealTimeCardPayment ProcessRealTimeCardPayment(Creds.TestCredentials.RequestProcessRealTimeCardPayment request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/ProcessRealTimeCardPayment", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/ProcessRealTimeCardPaymentResponse")]
        System.Threading.Tasks.Task<Creds.TestCredentials.ResponseProcessRealTimeCardPayment> ProcessRealTimeCardPaymentAsync(Creds.TestCredentials.RequestProcessRealTimeCardPayment request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/GetCardPaymentStatusForCustomerAccount", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/GetCardPaymentStatusForCustomerAccountRes" +
            "ponse")]
        Creds.TestCredentials.ResponseProcessCardPaymentForCustomerAccount GetCardPaymentStatusForCustomerAccount(Creds.TestCredentials.RequestGetCardPaymentStatusForCustomerAccount request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/GetCardPaymentStatusForCustomerAccount", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/GetCardPaymentStatusForCustomerAccountRes" +
            "ponse")]
        System.Threading.Tasks.Task<Creds.TestCredentials.ResponseProcessCardPaymentForCustomerAccount> GetCardPaymentStatusForCustomerAccountAsync(Creds.TestCredentials.RequestGetCardPaymentStatusForCustomerAccount request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/GetFacilityAccountConfiguration", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/GetFacilityAccountConfigurationResponse")]
        Creds.TestCredentials.ResponseGetFacilityAccountConfiguration GetFacilityAccountConfiguration(Creds.TestCredentials.RequestGetFacilityAccountConfiguration request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/GetFacilityAccountConfiguration", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/GetFacilityAccountConfigurationResponse")]
        System.Threading.Tasks.Task<Creds.TestCredentials.ResponseGetFacilityAccountConfiguration> GetFacilityAccountConfigurationAsync(Creds.TestCredentials.RequestGetFacilityAccountConfiguration request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/GetOverdueStatusHistoryForDateRange", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/GetOverdueStatusHistoryForDateRangeRespon" +
            "se")]
        Creds.TestCredentials.ResponseRetrieveOverdueStatusHistory GetOverdueStatusHistoryForDateRange(Creds.TestCredentials.RequestRetrieveOverdueStatus request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/GetOverdueStatusHistoryForDateRange", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/GetOverdueStatusHistoryForDateRangeRespon" +
            "se")]
        System.Threading.Tasks.Task<Creds.TestCredentials.ResponseRetrieveOverdueStatusHistory> GetOverdueStatusHistoryForDateRangeAsync(Creds.TestCredentials.RequestRetrieveOverdueStatus request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/GetPaymentToken", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/GetPaymentTokenResponse")]
        Creds.TestCredentials.ResponseGetPaymentToken GetPaymentToken(Creds.TestCredentials.RequestGetPaymentToken request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/GetPaymentToken", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/GetPaymentTokenResponse")]
        System.Threading.Tasks.Task<Creds.TestCredentials.ResponseGetPaymentToken> GetPaymentTokenAsync(Creds.TestCredentials.RequestGetPaymentToken request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/GetCasualPaymentToken", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/GetCasualPaymentTokenResponse")]
        Creds.TestCredentials.ResponseGetCasualPaymentToken GetCasualPaymentToken(Creds.TestCredentials.RequestGetCasualPaymentToken request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/GetCasualPaymentToken", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/GetCasualPaymentTokenResponse")]
        System.Threading.Tasks.Task<Creds.TestCredentials.ResponseGetCasualPaymentToken> GetCasualPaymentTokenAsync(Creds.TestCredentials.RequestGetCasualPaymentToken request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/GetCasualPaymentsForDateRange", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/GetCasualPaymentsForDateRangeResponse")]
        Creds.TestCredentials.ResponseGetCasualPaymentsForDateRange GetCasualPaymentsForDateRange(Creds.TestCredentials.RequestGetCasualPaymentsForDateRange request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/GetCasualPaymentsForDateRange", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/GetCasualPaymentsForDateRangeResponse")]
        System.Threading.Tasks.Task<Creds.TestCredentials.ResponseGetCasualPaymentsForDateRange> GetCasualPaymentsForDateRangeAsync(Creds.TestCredentials.RequestGetCasualPaymentsForDateRange request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/GetCasualPaymentsByPaymentRef", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/GetCasualPaymentsByPaymentRefResponse")]
        Creds.TestCredentials.ResponseGetCasualPaymentsByPaymentRef GetCasualPaymentsByPaymentRef(Creds.TestCredentials.RequestGetCasualPaymentsByPaymentRef request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/GetCasualPaymentsByPaymentRef", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/GetCasualPaymentsByPaymentRefResponse")]
        System.Threading.Tasks.Task<Creds.TestCredentials.ResponseGetCasualPaymentsByPaymentRef> GetCasualPaymentsByPaymentRefAsync(Creds.TestCredentials.RequestGetCasualPaymentsByPaymentRef request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/DeletePenaltyFeeSchedule", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/DeletePenaltyFeeScheduleResponse")]
        Creds.TestCredentials.ResponseDeletePaySchedule DeletePenaltyFeeSchedule(Creds.TestCredentials.RequestDeletePaySchedule request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/DeletePenaltyFeeSchedule", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/DeletePenaltyFeeScheduleResponse")]
        System.Threading.Tasks.Task<Creds.TestCredentials.ResponseDeletePaySchedule> DeletePenaltyFeeScheduleAsync(Creds.TestCredentials.RequestDeletePaySchedule request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/GetMonthlyCollections", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/GetMonthlyCollectionsResponse")]
        Creds.TestCredentials.ResponseGetMonthlyCollections GetMonthlyCollections(Creds.TestCredentials.RequestGetMonthlyCollections request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/GetMonthlyCollections", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/GetMonthlyCollectionsResponse")]
        System.Threading.Tasks.Task<Creds.TestCredentials.ResponseGetMonthlyCollections> GetMonthlyCollectionsAsync(Creds.TestCredentials.RequestGetMonthlyCollections request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/GetActiveAccounts", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/GetActiveAccountsResponse")]
        Creds.TestCredentials.ResponseGetActiveAccounts GetActiveAccounts(Creds.TestCredentials.RequestGetActiveAccounts request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/GetActiveAccounts", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/GetActiveAccountsResponse")]
        System.Threading.Tasks.Task<Creds.TestCredentials.ResponseGetActiveAccounts> GetActiveAccountsAsync(Creds.TestCredentials.RequestGetActiveAccounts request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/TransferCustomerAccount", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/TransferCustomerAccountResponse")]
        Creds.TestCredentials.ResponseTransferCustomerAccount TransferCustomerAccount(Creds.TestCredentials.RequestTransferCustomerAccount request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/TransferCustomerAccount", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/TransferCustomerAccountResponse")]
        System.Threading.Tasks.Task<Creds.TestCredentials.ResponseTransferCustomerAccount> TransferCustomerAccountAsync(Creds.TestCredentials.RequestTransferCustomerAccount request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/GetPaymentHistoryByStatusForDateRange", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/GetPaymentHistoryByStatusForDateRangeResp" +
            "onse")]
        Creds.TestCredentials.ResponseGetPaymentHistoryByStatusForDateRange GetPaymentHistoryByStatusForDateRange(Creds.TestCredentials.RequestGetPaymentHistoryByStatusForDateRange request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/GetPaymentHistoryByStatusForDateRange", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/GetPaymentHistoryByStatusForDateRangeResp" +
            "onse")]
        System.Threading.Tasks.Task<Creds.TestCredentials.ResponseGetPaymentHistoryByStatusForDateRange> GetPaymentHistoryByStatusForDateRangeAsync(Creds.TestCredentials.RequestGetPaymentHistoryByStatusForDateRange request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/GetPaymentHistoryStatusByAccountId", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/GetPaymentHistoryStatusByAccountIdRespons" +
            "e")]
        Creds.TestCredentials.ResponseGetPaymentHistoryStatusByAccountId GetPaymentHistoryStatusByAccountId(Creds.TestCredentials.RequestGetPaymentHistoryStatusByAccountId request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/GetPaymentHistoryStatusByAccountId", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/GetPaymentHistoryStatusByAccountIdRespons" +
            "e")]
        System.Threading.Tasks.Task<Creds.TestCredentials.ResponseGetPaymentHistoryStatusByAccountId> GetPaymentHistoryStatusByAccountIdAsync(Creds.TestCredentials.RequestGetPaymentHistoryStatusByAccountId request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/AdjustAccountTerminationDate", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/AdjustAccountTerminationDateResponse")]
        Creds.TestCredentials.ResponseAdjustAccountTerminationDate AdjustAccountTerminationDate(Creds.TestCredentials.RequestAdjustAccountTerminationDate request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/AdjustAccountTerminationDate", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/AdjustAccountTerminationDateResponse")]
        System.Threading.Tasks.Task<Creds.TestCredentials.ResponseAdjustAccountTerminationDate> AdjustAccountTerminationDateAsync(Creds.TestCredentials.RequestAdjustAccountTerminationDate request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/GetClosedAccountsForDateRange", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/GetClosedAccountsForDateRangeResponse")]
        Creds.TestCredentials.ResponseGetClosedAccountsForDateRange GetClosedAccountsForDateRange(Creds.TestCredentials.RequestGetClosedAccountsForDateRange request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Debitsuccess.WebServices.WCF/DSServices/GetClosedAccountsForDateRange", ReplyAction="Debitsuccess.WebServices.WCF/DSServices/GetClosedAccountsForDateRangeResponse")]
        System.Threading.Tasks.Task<Creds.TestCredentials.ResponseGetClosedAccountsForDateRange> GetClosedAccountsForDateRangeAsync(Creds.TestCredentials.RequestGetClosedAccountsForDateRange request);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface DSServicesChannel : Creds.TestCredentials.DSServices, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DSServicesClient : System.ServiceModel.ClientBase<Creds.TestCredentials.DSServices>, Creds.TestCredentials.DSServices {
        
        public DSServicesClient() {
        }
        
        public DSServicesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DSServicesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DSServicesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DSServicesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Creds.TestCredentials.ResponseAccountCancellation CancelAccount(Creds.TestCredentials.RequestAccountCancellation request) {
            return base.Channel.CancelAccount(request);
        }
        
        public System.Threading.Tasks.Task<Creds.TestCredentials.ResponseAccountCancellation> CancelAccountAsync(Creds.TestCredentials.RequestAccountCancellation request) {
            return base.Channel.CancelAccountAsync(request);
        }
        
        public Creds.TestCredentials.ResponseGetTermsAndConditions GetTermsAndConditions(Creds.TestCredentials.RequestGetTermsAndConditions request) {
            return base.Channel.GetTermsAndConditions(request);
        }
        
        public System.Threading.Tasks.Task<Creds.TestCredentials.ResponseGetTermsAndConditions> GetTermsAndConditionsAsync(Creds.TestCredentials.RequestGetTermsAndConditions request) {
            return base.Channel.GetTermsAndConditionsAsync(request);
        }
        
        public Creds.TestCredentials.ResponseRetrieveCalls GetCallsHistoryForDateRange(Creds.TestCredentials.RequestRetrieveCallsForDateRange request) {
            return base.Channel.GetCallsHistoryForDateRange(request);
        }
        
        public System.Threading.Tasks.Task<Creds.TestCredentials.ResponseRetrieveCalls> GetCallsHistoryForDateRangeAsync(Creds.TestCredentials.RequestRetrieveCallsForDateRange request) {
            return base.Channel.GetCallsHistoryForDateRangeAsync(request);
        }
        
        public Creds.TestCredentials.ResponseRetrieveCalls GetCallsHistoryByAccountId(Creds.TestCredentials.RequestRetrieveCallsByAccountID request) {
            return base.Channel.GetCallsHistoryByAccountId(request);
        }
        
        public System.Threading.Tasks.Task<Creds.TestCredentials.ResponseRetrieveCalls> GetCallsHistoryByAccountIdAsync(Creds.TestCredentials.RequestRetrieveCallsByAccountID request) {
            return base.Channel.GetCallsHistoryByAccountIdAsync(request);
        }
        
        public Creds.TestCredentials.ResponsePostCustomerAccount PostCustomerAccount(Creds.TestCredentials.RequestPostCustomerAccount request) {
            return base.Channel.PostCustomerAccount(request);
        }
        
        public System.Threading.Tasks.Task<Creds.TestCredentials.ResponsePostCustomerAccount> PostCustomerAccountAsync(Creds.TestCredentials.RequestPostCustomerAccount request) {
            return base.Channel.PostCustomerAccountAsync(request);
        }
        
        public Creds.TestCredentials.ResponsePostCustomerAccount PostCustomerAccountForExistingCustomer(Creds.TestCredentials.RequestPostCustomerAccountForExistingCustomer request) {
            return base.Channel.PostCustomerAccountForExistingCustomer(request);
        }
        
        public System.Threading.Tasks.Task<Creds.TestCredentials.ResponsePostCustomerAccount> PostCustomerAccountForExistingCustomerAsync(Creds.TestCredentials.RequestPostCustomerAccountForExistingCustomer request) {
            return base.Channel.PostCustomerAccountForExistingCustomerAsync(request);
        }
        
        public Creds.TestCredentials.ResponseRetrieveCustomerAccounts GetCustomerAccountByAccountId(Creds.TestCredentials.RequestRetrieveCustomerAccountByAccountID request) {
            return base.Channel.GetCustomerAccountByAccountId(request);
        }
        
        public System.Threading.Tasks.Task<Creds.TestCredentials.ResponseRetrieveCustomerAccounts> GetCustomerAccountByAccountIdAsync(Creds.TestCredentials.RequestRetrieveCustomerAccountByAccountID request) {
            return base.Channel.GetCustomerAccountByAccountIdAsync(request);
        }
        
        public Creds.TestCredentials.ResponseRetrieveCustomerAccountsWithFees GetCustomerAccountWithFeesByAccountId(Creds.TestCredentials.RequestRetrieveCustomerAccountWithFeesByAccountID request) {
            return base.Channel.GetCustomerAccountWithFeesByAccountId(request);
        }
        
        public System.Threading.Tasks.Task<Creds.TestCredentials.ResponseRetrieveCustomerAccountsWithFees> GetCustomerAccountWithFeesByAccountIdAsync(Creds.TestCredentials.RequestRetrieveCustomerAccountWithFeesByAccountID request) {
            return base.Channel.GetCustomerAccountWithFeesByAccountIdAsync(request);
        }
        
        public Creds.TestCredentials.ResponseRetrieveCustomerAccounts GetCustomerAccountForDateRange(Creds.TestCredentials.RequestRetrieveCustomerAccountsForDateRange request) {
            return base.Channel.GetCustomerAccountForDateRange(request);
        }
        
        public System.Threading.Tasks.Task<Creds.TestCredentials.ResponseRetrieveCustomerAccounts> GetCustomerAccountForDateRangeAsync(Creds.TestCredentials.RequestRetrieveCustomerAccountsForDateRange request) {
            return base.Channel.GetCustomerAccountForDateRangeAsync(request);
        }
        
        public Creds.TestCredentials.ResponseRetrieveCustomerAccountsWithFees GetCustomerAccountWithFeesForDateRange(Creds.TestCredentials.RequestRetrieveCustomerAccountsWithFeesForDateRange request) {
            return base.Channel.GetCustomerAccountWithFeesForDateRange(request);
        }
        
        public System.Threading.Tasks.Task<Creds.TestCredentials.ResponseRetrieveCustomerAccountsWithFees> GetCustomerAccountWithFeesForDateRangeAsync(Creds.TestCredentials.RequestRetrieveCustomerAccountsWithFeesForDateRange request) {
            return base.Channel.GetCustomerAccountWithFeesForDateRangeAsync(request);
        }
        
        public Creds.TestCredentials.ResponseNewPaySchedule CreateSchedule(Creds.TestCredentials.RequestNewPaySchedule request) {
            return base.Channel.CreateSchedule(request);
        }
        
        public System.Threading.Tasks.Task<Creds.TestCredentials.ResponseNewPaySchedule> CreateScheduleAsync(Creds.TestCredentials.RequestNewPaySchedule request) {
            return base.Channel.CreateScheduleAsync(request);
        }
        
        public Creds.TestCredentials.ResponseAdjustNextPaymentDate AdjustNextPaymentDate(Creds.TestCredentials.RequestAdjustNextPaymentDate request) {
            return base.Channel.AdjustNextPaymentDate(request);
        }
        
        public System.Threading.Tasks.Task<Creds.TestCredentials.ResponseAdjustNextPaymentDate> AdjustNextPaymentDateAsync(Creds.TestCredentials.RequestAdjustNextPaymentDate request) {
            return base.Channel.AdjustNextPaymentDateAsync(request);
        }
        
        public Creds.TestCredentials.ResponseAdjustDateOfPayment AdjustDateDayOfPayment(Creds.TestCredentials.RequestAdjustDateOfPayment request) {
            return base.Channel.AdjustDateDayOfPayment(request);
        }
        
        public System.Threading.Tasks.Task<Creds.TestCredentials.ResponseAdjustDateOfPayment> AdjustDateDayOfPaymentAsync(Creds.TestCredentials.RequestAdjustDateOfPayment request) {
            return base.Channel.AdjustDateDayOfPaymentAsync(request);
        }
        
        public Creds.TestCredentials.ResponseAdjustAccountLastAccess AdjustAccountLastAccess(Creds.TestCredentials.RequestAdjustAccountLastAccess request) {
            return base.Channel.AdjustAccountLastAccess(request);
        }
        
        public System.Threading.Tasks.Task<Creds.TestCredentials.ResponseAdjustAccountLastAccess> AdjustAccountLastAccessAsync(Creds.TestCredentials.RequestAdjustAccountLastAccess request) {
            return base.Channel.AdjustAccountLastAccessAsync(request);
        }
        
        public Creds.TestCredentials.ResponseAdjustAccountExternalAccountReferenceNo AdjustAccountExternalAccountReferenceNo(Creds.TestCredentials.RequestAdjustAccountExternalAccountReferenceNo request) {
            return base.Channel.AdjustAccountExternalAccountReferenceNo(request);
        }
        
        public System.Threading.Tasks.Task<Creds.TestCredentials.ResponseAdjustAccountExternalAccountReferenceNo> AdjustAccountExternalAccountReferenceNoAsync(Creds.TestCredentials.RequestAdjustAccountExternalAccountReferenceNo request) {
            return base.Channel.AdjustAccountExternalAccountReferenceNoAsync(request);
        }
        
        public Creds.TestCredentials.ResponseAdjustAccountNextPaymentDate AdjustAccountNextPaymentDate(Creds.TestCredentials.RequestAdjustAccountNextPaymentDate request) {
            return base.Channel.AdjustAccountNextPaymentDate(request);
        }
        
        public System.Threading.Tasks.Task<Creds.TestCredentials.ResponseAdjustAccountNextPaymentDate> AdjustAccountNextPaymentDateAsync(Creds.TestCredentials.RequestAdjustAccountNextPaymentDate request) {
            return base.Channel.AdjustAccountNextPaymentDateAsync(request);
        }
        
        public Creds.TestCredentials.ResponseAdjustAccountTotalValue AdjustAccountTotalValue(Creds.TestCredentials.RequestAdjustAccountTotalValue request) {
            return base.Channel.AdjustAccountTotalValue(request);
        }
        
        public System.Threading.Tasks.Task<Creds.TestCredentials.ResponseAdjustAccountTotalValue> AdjustAccountTotalValueAsync(Creds.TestCredentials.RequestAdjustAccountTotalValue request) {
            return base.Channel.AdjustAccountTotalValueAsync(request);
        }
        
        public Creds.TestCredentials.ResponseAdjustAccountMinimumTerm AdjustAccountMinimumTerm(Creds.TestCredentials.RequestAdjustAccountMinimumTerm request) {
            return base.Channel.AdjustAccountMinimumTerm(request);
        }
        
        public System.Threading.Tasks.Task<Creds.TestCredentials.ResponseAdjustAccountMinimumTerm> AdjustAccountMinimumTermAsync(Creds.TestCredentials.RequestAdjustAccountMinimumTerm request) {
            return base.Channel.AdjustAccountMinimumTermAsync(request);
        }
        
        public Creds.TestCredentials.ResponseAdjustAccountStartDate AdjustAccountStartDate(Creds.TestCredentials.RequestAdjustAccountStartDate request) {
            return base.Channel.AdjustAccountStartDate(request);
        }
        
        public System.Threading.Tasks.Task<Creds.TestCredentials.ResponseAdjustAccountStartDate> AdjustAccountStartDateAsync(Creds.TestCredentials.RequestAdjustAccountStartDate request) {
            return base.Channel.AdjustAccountStartDateAsync(request);
        }
        
        public Creds.TestCredentials.ResponseStopPayment StopPayment(Creds.TestCredentials.RequestStopPayment request) {
            return base.Channel.StopPayment(request);
        }
        
        public System.Threading.Tasks.Task<Creds.TestCredentials.ResponseStopPayment> StopPaymentAsync(Creds.TestCredentials.RequestStopPayment request) {
            return base.Channel.StopPaymentAsync(request);
        }
        
        public Creds.TestCredentials.ResponsePaymentCollected PaymentCollected(Creds.TestCredentials.RequestPaymentCollected request) {
            return base.Channel.PaymentCollected(request);
        }
        
        public System.Threading.Tasks.Task<Creds.TestCredentials.ResponsePaymentCollected> PaymentCollectedAsync(Creds.TestCredentials.RequestPaymentCollected request) {
            return base.Channel.PaymentCollectedAsync(request);
        }
        
        public Creds.TestCredentials.ResponseChangePaymentMethod ChangePaymentMethod(Creds.TestCredentials.RequestChangePaymentMethod request) {
            return base.Channel.ChangePaymentMethod(request);
        }
        
        public System.Threading.Tasks.Task<Creds.TestCredentials.ResponseChangePaymentMethod> ChangePaymentMethodAsync(Creds.TestCredentials.RequestChangePaymentMethod request) {
            return base.Channel.ChangePaymentMethodAsync(request);
        }
        
        public Creds.TestCredentials.ResponseInitiateRefund InitiateRefund(Creds.TestCredentials.RequestInitiateRefund request) {
            return base.Channel.InitiateRefund(request);
        }
        
        public System.Threading.Tasks.Task<Creds.TestCredentials.ResponseInitiateRefund> InitiateRefundAsync(Creds.TestCredentials.RequestInitiateRefund request) {
            return base.Channel.InitiateRefundAsync(request);
        }
        
        public Creds.TestCredentials.ResponseRetrievePayMethodDetails GetPayMethodDetails(Creds.TestCredentials.RequestRetrievePayMethodDetails request) {
            return base.Channel.GetPayMethodDetails(request);
        }
        
        public System.Threading.Tasks.Task<Creds.TestCredentials.ResponseRetrievePayMethodDetails> GetPayMethodDetailsAsync(Creds.TestCredentials.RequestRetrievePayMethodDetails request) {
            return base.Channel.GetPayMethodDetailsAsync(request);
        }
        
        public Creds.TestCredentials.ResponseAdjustCatchUpPayment AdjustCatchUpPayment(Creds.TestCredentials.RequestAdjustCatchUpPayment request) {
            return base.Channel.AdjustCatchUpPayment(request);
        }
        
        public System.Threading.Tasks.Task<Creds.TestCredentials.ResponseAdjustCatchUpPayment> AdjustCatchUpPaymentAsync(Creds.TestCredentials.RequestAdjustCatchUpPayment request) {
            return base.Channel.AdjustCatchUpPaymentAsync(request);
        }
        
        public Creds.TestCredentials.ResponseRetrieveAuditTrail GetAuditHistoryForDateRange(Creds.TestCredentials.RequestRetrieveAuditTrailForDateRange request) {
            return base.Channel.GetAuditHistoryForDateRange(request);
        }
        
        public System.Threading.Tasks.Task<Creds.TestCredentials.ResponseRetrieveAuditTrail> GetAuditHistoryForDateRangeAsync(Creds.TestCredentials.RequestRetrieveAuditTrailForDateRange request) {
            return base.Channel.GetAuditHistoryForDateRangeAsync(request);
        }
        
        public Creds.TestCredentials.ResponseRetrieveAuditTrail GetAuditHistoryByAccountId(Creds.TestCredentials.RequestRetrieveAuditTrailByAccountID request) {
            return base.Channel.GetAuditHistoryByAccountId(request);
        }
        
        public System.Threading.Tasks.Task<Creds.TestCredentials.ResponseRetrieveAuditTrail> GetAuditHistoryByAccountIdAsync(Creds.TestCredentials.RequestRetrieveAuditTrailByAccountID request) {
            return base.Channel.GetAuditHistoryByAccountIdAsync(request);
        }
        
        public Creds.TestCredentials.ResponseRetrievePaymentHistory GetPaymentHistoryForDateRange(Creds.TestCredentials.RequestRetrievePaymentHistoryForDateRange request) {
            return base.Channel.GetPaymentHistoryForDateRange(request);
        }
        
        public System.Threading.Tasks.Task<Creds.TestCredentials.ResponseRetrievePaymentHistory> GetPaymentHistoryForDateRangeAsync(Creds.TestCredentials.RequestRetrievePaymentHistoryForDateRange request) {
            return base.Channel.GetPaymentHistoryForDateRangeAsync(request);
        }
        
        public Creds.TestCredentials.ResponseRetrieveGetBPayTransactionsByDateRange GetBPayTransactionsByDateRange(Creds.TestCredentials.RequestRetrieveGetBPayTransactionsByDateRange request) {
            return base.Channel.GetBPayTransactionsByDateRange(request);
        }
        
        public System.Threading.Tasks.Task<Creds.TestCredentials.ResponseRetrieveGetBPayTransactionsByDateRange> GetBPayTransactionsByDateRangeAsync(Creds.TestCredentials.RequestRetrieveGetBPayTransactionsByDateRange request) {
            return base.Channel.GetBPayTransactionsByDateRangeAsync(request);
        }
        
        public Creds.TestCredentials.ResponseRetrievePaymentHistoryWithFees GetPaymentHistoryWithFeesForDateRange(Creds.TestCredentials.RequestRetrievePaymentHistoryWithFeesForDateRange request) {
            return base.Channel.GetPaymentHistoryWithFeesForDateRange(request);
        }
        
        public System.Threading.Tasks.Task<Creds.TestCredentials.ResponseRetrievePaymentHistoryWithFees> GetPaymentHistoryWithFeesForDateRangeAsync(Creds.TestCredentials.RequestRetrievePaymentHistoryWithFeesForDateRange request) {
            return base.Channel.GetPaymentHistoryWithFeesForDateRangeAsync(request);
        }
        
        public Creds.TestCredentials.ResponseRetrievePaymentHistoryCW GetPaymentHistoryForDateRangeCW(Creds.TestCredentials.RequestRetrievePaymentHistoryForDateRange request) {
            return base.Channel.GetPaymentHistoryForDateRangeCW(request);
        }
        
        public System.Threading.Tasks.Task<Creds.TestCredentials.ResponseRetrievePaymentHistoryCW> GetPaymentHistoryForDateRangeCWAsync(Creds.TestCredentials.RequestRetrievePaymentHistoryForDateRange request) {
            return base.Channel.GetPaymentHistoryForDateRangeCWAsync(request);
        }
        
        public Creds.TestCredentials.ResponseRetrievePaymentHistoryWithFeesCW GetPaymentHistoryWithFeesForDateRangeCW(Creds.TestCredentials.RequestRetrievePaymentHistoryWithFeesForDateRange request) {
            return base.Channel.GetPaymentHistoryWithFeesForDateRangeCW(request);
        }
        
        public System.Threading.Tasks.Task<Creds.TestCredentials.ResponseRetrievePaymentHistoryWithFeesCW> GetPaymentHistoryWithFeesForDateRangeCWAsync(Creds.TestCredentials.RequestRetrievePaymentHistoryWithFeesForDateRange request) {
            return base.Channel.GetPaymentHistoryWithFeesForDateRangeCWAsync(request);
        }
        
        public Creds.TestCredentials.ResponseRetrievePaymentHistory GetPaymentHistoryByAccountId(Creds.TestCredentials.RequestRetrievePaymentHistoryByAccountID request) {
            return base.Channel.GetPaymentHistoryByAccountId(request);
        }
        
        public System.Threading.Tasks.Task<Creds.TestCredentials.ResponseRetrievePaymentHistory> GetPaymentHistoryByAccountIdAsync(Creds.TestCredentials.RequestRetrievePaymentHistoryByAccountID request) {
            return base.Channel.GetPaymentHistoryByAccountIdAsync(request);
        }
        
        public Creds.TestCredentials.ResponseRetrievePaymentHistoryWithFees GetPaymentHistoryWithFeesByAccountId(Creds.TestCredentials.RequestRetrievePaymentHistoryWithFeesByAccountID request) {
            return base.Channel.GetPaymentHistoryWithFeesByAccountId(request);
        }
        
        public System.Threading.Tasks.Task<Creds.TestCredentials.ResponseRetrievePaymentHistoryWithFees> GetPaymentHistoryWithFeesByAccountIdAsync(Creds.TestCredentials.RequestRetrievePaymentHistoryWithFeesByAccountID request) {
            return base.Channel.GetPaymentHistoryWithFeesByAccountIdAsync(request);
        }
        
        public Creds.TestCredentials.ResponseResumePayment ResumePayment(Creds.TestCredentials.RequestResumePayment request) {
            return base.Channel.ResumePayment(request);
        }
        
        public System.Threading.Tasks.Task<Creds.TestCredentials.ResponseResumePayment> ResumePaymentAsync(Creds.TestCredentials.RequestResumePayment request) {
            return base.Channel.ResumePaymentAsync(request);
        }
        
        public Creds.TestCredentials.ResponseAdjustAccountClientAddress UpdateClientAddress(Creds.TestCredentials.RequestAdjustAccountClientAddress request) {
            return base.Channel.UpdateClientAddress(request);
        }
        
        public System.Threading.Tasks.Task<Creds.TestCredentials.ResponseAdjustAccountClientAddress> UpdateClientAddressAsync(Creds.TestCredentials.RequestAdjustAccountClientAddress request) {
            return base.Channel.UpdateClientAddressAsync(request);
        }
        
        public Creds.TestCredentials.ResponseAdjustAccountClientAddress UpdateClientAddressCW(Creds.TestCredentials.RequestAdjustAccountClientAddress request) {
            return base.Channel.UpdateClientAddressCW(request);
        }
        
        public System.Threading.Tasks.Task<Creds.TestCredentials.ResponseAdjustAccountClientAddress> UpdateClientAddressCWAsync(Creds.TestCredentials.RequestAdjustAccountClientAddress request) {
            return base.Channel.UpdateClientAddressCWAsync(request);
        }
        
        public Creds.TestCredentials.ResponseAdjustAccountClientDetails UpdateClientDetails(Creds.TestCredentials.RequestAdjustAccountClientDetails request) {
            return base.Channel.UpdateClientDetails(request);
        }
        
        public System.Threading.Tasks.Task<Creds.TestCredentials.ResponseAdjustAccountClientDetails> UpdateClientDetailsAsync(Creds.TestCredentials.RequestAdjustAccountClientDetails request) {
            return base.Channel.UpdateClientDetailsAsync(request);
        }
        
        public Creds.TestCredentials.ResponseAdjustGuarantorDetails UpdateGuarantorDetails(Creds.TestCredentials.RequestAdjustGuarantorDetails request) {
            return base.Channel.UpdateGuarantorDetails(request);
        }
        
        public System.Threading.Tasks.Task<Creds.TestCredentials.ResponseAdjustGuarantorDetails> UpdateGuarantorDetailsAsync(Creds.TestCredentials.RequestAdjustGuarantorDetails request) {
            return base.Channel.UpdateGuarantorDetailsAsync(request);
        }
        
        public Creds.TestCredentials.ResponseAdjustAccountClientEmail UpdateClientEmailAddress(Creds.TestCredentials.RequestAdjustAccountClientEmail request) {
            return base.Channel.UpdateClientEmailAddress(request);
        }
        
        public System.Threading.Tasks.Task<Creds.TestCredentials.ResponseAdjustAccountClientEmail> UpdateClientEmailAddressAsync(Creds.TestCredentials.RequestAdjustAccountClientEmail request) {
            return base.Channel.UpdateClientEmailAddressAsync(request);
        }
        
        public Creds.TestCredentials.ResponseAdjustAccountClientEmail UpdateClientEmailAddressCW(Creds.TestCredentials.RequestAdjustAccountClientEmail request) {
            return base.Channel.UpdateClientEmailAddressCW(request);
        }
        
        public System.Threading.Tasks.Task<Creds.TestCredentials.ResponseAdjustAccountClientEmail> UpdateClientEmailAddressCWAsync(Creds.TestCredentials.RequestAdjustAccountClientEmail request) {
            return base.Channel.UpdateClientEmailAddressCWAsync(request);
        }
        
        public Creds.TestCredentials.ResponseAdjustAccountClientPhone UpdateClientPhoneNumber(Creds.TestCredentials.RequestAdjustAccountClientPhone request) {
            return base.Channel.UpdateClientPhoneNumber(request);
        }
        
        public System.Threading.Tasks.Task<Creds.TestCredentials.ResponseAdjustAccountClientPhone> UpdateClientPhoneNumberAsync(Creds.TestCredentials.RequestAdjustAccountClientPhone request) {
            return base.Channel.UpdateClientPhoneNumberAsync(request);
        }
        
        public Creds.TestCredentials.ResponseAdjustAccountClientPhone UpdateClientPhoneNumberCW(Creds.TestCredentials.RequestAdjustAccountClientPhone request) {
            return base.Channel.UpdateClientPhoneNumberCW(request);
        }
        
        public System.Threading.Tasks.Task<Creds.TestCredentials.ResponseAdjustAccountClientPhone> UpdateClientPhoneNumberCWAsync(Creds.TestCredentials.RequestAdjustAccountClientPhone request) {
            return base.Channel.UpdateClientPhoneNumberCWAsync(request);
        }
        
        public Creds.TestCredentials.ResponseDeletePaySchedule DeletePaySchedule(Creds.TestCredentials.RequestDeletePaySchedule request) {
            return base.Channel.DeletePaySchedule(request);
        }
        
        public System.Threading.Tasks.Task<Creds.TestCredentials.ResponseDeletePaySchedule> DeletePayScheduleAsync(Creds.TestCredentials.RequestDeletePaySchedule request) {
            return base.Channel.DeletePayScheduleAsync(request);
        }
        
        public Creds.TestCredentials.ResponseAdjustPaySchedule AdjustPaySchedule(Creds.TestCredentials.RequestAdjustPaySchedule request) {
            return base.Channel.AdjustPaySchedule(request);
        }
        
        public System.Threading.Tasks.Task<Creds.TestCredentials.ResponseAdjustPaySchedule> AdjustPayScheduleAsync(Creds.TestCredentials.RequestAdjustPaySchedule request) {
            return base.Channel.AdjustPayScheduleAsync(request);
        }
        
        public Creds.TestCredentials.ResponseAdjustSuspensionEndDate AdjustSuspensionEndDate(Creds.TestCredentials.RequestAdjustSuspensionEndDate request) {
            return base.Channel.AdjustSuspensionEndDate(request);
        }
        
        public System.Threading.Tasks.Task<Creds.TestCredentials.ResponseAdjustSuspensionEndDate> AdjustSuspensionEndDateAsync(Creds.TestCredentials.RequestAdjustSuspensionEndDate request) {
            return base.Channel.AdjustSuspensionEndDateAsync(request);
        }
        
        public Creds.TestCredentials.ResponseSuspendAccount SuspendAccount(Creds.TestCredentials.RequestSuspendAccount request) {
            return base.Channel.SuspendAccount(request);
        }
        
        public System.Threading.Tasks.Task<Creds.TestCredentials.ResponseSuspendAccount> SuspendAccountAsync(Creds.TestCredentials.RequestSuspendAccount request) {
            return base.Channel.SuspendAccountAsync(request);
        }
        
        public Creds.TestCredentials.ResponseSuspendAccount SuspendAccountBetweenDates(Creds.TestCredentials.RequestSuspendAccountBetweenDates request) {
            return base.Channel.SuspendAccountBetweenDates(request);
        }
        
        public System.Threading.Tasks.Task<Creds.TestCredentials.ResponseSuspendAccount> SuspendAccountBetweenDatesAsync(Creds.TestCredentials.RequestSuspendAccountBetweenDates request) {
            return base.Channel.SuspendAccountBetweenDatesAsync(request);
        }
        
        public Creds.TestCredentials.ResponseSuspendAccount SuspendAccountForNumberOfPaymentCycles(Creds.TestCredentials.RequestSuspendAccount request) {
            return base.Channel.SuspendAccountForNumberOfPaymentCycles(request);
        }
        
        public System.Threading.Tasks.Task<Creds.TestCredentials.ResponseSuspendAccount> SuspendAccountForNumberOfPaymentCyclesAsync(Creds.TestCredentials.RequestSuspendAccount request) {
            return base.Channel.SuspendAccountForNumberOfPaymentCyclesAsync(request);
        }
        
        public Creds.TestCredentials.ResponseAdjustAccountAppendNotes AdjustAccountAppendNotes(Creds.TestCredentials.RequestAdjustAccountAppendNotes request) {
            return base.Channel.AdjustAccountAppendNotes(request);
        }
        
        public System.Threading.Tasks.Task<Creds.TestCredentials.ResponseAdjustAccountAppendNotes> AdjustAccountAppendNotesAsync(Creds.TestCredentials.RequestAdjustAccountAppendNotes request) {
            return base.Channel.AdjustAccountAppendNotesAsync(request);
        }
        
        public Creds.TestCredentials.ResponseAdjustPaymentInAdvance AdjustPaymentInAdvance(Creds.TestCredentials.RequestAdjustPaymentInAdvance request) {
            return base.Channel.AdjustPaymentInAdvance(request);
        }
        
        public System.Threading.Tasks.Task<Creds.TestCredentials.ResponseAdjustPaymentInAdvance> AdjustPaymentInAdvanceAsync(Creds.TestCredentials.RequestAdjustPaymentInAdvance request) {
            return base.Channel.AdjustPaymentInAdvanceAsync(request);
        }
        
        public Creds.TestCredentials.ResponseAdjustAccountPaymentMethod AdjustAccountPaymentMethod(Creds.TestCredentials.RequestAdjustAccountPaymentMethod request) {
            return base.Channel.AdjustAccountPaymentMethod(request);
        }
        
        public System.Threading.Tasks.Task<Creds.TestCredentials.ResponseAdjustAccountPaymentMethod> AdjustAccountPaymentMethodAsync(Creds.TestCredentials.RequestAdjustAccountPaymentMethod request) {
            return base.Channel.AdjustAccountPaymentMethodAsync(request);
        }
        
        public Creds.TestCredentials.ResponseAdjustAccountFixedTerm AdjustAccountFixedTerm(Creds.TestCredentials.RequestAdjustAccountFixedTerm request) {
            return base.Channel.AdjustAccountFixedTerm(request);
        }
        
        public System.Threading.Tasks.Task<Creds.TestCredentials.ResponseAdjustAccountFixedTerm> AdjustAccountFixedTermAsync(Creds.TestCredentials.RequestAdjustAccountFixedTerm request) {
            return base.Channel.AdjustAccountFixedTermAsync(request);
        }
        
        public Creds.TestCredentials.ResponseAdjustAccountFixedTerm AdjustAccountFixedTermAF(Creds.TestCredentials.RequestAdjustAccountFixedTermAF request) {
            return base.Channel.AdjustAccountFixedTermAF(request);
        }
        
        public System.Threading.Tasks.Task<Creds.TestCredentials.ResponseAdjustAccountFixedTerm> AdjustAccountFixedTermAFAsync(Creds.TestCredentials.RequestAdjustAccountFixedTermAF request) {
            return base.Channel.AdjustAccountFixedTermAFAsync(request);
        }
        
        public Creds.TestCredentials.ResponseProcessCardPaymentForCustomerAccount ProcessCardPaymentForCustomerAccount(Creds.TestCredentials.RequestProcessCardPaymentForCustomerAccount request) {
            return base.Channel.ProcessCardPaymentForCustomerAccount(request);
        }
        
        public System.Threading.Tasks.Task<Creds.TestCredentials.ResponseProcessCardPaymentForCustomerAccount> ProcessCardPaymentForCustomerAccountAsync(Creds.TestCredentials.RequestProcessCardPaymentForCustomerAccount request) {
            return base.Channel.ProcessCardPaymentForCustomerAccountAsync(request);
        }
        
        public Creds.TestCredentials.ResponseProcessCardPaymentForCustomerAccount ProcessOneOffCardPaymentForCustomerAccount(Creds.TestCredentials.RequestProcessCardPaymentForCustomerAccount request) {
            return base.Channel.ProcessOneOffCardPaymentForCustomerAccount(request);
        }
        
        public System.Threading.Tasks.Task<Creds.TestCredentials.ResponseProcessCardPaymentForCustomerAccount> ProcessOneOffCardPaymentForCustomerAccountAsync(Creds.TestCredentials.RequestProcessCardPaymentForCustomerAccount request) {
            return base.Channel.ProcessOneOffCardPaymentForCustomerAccountAsync(request);
        }
        
        public Creds.TestCredentials.ResponseProcessRealTimeCardPayment ProcessRealTimeCardPayment(Creds.TestCredentials.RequestProcessRealTimeCardPayment request) {
            return base.Channel.ProcessRealTimeCardPayment(request);
        }
        
        public System.Threading.Tasks.Task<Creds.TestCredentials.ResponseProcessRealTimeCardPayment> ProcessRealTimeCardPaymentAsync(Creds.TestCredentials.RequestProcessRealTimeCardPayment request) {
            return base.Channel.ProcessRealTimeCardPaymentAsync(request);
        }
        
        public Creds.TestCredentials.ResponseProcessCardPaymentForCustomerAccount GetCardPaymentStatusForCustomerAccount(Creds.TestCredentials.RequestGetCardPaymentStatusForCustomerAccount request) {
            return base.Channel.GetCardPaymentStatusForCustomerAccount(request);
        }
        
        public System.Threading.Tasks.Task<Creds.TestCredentials.ResponseProcessCardPaymentForCustomerAccount> GetCardPaymentStatusForCustomerAccountAsync(Creds.TestCredentials.RequestGetCardPaymentStatusForCustomerAccount request) {
            return base.Channel.GetCardPaymentStatusForCustomerAccountAsync(request);
        }
        
        public Creds.TestCredentials.ResponseGetFacilityAccountConfiguration GetFacilityAccountConfiguration(Creds.TestCredentials.RequestGetFacilityAccountConfiguration request) {
            return base.Channel.GetFacilityAccountConfiguration(request);
        }
        
        public System.Threading.Tasks.Task<Creds.TestCredentials.ResponseGetFacilityAccountConfiguration> GetFacilityAccountConfigurationAsync(Creds.TestCredentials.RequestGetFacilityAccountConfiguration request) {
            return base.Channel.GetFacilityAccountConfigurationAsync(request);
        }
        
        public Creds.TestCredentials.ResponseRetrieveOverdueStatusHistory GetOverdueStatusHistoryForDateRange(Creds.TestCredentials.RequestRetrieveOverdueStatus request) {
            return base.Channel.GetOverdueStatusHistoryForDateRange(request);
        }
        
        public System.Threading.Tasks.Task<Creds.TestCredentials.ResponseRetrieveOverdueStatusHistory> GetOverdueStatusHistoryForDateRangeAsync(Creds.TestCredentials.RequestRetrieveOverdueStatus request) {
            return base.Channel.GetOverdueStatusHistoryForDateRangeAsync(request);
        }
        
        public Creds.TestCredentials.ResponseGetPaymentToken GetPaymentToken(Creds.TestCredentials.RequestGetPaymentToken request) {
            return base.Channel.GetPaymentToken(request);
        }
        
        public System.Threading.Tasks.Task<Creds.TestCredentials.ResponseGetPaymentToken> GetPaymentTokenAsync(Creds.TestCredentials.RequestGetPaymentToken request) {
            return base.Channel.GetPaymentTokenAsync(request);
        }
        
        public Creds.TestCredentials.ResponseGetCasualPaymentToken GetCasualPaymentToken(Creds.TestCredentials.RequestGetCasualPaymentToken request) {
            return base.Channel.GetCasualPaymentToken(request);
        }
        
        public System.Threading.Tasks.Task<Creds.TestCredentials.ResponseGetCasualPaymentToken> GetCasualPaymentTokenAsync(Creds.TestCredentials.RequestGetCasualPaymentToken request) {
            return base.Channel.GetCasualPaymentTokenAsync(request);
        }
        
        public Creds.TestCredentials.ResponseGetCasualPaymentsForDateRange GetCasualPaymentsForDateRange(Creds.TestCredentials.RequestGetCasualPaymentsForDateRange request) {
            return base.Channel.GetCasualPaymentsForDateRange(request);
        }
        
        public System.Threading.Tasks.Task<Creds.TestCredentials.ResponseGetCasualPaymentsForDateRange> GetCasualPaymentsForDateRangeAsync(Creds.TestCredentials.RequestGetCasualPaymentsForDateRange request) {
            return base.Channel.GetCasualPaymentsForDateRangeAsync(request);
        }
        
        public Creds.TestCredentials.ResponseGetCasualPaymentsByPaymentRef GetCasualPaymentsByPaymentRef(Creds.TestCredentials.RequestGetCasualPaymentsByPaymentRef request) {
            return base.Channel.GetCasualPaymentsByPaymentRef(request);
        }
        
        public System.Threading.Tasks.Task<Creds.TestCredentials.ResponseGetCasualPaymentsByPaymentRef> GetCasualPaymentsByPaymentRefAsync(Creds.TestCredentials.RequestGetCasualPaymentsByPaymentRef request) {
            return base.Channel.GetCasualPaymentsByPaymentRefAsync(request);
        }
        
        public Creds.TestCredentials.ResponseDeletePaySchedule DeletePenaltyFeeSchedule(Creds.TestCredentials.RequestDeletePaySchedule request) {
            return base.Channel.DeletePenaltyFeeSchedule(request);
        }
        
        public System.Threading.Tasks.Task<Creds.TestCredentials.ResponseDeletePaySchedule> DeletePenaltyFeeScheduleAsync(Creds.TestCredentials.RequestDeletePaySchedule request) {
            return base.Channel.DeletePenaltyFeeScheduleAsync(request);
        }
        
        public Creds.TestCredentials.ResponseGetMonthlyCollections GetMonthlyCollections(Creds.TestCredentials.RequestGetMonthlyCollections request) {
            return base.Channel.GetMonthlyCollections(request);
        }
        
        public System.Threading.Tasks.Task<Creds.TestCredentials.ResponseGetMonthlyCollections> GetMonthlyCollectionsAsync(Creds.TestCredentials.RequestGetMonthlyCollections request) {
            return base.Channel.GetMonthlyCollectionsAsync(request);
        }
        
        public Creds.TestCredentials.ResponseGetActiveAccounts GetActiveAccounts(Creds.TestCredentials.RequestGetActiveAccounts request) {
            return base.Channel.GetActiveAccounts(request);
        }
        
        public System.Threading.Tasks.Task<Creds.TestCredentials.ResponseGetActiveAccounts> GetActiveAccountsAsync(Creds.TestCredentials.RequestGetActiveAccounts request) {
            return base.Channel.GetActiveAccountsAsync(request);
        }
        
        public Creds.TestCredentials.ResponseTransferCustomerAccount TransferCustomerAccount(Creds.TestCredentials.RequestTransferCustomerAccount request) {
            return base.Channel.TransferCustomerAccount(request);
        }
        
        public System.Threading.Tasks.Task<Creds.TestCredentials.ResponseTransferCustomerAccount> TransferCustomerAccountAsync(Creds.TestCredentials.RequestTransferCustomerAccount request) {
            return base.Channel.TransferCustomerAccountAsync(request);
        }
        
        public Creds.TestCredentials.ResponseGetPaymentHistoryByStatusForDateRange GetPaymentHistoryByStatusForDateRange(Creds.TestCredentials.RequestGetPaymentHistoryByStatusForDateRange request) {
            return base.Channel.GetPaymentHistoryByStatusForDateRange(request);
        }
        
        public System.Threading.Tasks.Task<Creds.TestCredentials.ResponseGetPaymentHistoryByStatusForDateRange> GetPaymentHistoryByStatusForDateRangeAsync(Creds.TestCredentials.RequestGetPaymentHistoryByStatusForDateRange request) {
            return base.Channel.GetPaymentHistoryByStatusForDateRangeAsync(request);
        }
        
        public Creds.TestCredentials.ResponseGetPaymentHistoryStatusByAccountId GetPaymentHistoryStatusByAccountId(Creds.TestCredentials.RequestGetPaymentHistoryStatusByAccountId request) {
            return base.Channel.GetPaymentHistoryStatusByAccountId(request);
        }
        
        public System.Threading.Tasks.Task<Creds.TestCredentials.ResponseGetPaymentHistoryStatusByAccountId> GetPaymentHistoryStatusByAccountIdAsync(Creds.TestCredentials.RequestGetPaymentHistoryStatusByAccountId request) {
            return base.Channel.GetPaymentHistoryStatusByAccountIdAsync(request);
        }
        
        public Creds.TestCredentials.ResponseAdjustAccountTerminationDate AdjustAccountTerminationDate(Creds.TestCredentials.RequestAdjustAccountTerminationDate request) {
            return base.Channel.AdjustAccountTerminationDate(request);
        }
        
        public System.Threading.Tasks.Task<Creds.TestCredentials.ResponseAdjustAccountTerminationDate> AdjustAccountTerminationDateAsync(Creds.TestCredentials.RequestAdjustAccountTerminationDate request) {
            return base.Channel.AdjustAccountTerminationDateAsync(request);
        }
        
        public Creds.TestCredentials.ResponseGetClosedAccountsForDateRange GetClosedAccountsForDateRange(Creds.TestCredentials.RequestGetClosedAccountsForDateRange request) {
            return base.Channel.GetClosedAccountsForDateRange(request);
        }
        
        public System.Threading.Tasks.Task<Creds.TestCredentials.ResponseGetClosedAccountsForDateRange> GetClosedAccountsForDateRangeAsync(Creds.TestCredentials.RequestGetClosedAccountsForDateRange request) {
            return base.Channel.GetClosedAccountsForDateRangeAsync(request);
        }
    }
}
